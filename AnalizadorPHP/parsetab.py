
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ANDlOGICAL ARROW AS COMMA DIFF DIFFERENT DIVIDE DOUBLEPOINT ECHO ELSE ELSEIF ENDIF ENDWHILE EQUALS EQUALSLOGICAL EXPONENTIAL FALSE FIND FLOAT FOREACH FUNCTION FUNCTION_NAME GREATEREQUAL GREATERTHAN ID IDENTICAL IF KEYS LBRACKET LCURLY LESSEQUAL LESSTHAN LPAREN MAP MINUS NEW NOTIDENTICAL NOTLOGICAL NUMBER ORLOGICAL PLUS POINT PRINT PRINT_R PUSH RBRACKET RCURLY READLINE REMOVE RETURN RPAREN SEMICOLON SET SIMPLEARROW STRING STRINGCC TIMES TRUE UNION VAR VARIABLE VAR_DUMP VAR_EXPORT VECTOR WHILE\n    expresiones : expresion\n                | expresion expresiones\n    \n    expresion : var_asignar\n                | var_declarar\n                | expresiones_de_salida\n                | estructuras_de_control\n                | var_plusminus\n                | funciones_datos_estructurados\n                | funcion_declaracion\n                | return\n                | funcion_ejecucion\n                | foreach\n    \n    var_declarar : VAR var_asignar\n    \n    var_asignar : VARIABLE EQUALS var_asignar_contenido SEMICOLON\n                | VARIABLE EQUALS funcion_ejecucion\n    \n    var_asignar_contenido : VARIABLE\n                    | elemento_numerico\n                    | elemento_string\n                    | elemento_logico\n                    | datos_estructurados\n                    | funciones_ingreso_datos\n    \n    var_plusminus : VARIABLE PLUS PLUS SEMICOLON\n                | VARIABLE MINUS MINUS SEMICOLON\n    \n    elemento_numerico : elemento_numerico operador elemento_numerico\n                        | FLOAT\n                        | NUMBER\n                        | LPAREN elemento_numerico RPAREN\n                        | VARIABLE\n    \n    operador : PLUS\n            | MINUS\n            | DIVIDE\n            | EXPONENTIAL\n            | TIMES\n    elemento_string : STRING\n                        | STRINGCC\n                        | VARIABLE\n    \n    elemento_logico : elemento_logico_pri\n                    | elemento_logico comparador elemento_logico\n                    | NOTLOGICAL elemento_logico\n                    | LPAREN elemento_logico RPAREN\n                    | VARIABLE\n                    | elemento_numerico comparador elemento_numerico\n                    | elemento_string comparador elemento_string\n    \n    elemento_logico_pri : TRUE\n                        | FALSE\n    \n    comparador : IDENTICAL\n               | NOTIDENTICAL\n               | EQUALSLOGICAL\n               | DIFFERENT\n               | GREATEREQUAL\n               | LESSEQUAL\n               | GREATERTHAN\n               | LESSTHAN\n               | ANDlOGICAL\n               | ORLOGICAL\n    \n    param : VARIABLE\n            | elemento_string\n            | elemento_numerico\n            | elemento_logico\n    \n    params : param\n            | param COMMA params\n    \n    params_points : param\n                | param POINT params_points\n    \n    params_unitype : only_string\n                    | only_numerico\n                    | only_logico\n    \n    only_string : elemento_string\n                | elemento_string COMMA only_string\n    \n    only_numerico : elemento_numerico\n                | elemento_numerico COMMA only_numerico\n    \n    only_logico : elemento_logico\n                | elemento_logico COMMA only_logico\n    \n    optional_params : param\n                        | ""\n                        | param COMMA optional_params\n    \n    expresiones_de_salida : echo\n                            | print\n                            | vardump\n                            | print_r\n                            | var_export\n    \n    echo : ECHO params SEMICOLON\n            | ECHO params_points SEMICOLON\n    \n    print : PRINT param SEMICOLON\n    \n    print_r : PRINT_R LPAREN param RPAREN SEMICOLON\n    \n    vardump : VAR_DUMP LPAREN param RPAREN SEMICOLON\n    \n    var_export : VAR_EXPORT LPAREN param RPAREN SEMICOLON\n    \n    funciones_ingreso_datos : VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN\n                        | READLINE LPAREN RPAREN\n                        | READLINE LPAREN elemento_string RPAREN\n    \n    estructuras_de_control : if_structures\n                            | estructuras_while\n    \n    if_structures : if\n            | if else\n            | if else_if else\n            | if else_if\n            | if_r ENDIF SEMICOLON\n            | if_r else_r ENDIF SEMICOLON\n            | if_r elseif_r else_r ENDIF SEMICOLON\n            | if_r elseif_r ENDIF SEMICOLON\n\n    \n    if : IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n    \n    else : ELSE LCURLY expresiones RCURLY\n    \n    else_if : ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | else_if else_if\n    \n    if_r : IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones\n    \n    else_r : ELSE DOUBLEPOINT expresiones\n    \n    elseif_r : ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones\n                | elseif_r elseif_r\n    \n    estructuras_while : while\n\n    \n    while : WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON\n    \n    foreach : FOREACH LPAREN foreach_content RPAREN LCURLY expresiones RCURLY\n    \n    foreach_content : VARIABLE AS VARIABLE\n                    | VARIABLE AS VARIABLE ARROW VARIABLE\n    \n    funcion_declaracion : FUNCTION funcion_cabecera_declaracion funciones_cuerpo\n                        | VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo\n                        | VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo\n    \n    funcion_cabecera_declaracion : FUNCTION_NAME LPAREN variables_por_comma RPAREN\n                                    | FUNCTION_NAME LPAREN RPAREN\n    \n    funciones_cuerpo : LCURLY expresiones RCURLY\n                    | LCURLY RCURLY\n    \n    return : RETURN var_asignar_contenido SEMICOLON\n    \n   funcion_ejecucion : FUNCTION_NAME LPAREN params RPAREN SEMICOLON\n                    | FUNCTION_NAME LPAREN RPAREN SEMICOLON\n   \n    variables_por_comma : VARIABLE\n                        | VARIABLE COMMA variables_por_comma\n    \n    datos_estructurados : map\n                        | vector\n                        | set\n    \n    map : NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN\n        | NEW MAP LPAREN RPAREN\n    \n    clave_valor : elemento_string ARROW param\n                    | NUMBER ARROW param\n    \n    todos_clave_valor : clave_valor\n                            | clave_valor COMMA todos_clave_valor\n    \n    vector : NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN\n                | NEW VECTOR LPAREN RPAREN\n    \n    datos : FLOAT\n                | NUMBER\n                | STRING\n                | STRINGCC\n                | elemento_logico_pri\n    \n    llenar : datos\n                | datos COMMA llenar\n    \n    set : NEW SET LPAREN LBRACKET params RBRACKET RPAREN\n            | NEW SET LPAREN RPAREN\n    \n    funciones_datos_estructurados : funciones_map\n                                        | funciones_set\n                                        | funciones_vector\n    \n    funciones_map : key_map\n                       | diff_map\n    \n    key_map : VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON\n    \n    diff_map : VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON\n    \n    funciones_vector : find_vector\n                        | push_vector\n    \n    find_vector : VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON\n    \n    push_vector : VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON\n                    | VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON\n                    | VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON\n    \n    funciones_set : union_set\n                    | remove_set\n    \n    union_set : VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON\n    \n    remove_set :  VARIABLE SIMPLEARROW REMOVE LPAREN params_unitype RPAREN SEMICOLON\n                    | VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params_unitype RBRACKET RPAREN SEMICOLON\n    '
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,29,30,34,36,37,38,39,40,41,42,46,50,63,67,76,77,86,87,88,89,90,98,99,101,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,136,139,140,149,150,151,152,153,158,159,160,162,163,168,169,172,173,174,175,176,177,180,185,201,203,213,215,217,225,234,235,236,238,240,242,244,246,248,249,251,256,257,258,261,263,264,265,266,270,271,272,286,288,289,290,292,293,298,299,306,307,312,313,314,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,51,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,55,81,81,-92,-109,-150,-151,-160,-161,-154,-155,55,-13,133,137,81,148,155,81,81,-93,-95,137,137,-15,55,-115,13,183,-122,186,186,-29,-30,-31,-32,-33,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,189,137,137,81,189,-81,-82,81,81,-83,-104,-94,13,137,-96,13,137,-14,183,-22,-23,223,81,-121,186,-124,250,137,-97,-99,223,81,183,-120,183,137,189,81,81,-123,13,-85,-84,-86,-101,-98,13,13,13,13,189,186,137,318,320,321,81,13,13,-116,-163,-157,-158,189,81,81,-112,13,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,50,89,90,101,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-13,-93,-95,-15,-115,14,-122,-81,-82,-83,-104,-94,14,-96,14,-14,-22,-23,-121,-124,-97,-99,-120,-123,14,-85,-84,-86,-101,-98,14,14,14,14,14,14,-116,-163,-157,-158,-112,14,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,46,50,89,90,101,107,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,102,-13,-93,-95,-15,178,-115,25,-122,-81,-82,-83,-104,-94,25,-96,25,-14,-22,-23,-121,-124,-97,-99,-120,-123,25,-85,-84,-86,-101,-98,25,25,25,25,25,25,-116,-163,-157,-158,-112,25,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,50,89,90,101,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-13,-93,-95,-15,-115,26,-122,-81,-82,-83,-104,-94,26,-96,26,-14,-22,-23,-121,-124,-97,-99,-120,-123,26,-85,-84,-86,-101,-98,26,26,26,26,26,26,-116,-163,-157,-158,-112,26,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'FUNCTION_NAME':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,34,36,37,38,39,40,41,42,46,50,89,90,101,107,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,53,-92,-109,-150,-151,-160,-161,-154,-155,27,-13,-93,-95,-15,27,-115,27,-122,-81,-82,-83,-104,-94,27,-96,27,-14,-22,-23,-121,-124,-97,-99,-120,-123,27,-85,-84,-86,-101,-98,27,27,27,27,27,27,-116,-163,-157,-158,-112,27,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'FOREACH':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,50,89,90,101,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-13,-93,-95,-15,-115,28,-122,-81,-82,-83,-104,-94,28,-96,28,-14,-22,-23,-121,-124,-97,-99,-120,-123,28,-85,-84,-86,-101,-98,28,28,28,28,28,28,-116,-163,-157,-158,-112,28,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'ECHO':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,50,89,90,101,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-13,-93,-95,-15,-115,29,-122,-81,-82,-83,-104,-94,29,-96,29,-14,-22,-23,-121,-124,-97,-99,-120,-123,29,-85,-84,-86,-101,-98,29,29,29,29,29,29,-116,-163,-157,-158,-112,29,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,50,89,90,101,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-13,-93,-95,-15,-115,30,-122,-81,-82,-83,-104,-94,30,-96,30,-14,-22,-23,-121,-124,-97,-99,-120,-123,30,-85,-84,-86,-101,-98,30,30,30,30,30,30,-116,-163,-157,-158,-112,30,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'VAR_DUMP':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,50,89,90,101,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-13,-93,-95,-15,-115,31,-122,-81,-82,-83,-104,-94,31,-96,31,-14,-22,-23,-121,-124,-97,-99,-120,-123,31,-85,-84,-86,-101,-98,31,31,31,31,31,31,-116,-163,-157,-158,-112,31,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'PRINT_R':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,50,89,90,101,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-13,-93,-95,-15,-115,32,-122,-81,-82,-83,-104,-94,32,-96,32,-14,-22,-23,-121,-124,-97,-99,-120,-123,32,-85,-84,-86,-101,-98,32,32,32,32,32,32,-116,-163,-157,-158,-112,32,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'VAR_EXPORT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,26,34,36,37,38,39,40,41,42,46,50,89,90,101,107,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,71,-92,-109,-150,-151,-160,-161,-154,-155,71,-13,-93,-95,-15,71,-115,33,-122,-81,-82,-83,-104,-94,33,-96,33,-14,-22,-23,-121,-124,-97,-99,-120,-123,33,-85,-84,-86,-101,-98,33,33,33,33,33,33,-116,-163,-157,-158,-112,33,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,50,89,90,91,101,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,211,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-13,-93,-95,161,-15,-115,43,-122,-81,-82,-83,-104,-94,43,-96,43,-14,-22,-23,-121,-124,161,-97,-99,-120,-123,43,-85,-84,-86,-101,-98,43,43,43,43,43,43,-116,-163,-157,-158,-112,43,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,50,89,90,101,108,109,111,149,150,153,158,159,160,163,168,172,174,175,180,201,215,217,236,248,249,251,256,257,258,261,263,264,265,266,292,293,298,299,306,307,317,323,326,327,331,343,344,345,346,347,351,352,353,354,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-13,-93,-95,-15,-115,44,-122,-81,-82,-83,-104,-94,44,-96,44,-14,-22,-23,-121,-124,-97,-99,-120,-123,44,-85,-84,-86,-101,-98,44,44,44,44,44,44,-116,-163,-157,-158,-112,44,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,45,50,89,90,101,108,111,149,150,153,158,159,163,172,174,175,180,201,215,217,236,248,251,256,257,258,261,298,299,306,307,317,326,327,331,343,344,345,346,347,351,352,353,354,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-2,-13,-93,-95,-15,-115,-122,-81,-82,-83,-104,-94,-96,-14,-22,-23,-121,-124,-97,-99,-120,-123,-85,-84,-86,-101,-98,-116,-163,-157,-158,-112,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'RCURLY':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,45,50,89,90,101,108,109,111,149,150,153,158,159,163,172,174,175,179,180,201,212,215,217,236,248,251,256,257,258,261,285,294,296,298,299,306,307,317,324,326,327,331,342,343,344,345,346,347,351,352,353,354,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-2,-13,-93,-95,-15,-115,180,-122,-81,-82,-83,-104,-94,-96,-14,-22,-23,236,-121,-124,258,-97,-99,-120,-123,-85,-84,-86,-101,-98,317,326,327,-116,-163,-157,-158,-112,343,-100,-110,-117,351,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'ENDIF':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,35,36,37,38,39,40,41,42,45,50,89,90,94,95,101,108,111,149,150,153,158,159,163,165,166,172,174,175,180,201,215,217,218,236,248,251,256,257,258,261,295,298,299,306,307,317,325,326,327,331,343,344,345,346,347,351,352,353,354,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,93,-109,-150,-151,-160,-161,-154,-155,-2,-13,-93,-95,164,167,-15,-115,-122,-81,-82,-83,-104,-94,-96,-108,216,-14,-22,-23,-121,-124,-97,-99,-106,-120,-123,-85,-84,-86,-101,-98,-105,-116,-163,-157,-158,-112,-107,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,35,36,37,38,39,40,41,42,45,50,89,90,95,101,108,111,149,150,153,158,159,163,165,172,174,175,180,201,215,217,236,248,251,256,257,258,261,295,298,299,306,307,317,325,326,327,331,343,344,345,346,347,351,352,353,354,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,91,96,-109,-150,-151,-160,-161,-154,-155,-2,-13,-93,91,96,-15,-115,-122,-81,-82,-83,211,-94,-96,-108,-14,-22,-23,-121,-124,-97,-99,-120,-123,-85,-84,-86,-101,-98,-105,-116,-163,-157,-158,-112,-107,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'ELSEIF':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,35,36,37,38,39,40,41,42,45,50,89,90,95,101,108,111,149,150,153,158,159,163,165,172,174,175,180,201,215,217,236,248,251,256,257,258,261,295,298,299,306,307,317,325,326,327,331,343,344,345,346,347,351,352,353,354,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,92,97,-109,-150,-151,-160,-161,-154,-155,-2,-13,-93,92,97,-15,-115,-122,-81,-82,-83,92,-94,-96,97,-14,-22,-23,-121,-124,-97,-99,-120,-123,-85,-84,-86,-101,-98,-105,-116,-163,-157,-158,-112,-107,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'ENDWHILE':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,45,50,89,90,101,108,111,149,150,153,158,159,163,172,174,175,180,201,215,217,236,248,251,256,257,258,261,297,298,299,306,307,317,326,327,331,343,344,345,346,347,351,352,353,354,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-76,-77,-78,-79,-80,-90,-91,-147,-148,-149,-92,-109,-150,-151,-160,-161,-154,-155,-2,-13,-93,-95,-15,-115,-122,-81,-82,-83,-104,-94,-96,-14,-22,-23,-121,-124,-97,-99,-120,-123,-85,-84,-86,-101,-98,328,-116,-163,-157,-158,-112,-100,-110,-117,-102,-111,-164,-159,-152,-103,-153,-162,-156,]),'EQUALS':([13,51,],[46,107,]),'PLUS':([13,47,55,56,61,62,81,83,131,133,137,138,155,184,186,187,191,193,223,230,239,303,],[47,103,-28,114,-25,-26,-28,114,114,-28,-28,114,-28,114,-28,114,-27,114,-28,114,114,114,]),'MINUS':([13,48,55,56,61,62,81,83,131,133,137,138,155,184,186,187,191,193,223,230,239,303,],[48,104,-28,115,-25,-26,-28,115,115,-28,-28,115,-28,115,-28,115,-27,115,-28,115,115,115,]),'SIMPLEARROW':([13,155,],[49,208,]),'FLOAT':([26,29,30,46,63,67,76,86,87,88,98,99,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,136,139,151,152,162,169,176,177,185,213,225,234,240,244,246,271,272,290,313,314,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-29,-30,-31,-32,-33,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'NUMBER':([26,29,30,46,63,67,76,86,87,88,98,99,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,136,139,151,152,162,169,176,177,185,213,225,234,240,242,244,246,271,272,290,312,313,314,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-29,-30,-31,-32,-33,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,62,62,62,62,62,62,62,62,62,62,62,62,62,62,282,62,62,62,62,62,282,62,62,]),'LPAREN':([26,27,28,29,30,31,32,33,43,44,46,53,63,67,71,72,76,86,87,88,92,97,98,99,102,105,106,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,136,139,141,142,143,151,152,161,162,169,176,177,178,185,213,225,234,240,244,246,252,253,254,255,271,272,290,313,314,],[63,76,77,63,63,86,87,88,98,99,63,110,63,136,139,140,63,63,63,63,162,169,136,136,173,176,177,63,185,185,-29,-30,-31,-32,-33,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,136,136,63,197,198,199,63,63,213,136,136,63,63,235,185,136,63,63,136,63,63,287,288,289,290,185,136,63,63,63,]),'STRING':([26,29,30,46,63,67,76,86,87,88,98,99,107,119,120,121,122,123,124,125,126,127,128,129,130,136,139,140,151,152,162,169,176,177,213,225,234,240,242,244,246,270,272,290,312,313,314,],[64,64,64,64,64,64,64,64,64,64,64,64,64,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'STRINGCC':([26,29,30,46,63,67,76,86,87,88,98,99,107,119,120,121,122,123,124,125,126,127,128,129,130,136,139,140,151,152,162,169,176,177,213,225,234,240,242,244,246,270,272,290,312,313,314,],[65,65,65,65,65,65,65,65,65,65,65,65,65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'NOTLOGICAL':([26,29,30,46,63,67,76,86,87,88,98,99,107,119,120,121,122,123,124,125,126,127,128,130,136,139,151,152,162,169,176,177,213,225,234,240,244,246,272,290,313,314,],[67,67,67,67,67,67,67,67,67,67,67,67,67,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'READLINE':([26,46,107,],[72,72,72,]),'TRUE':([26,29,30,46,63,67,76,86,87,88,98,99,107,119,120,121,122,123,124,125,126,127,128,130,136,139,151,152,162,169,176,177,213,225,234,240,244,246,272,290,313,314,],[73,73,73,73,73,73,73,73,73,73,73,73,73,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'FALSE':([26,29,30,46,63,67,76,86,87,88,98,99,107,119,120,121,122,123,124,125,126,127,128,130,136,139,151,152,162,169,176,177,213,225,234,240,244,246,272,290,313,314,],[74,74,74,74,74,74,74,74,74,74,74,74,74,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'NEW':([26,46,107,],[75,75,75,]),'REMOVE':([49,],[105,]),'PUSH':([49,],[106,]),'LCURLY':([52,91,182,202,220,221,237,260,267,291,309,],[109,160,-119,249,263,265,-118,292,109,323,109,]),'SEMICOLON':([54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,73,74,78,79,80,81,82,83,84,85,93,100,103,104,135,137,145,146,164,167,184,186,187,188,189,190,191,192,195,200,204,205,206,207,209,210,216,241,243,245,247,268,273,274,310,328,329,330,332,336,337,338,348,349,350,],[111,-16,-17,-18,-19,-20,-21,-25,-26,-34,-35,-37,-127,-128,-129,-44,-45,149,150,-60,-28,-57,-58,-59,153,163,172,174,175,-39,-41,201,-60,215,217,-24,-28,-42,-43,-36,-38,-27,-40,-88,248,-61,-62,-63,251,256,257,261,-89,-131,-137,-146,299,306,307,-87,344,345,346,-130,-136,-145,347,352,353,354,]),'DIVIDE':([55,56,61,62,81,83,131,133,137,138,155,184,186,187,191,193,223,230,239,303,],[-28,116,-25,-26,-28,116,116,-28,-28,116,-28,116,-28,116,-27,116,-28,116,116,116,]),'EXPONENTIAL':([55,56,61,62,81,83,131,133,137,138,155,184,186,187,191,193,223,230,239,303,],[-28,117,-25,-26,-28,117,117,-28,-28,117,-28,117,-28,117,-27,117,-28,117,117,117,]),'TIMES':([55,56,61,62,81,83,131,133,137,138,155,184,186,187,191,193,223,230,239,303,],[-28,118,-25,-26,-28,118,118,-28,-28,118,-28,118,-28,118,-27,118,-28,118,118,118,]),'IDENTICAL':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,119,119,119,-25,-26,-34,-35,-37,-44,-45,-28,119,119,119,119,119,-28,119,119,-28,119,-28,119,119,-24,-28,-42,-43,-36,119,-27,-40,119,119,119,-28,119,119,119,119,119,]),'NOTIDENTICAL':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,120,120,120,-25,-26,-34,-35,-37,-44,-45,-28,120,120,120,120,120,-28,120,120,-28,120,-28,120,120,-24,-28,-42,-43,-36,120,-27,-40,120,120,120,-28,120,120,120,120,120,]),'EQUALSLOGICAL':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,121,121,121,-25,-26,-34,-35,-37,-44,-45,-28,121,121,121,121,121,-28,121,121,-28,121,-28,121,121,-24,-28,-42,-43,-36,121,-27,-40,121,121,121,-28,121,121,121,121,121,]),'DIFFERENT':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,122,122,122,-25,-26,-34,-35,-37,-44,-45,-28,122,122,122,122,122,-28,122,122,-28,122,-28,122,122,-24,-28,-42,-43,-36,122,-27,-40,122,122,122,-28,122,122,122,122,122,]),'GREATEREQUAL':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,123,123,123,-25,-26,-34,-35,-37,-44,-45,-28,123,123,123,123,123,-28,123,123,-28,123,-28,123,123,-24,-28,-42,-43,-36,123,-27,-40,123,123,123,-28,123,123,123,123,123,]),'LESSEQUAL':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,124,124,124,-25,-26,-34,-35,-37,-44,-45,-28,124,124,124,124,124,-28,124,124,-28,124,-28,124,124,-24,-28,-42,-43,-36,124,-27,-40,124,124,124,-28,124,124,124,124,124,]),'GREATERTHAN':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,125,125,125,-25,-26,-34,-35,-37,-44,-45,-28,125,125,125,125,125,-28,125,125,-28,125,-28,125,125,-24,-28,-42,-43,-36,125,-27,-40,125,125,125,-28,125,125,125,125,125,]),'LESSTHAN':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,126,126,126,-25,-26,-34,-35,-37,-44,-45,-28,126,126,126,126,126,-28,126,126,-28,126,-28,126,126,-24,-28,-42,-43,-36,126,-27,-40,126,126,126,-28,126,126,126,126,126,]),'ANDlOGICAL':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,127,127,127,-25,-26,-34,-35,-37,-44,-45,-28,127,127,127,127,127,-28,127,127,-28,127,-28,127,127,-24,-28,-42,-43,-36,127,-27,-40,127,127,127,-28,127,127,127,127,127,]),'ORLOGICAL':([55,56,57,58,61,62,64,65,66,73,74,81,82,83,84,131,132,133,134,135,137,138,155,170,171,184,186,187,188,189,190,191,192,193,214,219,223,229,230,231,259,278,],[-28,128,128,128,-25,-26,-34,-35,-37,-44,-45,-28,128,128,128,128,128,-28,128,128,-28,128,-28,128,128,-24,-28,-42,-43,-36,128,-27,-40,128,128,128,-28,128,128,128,128,128,]),'COMMA':([61,62,64,65,66,73,74,80,81,82,83,84,135,137,146,183,184,186,187,188,189,190,191,192,194,223,229,230,231,232,280,301,303,334,335,],[-25,-26,-34,-35,-37,-44,-45,151,-28,-57,-58,-59,-39,-41,151,238,-24,-28,-42,-43,-36,-38,-27,-40,240,-28,270,271,272,151,312,270,271,-132,-133,]),'POINT':([61,62,64,65,66,73,74,80,81,82,83,84,135,137,184,186,187,188,189,190,191,192,205,],[-25,-26,-34,-35,-37,-44,-45,152,-28,-57,-58,-59,-39,-41,-24,-28,-42,-43,-36,-38,-27,-40,152,]),'RPAREN':([61,62,64,65,66,73,74,76,81,82,83,84,110,131,132,133,135,137,140,144,146,147,154,155,156,157,170,171,181,183,184,186,187,188,189,190,191,192,193,196,197,198,199,204,214,219,222,223,224,226,227,228,229,230,231,232,233,239,250,259,276,277,278,287,300,301,302,303,304,305,308,311,315,316,318,319,320,321,322,339,340,341,],[-25,-26,-34,-35,-37,-44,-45,145,-28,-57,-58,-59,182,191,192,-28,-39,-28,195,200,-60,202,207,-28,209,210,220,221,237,-125,-24,-28,-42,-43,-36,-38,-27,-40,191,241,243,245,247,-61,260,262,267,-28,268,-64,-65,-66,-67,-69,-71,273,274,191,-113,291,309,-126,310,319,329,-67,-68,-69,-70,-72,330,332,336,337,-114,338,339,340,341,348,349,350,]),'RBRACKET':([61,62,64,65,66,73,74,81,82,83,84,135,137,146,184,186,187,188,189,190,191,192,204,223,226,227,228,229,230,231,269,275,279,280,283,284,301,302,303,304,305,333,334,335,],[-25,-26,-34,-35,-37,-44,-45,-28,-57,-58,-59,-39,-41,-60,-24,-28,-42,-43,-36,-38,-27,-40,-61,-28,-64,-65,-66,-67,-69,-71,300,308,311,-134,315,316,-67,-68,-69,-70,-72,-135,-132,-133,]),'ARROW':([64,65,189,250,281,282,],[-34,-35,-36,286,313,314,]),'MAP':([75,],[141,]),'VECTOR':([75,],[142,]),'SET':([75,],[143,]),'DOUBLEPOINT':([96,220,221,262,],[168,264,266,293,]),'AS':([148,],[203,]),'LBRACKET':([176,177,197,198,199,],[225,234,242,244,246,]),'KEYS':([208,],[252,]),'DIFF':([208,],[253,]),'UNION':([208,],[254,]),'FIND':([208,],[255,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresiones':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[1,45,179,212,218,285,294,295,296,297,324,325,342,]),'expresion':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[2,2,2,2,2,2,2,2,2,2,2,2,2,]),'var_asignar':([0,2,14,109,160,168,249,263,264,265,266,292,293,323,],[3,3,50,3,3,3,3,3,3,3,3,3,3,3,]),'var_declarar':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expresiones_de_salida':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'estructuras_de_control':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'var_plusminus':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'funciones_datos_estructurados':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'funcion_declaracion':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'return':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funcion_ejecucion':([0,2,46,107,109,160,168,249,263,264,265,266,292,293,323,],[11,11,101,101,11,11,11,11,11,11,11,11,11,11,11,]),'foreach':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'echo':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'print':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'vardump':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'print_r':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'var_export':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'if_structures':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'estructuras_while':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'funciones_map':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'funciones_set':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'funciones_vector':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'if':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),'if_r':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'while':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'key_map':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[37,37,37,37,37,37,37,37,37,37,37,37,37,]),'diff_map':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[38,38,38,38,38,38,38,38,38,38,38,38,38,]),'union_set':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[39,39,39,39,39,39,39,39,39,39,39,39,39,]),'remove_set':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[40,40,40,40,40,40,40,40,40,40,40,40,40,]),'find_vector':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[41,41,41,41,41,41,41,41,41,41,41,41,41,]),'push_vector':([0,2,109,160,168,249,263,264,265,266,292,293,323,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'funcion_cabecera_declaracion':([25,],[52,]),'var_asignar_contenido':([26,46,107,],[54,100,100,]),'elemento_numerico':([26,29,30,46,63,67,76,86,87,88,98,99,107,112,113,130,136,139,151,152,162,169,176,177,185,213,225,234,240,244,246,271,272,290,313,314,],[56,83,83,56,131,138,83,83,83,83,138,138,56,184,187,138,193,83,83,83,138,138,230,83,239,138,230,83,138,83,83,303,138,83,83,83,]),'elemento_string':([26,29,30,46,63,67,76,86,87,88,98,99,107,129,130,136,139,140,151,152,162,169,176,177,213,225,234,240,242,244,246,270,272,290,312,313,314,],[57,82,82,57,134,134,82,82,82,82,134,134,57,188,134,134,82,196,82,82,134,134,229,82,134,229,82,134,281,82,82,301,134,82,281,82,82,]),'elemento_logico':([26,29,30,46,63,67,76,86,87,88,98,99,107,130,136,139,151,152,162,169,176,177,213,225,234,240,244,246,272,290,313,314,],[58,84,84,58,132,135,84,84,84,84,170,171,58,190,132,84,84,84,214,219,231,84,259,231,84,278,84,84,231,84,84,84,]),'datos_estructurados':([26,46,107,],[59,59,59,]),'funciones_ingreso_datos':([26,46,107,],[60,60,60,]),'elemento_logico_pri':([26,29,30,46,63,67,76,86,87,88,98,99,107,130,136,139,151,152,162,169,176,177,213,225,234,240,244,246,272,290,313,314,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'map':([26,46,107,],[68,68,68,]),'vector':([26,46,107,],[69,69,69,]),'set':([26,46,107,],[70,70,70,]),'params':([29,76,151,177,234,244,246,],[78,144,204,233,275,283,284,]),'params_points':([29,152,],[79,206,]),'param':([29,30,76,86,87,88,139,151,152,177,234,244,246,290,313,314,],[80,85,146,154,156,157,194,146,205,232,146,146,146,322,334,335,]),'else':([34,90,],[89,159,]),'else_if':([34,90,158,],[90,158,158,]),'else_r':([35,95,],[94,166,]),'elseif_r':([35,95,165,],[95,165,165,]),'funciones_cuerpo':([52,267,309,],[108,298,331,]),'operador':([56,83,131,138,184,187,193,230,239,303,],[112,112,112,112,112,112,112,112,112,112,]),'comparador':([56,57,58,82,83,84,131,132,134,135,138,170,171,190,193,214,219,229,230,231,259,278,],[113,129,130,129,113,130,113,130,129,130,113,130,130,130,113,130,130,129,113,130,130,130,]),'foreach_content':([77,],[147,]),'variables_por_comma':([110,173,235,238,],[181,222,276,277,]),'params_unitype':([176,225,],[224,269,]),'only_string':([176,225,270,],[226,226,302,]),'only_numerico':([176,225,271,],[227,227,304,]),'only_logico':([176,225,272,],[228,228,305,]),'todos_clave_valor':([242,312,],[279,333,]),'clave_valor':([242,312,],[280,280,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresiones","S'",1,None,None,None),
  ('expresiones -> expresion','expresiones',1,'p_expresiones','sintaxis.py',9),
  ('expresiones -> expresion expresiones','expresiones',2,'p_expresiones','sintaxis.py',10),
  ('expresion -> var_asignar','expresion',1,'p_expresion','sintaxis.py',16),
  ('expresion -> var_declarar','expresion',1,'p_expresion','sintaxis.py',17),
  ('expresion -> expresiones_de_salida','expresion',1,'p_expresion','sintaxis.py',18),
  ('expresion -> estructuras_de_control','expresion',1,'p_expresion','sintaxis.py',19),
  ('expresion -> var_plusminus','expresion',1,'p_expresion','sintaxis.py',20),
  ('expresion -> funciones_datos_estructurados','expresion',1,'p_expresion','sintaxis.py',21),
  ('expresion -> funcion_declaracion','expresion',1,'p_expresion','sintaxis.py',22),
  ('expresion -> return','expresion',1,'p_expresion','sintaxis.py',23),
  ('expresion -> funcion_ejecucion','expresion',1,'p_expresion','sintaxis.py',24),
  ('expresion -> foreach','expresion',1,'p_expresion','sintaxis.py',25),
  ('var_declarar -> VAR var_asignar','var_declarar',2,'p_var_declarar','sintaxis.py',34),
  ('var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',40),
  ('var_asignar -> VARIABLE EQUALS funcion_ejecucion','var_asignar',3,'p_var_asignar','sintaxis.py',41),
  ('var_asignar_contenido -> VARIABLE','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',46),
  ('var_asignar_contenido -> elemento_numerico','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',47),
  ('var_asignar_contenido -> elemento_string','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',48),
  ('var_asignar_contenido -> elemento_logico','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',49),
  ('var_asignar_contenido -> datos_estructurados','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',50),
  ('var_asignar_contenido -> funciones_ingreso_datos','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',51),
  ('var_plusminus -> VARIABLE PLUS PLUS SEMICOLON','var_plusminus',4,'p_var_plusminus','sintaxis.py',56),
  ('var_plusminus -> VARIABLE MINUS MINUS SEMICOLON','var_plusminus',4,'p_var_plusminus','sintaxis.py',57),
  ('elemento_numerico -> elemento_numerico operador elemento_numerico','elemento_numerico',3,'p_elemento_numerico','sintaxis.py',64),
  ('elemento_numerico -> FLOAT','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',65),
  ('elemento_numerico -> NUMBER','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',66),
  ('elemento_numerico -> LPAREN elemento_numerico RPAREN','elemento_numerico',3,'p_elemento_numerico','sintaxis.py',67),
  ('elemento_numerico -> VARIABLE','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',68),
  ('operador -> PLUS','operador',1,'p_operador','sintaxis.py',74),
  ('operador -> MINUS','operador',1,'p_operador','sintaxis.py',75),
  ('operador -> DIVIDE','operador',1,'p_operador','sintaxis.py',76),
  ('operador -> EXPONENTIAL','operador',1,'p_operador','sintaxis.py',77),
  ('operador -> TIMES','operador',1,'p_operador','sintaxis.py',78),
  ('elemento_string -> STRING','elemento_string',1,'p_elemento_string','sintaxis.py',83),
  ('elemento_string -> STRINGCC','elemento_string',1,'p_elemento_string','sintaxis.py',84),
  ('elemento_string -> VARIABLE','elemento_string',1,'p_elemento_string','sintaxis.py',85),
  ('elemento_logico -> elemento_logico_pri','elemento_logico',1,'p_elemento_logico','sintaxis.py',91),
  ('elemento_logico -> elemento_logico comparador elemento_logico','elemento_logico',3,'p_elemento_logico','sintaxis.py',92),
  ('elemento_logico -> NOTLOGICAL elemento_logico','elemento_logico',2,'p_elemento_logico','sintaxis.py',93),
  ('elemento_logico -> LPAREN elemento_logico RPAREN','elemento_logico',3,'p_elemento_logico','sintaxis.py',94),
  ('elemento_logico -> VARIABLE','elemento_logico',1,'p_elemento_logico','sintaxis.py',95),
  ('elemento_logico -> elemento_numerico comparador elemento_numerico','elemento_logico',3,'p_elemento_logico','sintaxis.py',96),
  ('elemento_logico -> elemento_string comparador elemento_string','elemento_logico',3,'p_elemento_logico','sintaxis.py',97),
  ('elemento_logico_pri -> TRUE','elemento_logico_pri',1,'p_elemento_logico_pri','sintaxis.py',102),
  ('elemento_logico_pri -> FALSE','elemento_logico_pri',1,'p_elemento_logico_pri','sintaxis.py',103),
  ('comparador -> IDENTICAL','comparador',1,'p_comparador','sintaxis.py',108),
  ('comparador -> NOTIDENTICAL','comparador',1,'p_comparador','sintaxis.py',109),
  ('comparador -> EQUALSLOGICAL','comparador',1,'p_comparador','sintaxis.py',110),
  ('comparador -> DIFFERENT','comparador',1,'p_comparador','sintaxis.py',111),
  ('comparador -> GREATEREQUAL','comparador',1,'p_comparador','sintaxis.py',112),
  ('comparador -> LESSEQUAL','comparador',1,'p_comparador','sintaxis.py',113),
  ('comparador -> GREATERTHAN','comparador',1,'p_comparador','sintaxis.py',114),
  ('comparador -> LESSTHAN','comparador',1,'p_comparador','sintaxis.py',115),
  ('comparador -> ANDlOGICAL','comparador',1,'p_comparador','sintaxis.py',116),
  ('comparador -> ORLOGICAL','comparador',1,'p_comparador','sintaxis.py',117),
  ('param -> VARIABLE','param',1,'p_param','sintaxis.py',126),
  ('param -> elemento_string','param',1,'p_param','sintaxis.py',127),
  ('param -> elemento_numerico','param',1,'p_param','sintaxis.py',128),
  ('param -> elemento_logico','param',1,'p_param','sintaxis.py',129),
  ('params -> param','params',1,'p_params','sintaxis.py',135),
  ('params -> param COMMA params','params',3,'p_params','sintaxis.py',136),
  ('params_points -> param','params_points',1,'p_params_points','sintaxis.py',141),
  ('params_points -> param POINT params_points','params_points',3,'p_params_points','sintaxis.py',142),
  ('params_unitype -> only_string','params_unitype',1,'p_params_unitype','sintaxis.py',147),
  ('params_unitype -> only_numerico','params_unitype',1,'p_params_unitype','sintaxis.py',148),
  ('params_unitype -> only_logico','params_unitype',1,'p_params_unitype','sintaxis.py',149),
  ('only_string -> elemento_string','only_string',1,'p_only_string','sintaxis.py',154),
  ('only_string -> elemento_string COMMA only_string','only_string',3,'p_only_string','sintaxis.py',155),
  ('only_numerico -> elemento_numerico','only_numerico',1,'p_only_numerico','sintaxis.py',160),
  ('only_numerico -> elemento_numerico COMMA only_numerico','only_numerico',3,'p_only_numerico','sintaxis.py',161),
  ('only_logico -> elemento_logico','only_logico',1,'p_only_logico','sintaxis.py',166),
  ('only_logico -> elemento_logico COMMA only_logico','only_logico',3,'p_only_logico','sintaxis.py',167),
  ('optional_params -> param','optional_params',1,'p_optional_params','sintaxis.py',174),
  ('optional_params -> ','optional_params',1,'p_optional_params','sintaxis.py',175),
  ('optional_params -> param COMMA optional_params','optional_params',3,'p_optional_params','sintaxis.py',176),
  ('expresiones_de_salida -> echo','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',183),
  ('expresiones_de_salida -> print','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',184),
  ('expresiones_de_salida -> vardump','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',185),
  ('expresiones_de_salida -> print_r','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',186),
  ('expresiones_de_salida -> var_export','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',187),
  ('echo -> ECHO params SEMICOLON','echo',3,'p_echo','sintaxis.py',193),
  ('echo -> ECHO params_points SEMICOLON','echo',3,'p_echo','sintaxis.py',194),
  ('print -> PRINT param SEMICOLON','print',3,'p_print','sintaxis.py',199),
  ('print_r -> PRINT_R LPAREN param RPAREN SEMICOLON','print_r',5,'p_print_r','sintaxis.py',204),
  ('vardump -> VAR_DUMP LPAREN param RPAREN SEMICOLON','vardump',5,'p_vardump','sintaxis.py',209),
  ('var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON','var_export',5,'p_var_export','sintaxis.py',214),
  ('funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN','funciones_ingreso_datos',6,'p_funciones_ingreso_datos','sintaxis.py',219),
  ('funciones_ingreso_datos -> READLINE LPAREN RPAREN','funciones_ingreso_datos',3,'p_funciones_ingreso_datos','sintaxis.py',220),
  ('funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN','funciones_ingreso_datos',4,'p_funciones_ingreso_datos','sintaxis.py',221),
  ('estructuras_de_control -> if_structures','estructuras_de_control',1,'p_estructuras_de_control','sintaxis.py',227),
  ('estructuras_de_control -> estructuras_while','estructuras_de_control',1,'p_estructuras_de_control','sintaxis.py',228),
  ('if_structures -> if','if_structures',1,'p_if_structures','sintaxis.py',233),
  ('if_structures -> if else','if_structures',2,'p_if_structures','sintaxis.py',234),
  ('if_structures -> if else_if else','if_structures',3,'p_if_structures','sintaxis.py',235),
  ('if_structures -> if else_if','if_structures',2,'p_if_structures','sintaxis.py',236),
  ('if_structures -> if_r ENDIF SEMICOLON','if_structures',3,'p_if_structures','sintaxis.py',237),
  ('if_structures -> if_r else_r ENDIF SEMICOLON','if_structures',4,'p_if_structures','sintaxis.py',238),
  ('if_structures -> if_r elseif_r else_r ENDIF SEMICOLON','if_structures',5,'p_if_structures','sintaxis.py',239),
  ('if_structures -> if_r elseif_r ENDIF SEMICOLON','if_structures',4,'p_if_structures','sintaxis.py',240),
  ('if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','if',7,'p_if','sintaxis.py',246),
  ('else -> ELSE LCURLY expresiones RCURLY','else',4,'p_else','sintaxis.py',251),
  ('else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','else_if',7,'p_else_if','sintaxis.py',256),
  ('else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','else_if',8,'p_else_if','sintaxis.py',257),
  ('else_if -> else_if else_if','else_if',2,'p_else_if','sintaxis.py',258),
  ('if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones','if_r',6,'p_if_r','sintaxis.py',263),
  ('else_r -> ELSE DOUBLEPOINT expresiones','else_r',3,'p_else_r','sintaxis.py',268),
  ('elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones','elseif_r',6,'p_elseif_r','sintaxis.py',273),
  ('elseif_r -> elseif_r elseif_r','elseif_r',2,'p_elseif_r','sintaxis.py',274),
  ('estructuras_while -> while','estructuras_while',1,'p_estructuras_while','sintaxis.py',279),
  ('while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','while',7,'p_while','sintaxis.py',285),
  ('while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON','while',8,'p_while','sintaxis.py',286),
  ('foreach -> FOREACH LPAREN foreach_content RPAREN LCURLY expresiones RCURLY','foreach',7,'p_foreach','sintaxis.py',291),
  ('foreach_content -> VARIABLE AS VARIABLE','foreach_content',3,'p_foreach_content','sintaxis.py',296),
  ('foreach_content -> VARIABLE AS VARIABLE ARROW VARIABLE','foreach_content',5,'p_foreach_content','sintaxis.py',297),
  ('funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo','funcion_declaracion',3,'p_funcion_declaracion','sintaxis.py',307),
  ('funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo','funcion_declaracion',7,'p_funcion_declaracion','sintaxis.py',308),
  ('funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo','funcion_declaracion',8,'p_funcion_declaracion','sintaxis.py',309),
  ('funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN variables_por_comma RPAREN','funcion_cabecera_declaracion',4,'p_funcion_cabecera_declaracion','sintaxis.py',315),
  ('funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN RPAREN','funcion_cabecera_declaracion',3,'p_funcion_cabecera_declaracion','sintaxis.py',316),
  ('funciones_cuerpo -> LCURLY expresiones RCURLY','funciones_cuerpo',3,'p_funciones_cuerpo','sintaxis.py',321),
  ('funciones_cuerpo -> LCURLY RCURLY','funciones_cuerpo',2,'p_funciones_cuerpo','sintaxis.py',322),
  ('return -> RETURN var_asignar_contenido SEMICOLON','return',3,'p_return','sintaxis.py',327),
  ('funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON','funcion_ejecucion',5,'p_funcion_ejecucion','sintaxis.py',333),
  ('funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON','funcion_ejecucion',4,'p_funcion_ejecucion','sintaxis.py',334),
  ('variables_por_comma -> VARIABLE','variables_por_comma',1,'p_variables_por_comma','sintaxis.py',340),
  ('variables_por_comma -> VARIABLE COMMA variables_por_comma','variables_por_comma',3,'p_variables_por_comma','sintaxis.py',341),
  ('datos_estructurados -> map','datos_estructurados',1,'p_datos_estructurados','sintaxis.py',350),
  ('datos_estructurados -> vector','datos_estructurados',1,'p_datos_estructurados','sintaxis.py',351),
  ('datos_estructurados -> set','datos_estructurados',1,'p_datos_estructurados','sintaxis.py',352),
  ('map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN','map',7,'p_map','sintaxis.py',359),
  ('map -> NEW MAP LPAREN RPAREN','map',4,'p_map','sintaxis.py',360),
  ('clave_valor -> elemento_string ARROW param','clave_valor',3,'p_clave_valor','sintaxis.py',365),
  ('clave_valor -> NUMBER ARROW param','clave_valor',3,'p_clave_valor','sintaxis.py',366),
  ('todos_clave_valor -> clave_valor','todos_clave_valor',1,'p_todos_clave_valor','sintaxis.py',371),
  ('todos_clave_valor -> clave_valor COMMA todos_clave_valor','todos_clave_valor',3,'p_todos_clave_valor','sintaxis.py',372),
  ('vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN','vector',7,'p_vector','sintaxis.py',378),
  ('vector -> NEW VECTOR LPAREN RPAREN','vector',4,'p_vector','sintaxis.py',379),
  ('datos -> FLOAT','datos',1,'p_datos','sintaxis.py',384),
  ('datos -> NUMBER','datos',1,'p_datos','sintaxis.py',385),
  ('datos -> STRING','datos',1,'p_datos','sintaxis.py',386),
  ('datos -> STRINGCC','datos',1,'p_datos','sintaxis.py',387),
  ('datos -> elemento_logico_pri','datos',1,'p_datos','sintaxis.py',388),
  ('llenar -> datos','llenar',1,'p_llenar','sintaxis.py',393),
  ('llenar -> datos COMMA llenar','llenar',3,'p_llenar','sintaxis.py',394),
  ('set -> NEW SET LPAREN LBRACKET params RBRACKET RPAREN','set',7,'p_set','sintaxis.py',399),
  ('set -> NEW SET LPAREN RPAREN','set',4,'p_set','sintaxis.py',400),
  ('funciones_datos_estructurados -> funciones_map','funciones_datos_estructurados',1,'p_funciones_datos_estructurados','sintaxis.py',407),
  ('funciones_datos_estructurados -> funciones_set','funciones_datos_estructurados',1,'p_funciones_datos_estructurados','sintaxis.py',408),
  ('funciones_datos_estructurados -> funciones_vector','funciones_datos_estructurados',1,'p_funciones_datos_estructurados','sintaxis.py',409),
  ('funciones_map -> key_map','funciones_map',1,'p_funciones_map','sintaxis.py',414),
  ('funciones_map -> diff_map','funciones_map',1,'p_funciones_map','sintaxis.py',415),
  ('key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON','key_map',9,'p_key_map','sintaxis.py',420),
  ('diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON','diff_map',10,'p_diff_map','sintaxis.py',426),
  ('funciones_vector -> find_vector','funciones_vector',1,'p_funciones_vector','sintaxis.py',434),
  ('funciones_vector -> push_vector','funciones_vector',1,'p_funciones_vector','sintaxis.py',435),
  ('find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON','find_vector',10,'p_find_vector','sintaxis.py',440),
  ('push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON','push_vector',7,'p_push_vector','sintaxis.py',445),
  ('push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON','push_vector',7,'p_push_vector','sintaxis.py',446),
  ('push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON','push_vector',9,'p_push_vector','sintaxis.py',447),
  ('funciones_set -> union_set','funciones_set',1,'p_funciones_set','sintaxis.py',454),
  ('funciones_set -> remove_set','funciones_set',1,'p_funciones_set','sintaxis.py',455),
  ('union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON','union_set',10,'p_union_set','sintaxis.py',460),
  ('remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params_unitype RPAREN SEMICOLON','remove_set',7,'p_remove_set','sintaxis.py',465),
  ('remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params_unitype RBRACKET RPAREN SEMICOLON','remove_set',9,'p_remove_set','sintaxis.py',466),
]
