
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ANDlOGICAL ARROW AS COMMA DIFF DIFFERENT DIVIDE DOUBLEPOINT ECHO ELSE ELSEIF ENDIF ENDWHILE EQUALS EQUALSLOGICAL EXPONENTIAL FALSE FIND FLOAT FOREACH FUNCTION FUNCTION_NAME GREATEREQUAL GREATERTHAN ID IDENTICAL IF KEYS LBRACKET LCURLY LESSEQUAL LESSTHAN LPAREN MAP MINUS NEW NOTIDENTICAL NOTLOGICAL NUMBER ORLOGICAL PLUS POINT PRINT PRINT_R PUSH RBRACKET RCURLY READLINE REMOVE RETURN RPAREN SEMICOLON SET SIMPLEARROW STRING STRINGCC TIMES TRUE UNION VAR VARIABLE VAR_DUMP VAR_EXPORT VECTOR WHILE\n    expresiones : expresion\n                | expresion expresiones\n    \n    expresion : var_asignar\n                | var_declarar\n                | expresiones_de_salida\n                | estructuras_de_control\n                | var_plusminus\n                | funciones_datos_estructurados\n                | funcion_declaracion\n                | return\n                | funcion_ejecucion\n                | foreach\n    \n    var_declarar : VAR var_asignar\n    \n    var_asignar : VARIABLE EQUALS var_asignar_contenido SEMICOLON\n                | VARIABLE EQUALS funcion_declaracion_anonima\n    \n    var_asignar_contenido : VARIABLE\n                    | elemento_numerico\n                    | elemento_string\n                    | elemento_logico\n                    | datos_estructurados\n                    | funciones_ingreso_datos\n    \n    var_plusminus : VARIABLE PLUS PLUS SEMICOLON\n                | VARIABLE MINUS MINUS SEMICOLON\n    \n    elemento_numerico : elemento_numerico operador elemento_numerico\n                        | FLOAT\n                        | NUMBER\n                        | LPAREN elemento_numerico RPAREN\n                        | VARIABLE\n    \n    operador : PLUS\n            | MINUS\n            | DIVIDE\n            | EXPONENTIAL\n            | TIMES\n    elemento_string : STRING\n                        | STRINGCC\n                        | VARIABLE\n    \n    elemento_logico : elemento_logico_pri\n                    | elemento_logico comparador elemento_logico\n                    | NOTLOGICAL elemento_logico\n                    | VARIABLE\n                    | elemento_numerico comparador elemento_numerico\n                    | elemento_string comparador elemento_string\n    \n    elemento_logico_pri : TRUE\n                        | FALSE\n    \n    comparador : IDENTICAL\n               | NOTIDENTICAL\n               | EQUALSLOGICAL\n               | DIFFERENT\n               | GREATEREQUAL\n               | LESSEQUAL\n               | GREATERTHAN\n               | LESSTHAN\n               | ANDlOGICAL\n               | ORLOGICAL\n    \n    param : VARIABLE\n            | elemento_string\n            | elemento_numerico\n            | elemento_logico\n    \n    params : param\n            | param COMMA params\n    \n    params_points : param\n                | param POINT params_points\n    \n    params_unitype : only_string\n                    | only_numerico\n                    | only_logico\n    \n    only_string : elemento_string\n                | elemento_string COMMA only_string\n    \n    only_numerico : elemento_numerico\n                | elemento_numerico COMMA only_numerico\n    \n    only_logico : elemento_logico\n                | elemento_logico COMMA only_logico\n    \n    optional_params : param\n                        | ""\n                        | param COMMA optional_params\n    \n    expresiones_de_salida : echo\n                            | print\n                            | vardump\n                            | print_r\n                            | var_export\n    \n    echo : ECHO params SEMICOLON\n            | ECHO params_points SEMICOLON\n    \n    print : PRINT param SEMICOLON\n    \n    print_r : PRINT_R LPAREN param RPAREN SEMICOLON\n    \n    vardump : VAR_DUMP LPAREN param RPAREN SEMICOLON\n    \n    var_export : VAR_EXPORT LPAREN param RPAREN SEMICOLON\n    \n    funciones_ingreso_datos : VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN\n                        | READLINE LPAREN RPAREN\n                        | READLINE LPAREN elemento_string RPAREN\n    \n    estructuras_de_control : if_structures\n                            | estructuras_while\n    \n    if_structures : if\n            | if else\n            | if else_if else\n            | if else_if\n            | if_r ENDIF SEMICOLON\n            | if_r else_r ENDIF SEMICOLON\n            | if_r elseif_r else_r ENDIF SEMICOLON\n            | if_r elseif_r ENDIF SEMICOLON\n    \n    if : IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n    \n    else : ELSE LCURLY expresiones RCURLY\n    \n    else_if : ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | else_if else_if\n    \n    if_r : IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones\n    \n    else_r : ELSE DOUBLEPOINT expresiones\n    \n    elseif_r : ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones\n                | elseif_r elseif_r\n    \n    estructuras_while : while_p\n\n    \n    while_p : WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON\n    \n    foreach : FOREACH LPAREN foreach_content RPAREN LCURLY expresiones RCURLY\n    \n    foreach_content : VARIABLE AS VARIABLE\n                    | VARIABLE AS VARIABLE ARROW VARIABLE\n    \n    funcion_declaracion : FUNCTION funcion_cabecera_declaracion funciones_cuerpo\n                        | VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo\n                        | VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo\n                        | FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo\n                        | FUNCTION LPAREN RPAREN funciones_cuerpo\n    \n    funcion_cabecera_declaracion : FUNCTION_NAME LPAREN variables_por_comma RPAREN\n                                    | FUNCTION_NAME LPAREN RPAREN\n    \n    funciones_cuerpo : LCURLY expresiones RCURLY\n                    | LCURLY RCURLY\n    \n    return : RETURN var_asignar_contenido SEMICOLON\n    \n   funcion_ejecucion : FUNCTION_NAME LPAREN params RPAREN funciones_cuerpo SEMICOLON\n                    | FUNCTION_NAME LPAREN RPAREN funciones_cuerpo SEMICOLON\n                    | VARIABLE LPAREN RPAREN SEMICOLON\n                    | VARIABLE LPAREN params RPAREN SEMICOLON\n   \n    funcion_declaracion_anonima : FUNCTION LPAREN params RPAREN funciones_cuerpo\n                    | FUNCTION LPAREN RPAREN funciones_cuerpo\n    \n    variables_por_comma : VARIABLE\n                        | VARIABLE COMMA variables_por_comma\n    \n    datos_estructurados : map\n                        | vector\n                        | set\n    \n    map : NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN\n        | NEW MAP LPAREN RPAREN\n    \n    clave_valor : elemento_string ARROW param\n                    | NUMBER ARROW param\n    \n    todos_clave_valor : clave_valor\n                            | clave_valor COMMA todos_clave_valor\n    \n    vector : NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN\n                | NEW VECTOR LPAREN RPAREN\n    \n    datos : FLOAT\n                | NUMBER\n                | STRING\n                | STRINGCC\n                | elemento_logico_pri\n    \n    llenar : datos\n                | datos COMMA llenar\n    \n    set : NEW SET LPAREN LBRACKET params RBRACKET RPAREN\n            | NEW SET LPAREN RPAREN\n    \n    funciones_datos_estructurados : funciones_map\n                                        | funciones_set\n                                        | funciones_vector\n    \n    funciones_map : key_map\n                       | diff_map\n    \n    key_map : VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON\n    \n    diff_map : VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON\n    \n    funciones_vector : find_vector\n                        | push_vector\n    \n    find_vector : VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON\n    \n    push_vector : VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON\n                    | VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON\n                    | VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON\n    \n    funciones_set : union_set\n                    | remove_set\n    \n    union_set : VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON\n    \n    remove_set :  VARIABLE SIMPLEARROW REMOVE LPAREN params_unitype RPAREN SEMICOLON\n                    | VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params_unitype RBRACKET RPAREN SEMICOLON\n    '
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,29,30,34,36,37,38,39,40,41,42,46,49,51,54,65,69,78,79,88,89,90,91,92,100,101,103,112,113,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,145,146,154,155,156,157,158,163,164,165,167,168,173,174,177,178,179,180,181,183,184,187,189,190,208,218,220,222,231,234,243,244,245,246,249,251,253,255,258,259,261,266,267,268,271,273,274,275,276,278,282,283,284,296,298,300,301,302,304,305,310,311,312,319,320,325,326,327,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,52,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,57,83,83,-91,-108,-155,-156,-165,-166,-159,-160,57,83,-13,117,140,142,83,153,160,83,83,-92,-94,142,142,-15,57,-114,13,117,-123,140,140,-29,-30,-31,-32,-33,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,196,142,83,196,-80,-81,83,83,-82,-103,-93,13,142,-95,13,142,-14,227,-22,-23,-126,232,83,-122,-118,117,260,142,-96,-98,-127,232,83,227,-121,-117,142,196,83,83,-125,13,-84,-83,-85,-100,-97,13,13,13,13,-129,196,140,142,-124,331,333,334,83,13,13,-115,-128,-168,-162,-163,196,83,83,-111,13,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,51,91,92,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,-15,-114,14,-123,-80,-81,-82,-103,-93,14,-95,14,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,14,-84,-83,-85,-100,-97,14,14,14,14,-129,-124,14,14,-115,-128,-168,-162,-163,-111,14,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,46,51,91,92,103,112,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,104,-13,-92,-94,-15,185,-114,25,-123,-80,-81,-82,-103,-93,25,-95,25,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,25,-84,-83,-85,-100,-97,25,25,25,25,-129,-124,25,25,-115,-128,-168,-162,-163,-111,25,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,51,91,92,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,-15,-114,26,-123,-80,-81,-82,-103,-93,26,-95,26,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,26,-84,-83,-85,-100,-97,26,26,26,26,-129,-124,26,26,-115,-128,-168,-162,-163,-111,26,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'FUNCTION_NAME':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,34,36,37,38,39,40,41,42,51,91,92,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,55,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,-15,-114,27,-123,-80,-81,-82,-103,-93,27,-95,27,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,27,-84,-83,-85,-100,-97,27,27,27,27,-129,-124,27,27,-115,-128,-168,-162,-163,-111,27,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'FOREACH':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,51,91,92,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,-15,-114,28,-123,-80,-81,-82,-103,-93,28,-95,28,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,28,-84,-83,-85,-100,-97,28,28,28,28,-129,-124,28,28,-115,-128,-168,-162,-163,-111,28,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'ECHO':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,51,91,92,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,-15,-114,29,-123,-80,-81,-82,-103,-93,29,-95,29,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,29,-84,-83,-85,-100,-97,29,29,29,29,-129,-124,29,29,-115,-128,-168,-162,-163,-111,29,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,51,91,92,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,-15,-114,30,-123,-80,-81,-82,-103,-93,30,-95,30,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,30,-84,-83,-85,-100,-97,30,30,30,30,-129,-124,30,30,-115,-128,-168,-162,-163,-111,30,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'VAR_DUMP':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,51,91,92,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,-15,-114,31,-123,-80,-81,-82,-103,-93,31,-95,31,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,31,-84,-83,-85,-100,-97,31,31,31,31,-129,-124,31,31,-115,-128,-168,-162,-163,-111,31,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'PRINT_R':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,51,91,92,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,-15,-114,32,-123,-80,-81,-82,-103,-93,32,-95,32,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,32,-84,-83,-85,-100,-97,32,32,32,32,-129,-124,32,32,-115,-128,-168,-162,-163,-111,32,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'VAR_EXPORT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,26,34,36,37,38,39,40,41,42,46,51,91,92,103,112,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,73,-91,-108,-155,-156,-165,-166,-159,-160,73,-13,-92,-94,-15,73,-114,33,-123,-80,-81,-82,-103,-93,33,-95,33,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,33,-84,-83,-85,-100,-97,33,33,33,33,-129,-124,33,33,-115,-128,-168,-162,-163,-111,33,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,51,91,92,93,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,216,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,166,-15,-114,43,-123,-80,-81,-82,-103,-93,43,-95,43,-14,-22,-23,-126,-122,-118,166,-96,-98,-127,-121,-117,-125,43,-84,-83,-85,-100,-97,43,43,43,43,-129,-124,43,43,-115,-128,-168,-162,-163,-111,43,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,51,91,92,103,113,114,119,154,155,158,163,164,165,168,173,177,179,180,181,187,189,220,222,231,245,246,258,259,261,266,267,268,271,273,274,275,276,278,296,304,305,310,311,312,319,320,330,336,339,340,344,356,357,358,359,360,364,365,366,367,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-13,-92,-94,-15,-114,44,-123,-80,-81,-82,-103,-93,44,-95,44,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,44,-84,-83,-85,-100,-97,44,44,44,44,-129,-124,44,44,-115,-128,-168,-162,-163,-111,44,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,45,51,91,92,103,113,119,154,155,158,163,164,168,177,179,180,181,187,189,220,222,231,245,246,258,261,266,267,268,271,278,296,310,311,312,319,320,330,339,340,344,356,357,358,359,360,364,365,366,367,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-2,-13,-92,-94,-15,-114,-123,-80,-81,-82,-103,-93,-95,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,-84,-83,-85,-100,-97,-129,-124,-115,-128,-168,-162,-163,-111,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'RCURLY':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,45,51,91,92,103,113,114,119,154,155,158,163,164,168,177,179,180,181,186,187,189,217,220,222,231,245,246,258,261,266,267,268,271,278,296,297,306,308,310,311,312,319,320,330,337,339,340,344,355,356,357,358,359,360,364,365,366,367,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-2,-13,-92,-94,-15,-114,187,-123,-80,-81,-82,-103,-93,-95,-14,-22,-23,-126,245,-122,-118,268,-96,-98,-127,-121,-117,-125,-84,-83,-85,-100,-97,-129,-124,330,339,340,-115,-128,-168,-162,-163,-111,356,-99,-109,-116,364,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'ENDIF':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,35,36,37,38,39,40,41,42,45,51,91,92,96,97,103,113,119,154,155,158,163,164,168,170,171,177,179,180,181,187,189,220,222,223,231,245,246,258,261,266,267,268,271,278,296,307,310,311,312,319,320,330,338,339,340,344,356,357,358,359,360,364,365,366,367,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,95,-108,-155,-156,-165,-166,-159,-160,-2,-13,-92,-94,169,172,-15,-114,-123,-80,-81,-82,-103,-93,-95,-107,221,-14,-22,-23,-126,-122,-118,-96,-98,-105,-127,-121,-117,-125,-84,-83,-85,-100,-97,-129,-124,-104,-115,-128,-168,-162,-163,-111,-106,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,35,36,37,38,39,40,41,42,45,51,91,92,97,103,113,119,154,155,158,163,164,168,170,177,179,180,181,187,189,220,222,231,245,246,258,261,266,267,268,271,278,296,307,310,311,312,319,320,330,338,339,340,344,356,357,358,359,360,364,365,366,367,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,93,98,-108,-155,-156,-165,-166,-159,-160,-2,-13,-92,93,98,-15,-114,-123,-80,-81,-82,216,-93,-95,-107,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,-84,-83,-85,-100,-97,-129,-124,-104,-115,-128,-168,-162,-163,-111,-106,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'ELSEIF':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,35,36,37,38,39,40,41,42,45,51,91,92,97,103,113,119,154,155,158,163,164,168,170,177,179,180,181,187,189,220,222,231,245,246,258,261,266,267,268,271,278,296,307,310,311,312,319,320,330,338,339,340,344,356,357,358,359,360,364,365,366,367,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,94,99,-108,-155,-156,-165,-166,-159,-160,-2,-13,-92,94,99,-15,-114,-123,-80,-81,-82,94,-93,-95,99,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,-84,-83,-85,-100,-97,-129,-124,-104,-115,-128,-168,-162,-163,-111,-106,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'ENDWHILE':([2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,34,36,37,38,39,40,41,42,45,51,91,92,103,113,119,154,155,158,163,164,168,177,179,180,181,187,189,220,222,231,245,246,258,261,266,267,268,271,278,296,309,310,311,312,319,320,330,339,340,344,356,357,358,359,360,364,365,366,367,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-75,-76,-77,-78,-79,-89,-90,-152,-153,-154,-91,-108,-155,-156,-165,-166,-159,-160,-2,-13,-92,-94,-15,-114,-123,-80,-81,-82,-103,-93,-95,-14,-22,-23,-126,-122,-118,-96,-98,-127,-121,-117,-125,-84,-83,-85,-100,-97,-129,-124,341,-115,-128,-168,-162,-163,-111,-99,-109,-116,-101,-110,-169,-164,-157,-102,-158,-167,-161,]),'EQUALS':([13,52,],[46,112,]),'PLUS':([13,47,57,58,63,64,83,85,139,140,142,143,160,193,194,198,227,232,239,316,],[47,105,-28,122,-25,-26,-28,122,122,-28,-28,122,-28,122,122,-27,-28,-28,122,122,]),'MINUS':([13,48,57,58,63,64,83,85,139,140,142,143,160,193,194,198,227,232,239,316,],[48,106,-28,123,-25,-26,-28,123,123,-28,-28,123,-28,123,123,-27,-28,-28,123,123,]),'LPAREN':([13,25,26,27,28,29,30,31,32,33,43,44,46,49,55,65,69,73,74,78,88,89,90,94,99,100,101,104,110,111,112,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,145,147,148,149,156,157,166,167,174,178,183,184,185,218,234,243,244,249,253,255,262,263,264,265,283,284,302,326,327,],[49,54,65,78,79,65,65,88,89,90,100,101,65,65,118,65,65,145,146,65,65,65,65,167,174,65,65,178,183,184,65,65,65,-29,-30,-31,-32,-33,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,65,65,202,203,204,65,65,218,65,65,65,65,65,244,65,65,65,65,65,65,65,299,300,301,302,65,65,65,65,65,]),'SIMPLEARROW':([13,160,],[50,213,]),'FLOAT':([26,29,30,46,49,65,69,78,88,89,90,100,101,112,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,145,156,157,167,174,178,183,184,218,234,243,244,249,253,255,283,284,302,326,327,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-29,-30,-31,-32,-33,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'NUMBER':([26,29,30,46,49,65,69,78,88,89,90,100,101,112,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,145,156,157,167,174,178,183,184,218,234,243,244,249,251,253,255,283,284,302,325,326,327,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-29,-30,-31,-32,-33,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,64,64,64,64,64,64,64,64,64,64,64,64,64,64,293,64,64,64,64,64,293,64,64,]),'STRING':([26,29,30,46,49,69,78,88,89,90,100,101,112,127,128,129,130,131,132,133,134,135,136,137,138,145,146,156,157,167,174,178,183,184,218,234,243,244,249,251,253,255,282,284,302,325,326,327,],[66,66,66,66,66,66,66,66,66,66,66,66,66,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'STRINGCC':([26,29,30,46,49,69,78,88,89,90,100,101,112,127,128,129,130,131,132,133,134,135,136,137,138,145,146,156,157,167,174,178,183,184,218,234,243,244,249,251,253,255,282,284,302,325,326,327,],[67,67,67,67,67,67,67,67,67,67,67,67,67,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'NOTLOGICAL':([26,29,30,46,49,69,78,88,89,90,100,101,112,127,128,129,130,131,132,133,134,135,136,138,145,156,157,167,174,178,183,184,218,234,243,244,249,253,255,284,302,326,327,],[69,69,69,69,69,69,69,69,69,69,69,69,69,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'READLINE':([26,46,112,],[74,74,74,]),'TRUE':([26,29,30,46,49,69,78,88,89,90,100,101,112,127,128,129,130,131,132,133,134,135,136,138,145,156,157,167,174,178,183,184,218,234,243,244,249,253,255,284,302,326,327,],[75,75,75,75,75,75,75,75,75,75,75,75,75,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'FALSE':([26,29,30,46,49,69,78,88,89,90,100,101,112,127,128,129,130,131,132,133,134,135,136,138,145,156,157,167,174,178,183,184,218,234,243,244,249,253,255,284,302,326,327,],[76,76,76,76,76,76,76,76,76,76,76,76,76,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'NEW':([26,46,112,],[77,77,77,]),'RPAREN':([49,54,63,64,66,67,68,75,76,78,83,84,85,86,108,109,115,117,118,139,140,141,142,146,150,152,159,160,161,162,175,176,178,191,193,194,195,196,197,198,201,202,203,204,209,219,224,227,228,230,232,233,235,236,237,238,239,240,241,242,244,247,260,269,288,289,299,313,314,315,316,317,318,321,324,328,329,331,332,333,334,335,352,353,354,],[107,116,-25,-26,-34,-35,-37,-43,-44,151,-28,-56,-57,-58,182,-59,188,-130,192,198,-28,-39,-40,200,205,207,212,-28,214,215,225,226,229,248,-24,-41,-42,-36,-38,-27,250,252,254,256,-60,270,272,-28,277,279,-28,280,-63,-64,-65,-66,-68,-70,285,286,229,-131,-112,303,322,323,332,342,-66,-67,-68,-69,-71,343,345,349,350,-113,351,352,353,354,361,362,363,]),'REMOVE':([50,],[110,]),'PUSH':([50,],[111,]),'LCURLY':([53,93,116,151,188,192,205,207,225,226,229,248,270,277,279,303,322,],[114,165,114,114,114,-120,114,259,273,275,114,-119,304,114,114,336,114,]),'SEMICOLON':([56,57,58,59,60,61,62,63,64,66,67,68,70,71,72,75,76,80,81,82,83,84,85,86,87,95,102,105,106,107,109,140,141,142,169,172,182,187,193,194,195,196,197,198,200,206,209,210,211,212,214,215,221,245,250,252,254,256,257,280,285,286,323,341,342,343,345,349,350,351,361,362,363,],[119,-16,-17,-18,-19,-20,-21,-25,-26,-34,-35,-37,-132,-133,-134,-43,-44,154,155,-59,-28,-56,-57,-58,158,168,177,179,180,181,-59,-28,-39,-40,220,222,231,-122,-24,-41,-42,-36,-38,-27,-87,258,-60,-61,-62,261,266,267,271,-121,-88,-136,-142,-151,296,312,319,320,-86,357,358,359,-135,-141,-150,360,365,366,367,]),'DIVIDE':([57,58,63,64,83,85,139,140,142,143,160,193,194,198,227,232,239,316,],[-28,124,-25,-26,-28,124,124,-28,-28,124,-28,124,124,-27,-28,-28,124,124,]),'EXPONENTIAL':([57,58,63,64,83,85,139,140,142,143,160,193,194,198,227,232,239,316,],[-28,125,-25,-26,-28,125,125,-28,-28,125,-28,125,125,-27,-28,-28,125,125,]),'TIMES':([57,58,63,64,83,85,139,140,142,143,160,193,194,198,227,232,239,316,],[-28,126,-25,-26,-28,126,126,-28,-28,126,-28,126,126,-27,-28,-28,126,126,]),'IDENTICAL':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,127,127,127,-25,-26,-34,-35,-37,-43,-44,-28,127,127,127,-28,127,-28,127,127,-28,127,127,-24,-41,-42,-36,127,-27,127,127,-28,-28,127,127,127,127,127,]),'NOTIDENTICAL':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,128,128,128,-25,-26,-34,-35,-37,-43,-44,-28,128,128,128,-28,128,-28,128,128,-28,128,128,-24,-41,-42,-36,128,-27,128,128,-28,-28,128,128,128,128,128,]),'EQUALSLOGICAL':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,129,129,129,-25,-26,-34,-35,-37,-43,-44,-28,129,129,129,-28,129,-28,129,129,-28,129,129,-24,-41,-42,-36,129,-27,129,129,-28,-28,129,129,129,129,129,]),'DIFFERENT':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,130,130,130,-25,-26,-34,-35,-37,-43,-44,-28,130,130,130,-28,130,-28,130,130,-28,130,130,-24,-41,-42,-36,130,-27,130,130,-28,-28,130,130,130,130,130,]),'GREATEREQUAL':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,131,131,131,-25,-26,-34,-35,-37,-43,-44,-28,131,131,131,-28,131,-28,131,131,-28,131,131,-24,-41,-42,-36,131,-27,131,131,-28,-28,131,131,131,131,131,]),'LESSEQUAL':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,132,132,132,-25,-26,-34,-35,-37,-43,-44,-28,132,132,132,-28,132,-28,132,132,-28,132,132,-24,-41,-42,-36,132,-27,132,132,-28,-28,132,132,132,132,132,]),'GREATERTHAN':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,133,133,133,-25,-26,-34,-35,-37,-43,-44,-28,133,133,133,-28,133,-28,133,133,-28,133,133,-24,-41,-42,-36,133,-27,133,133,-28,-28,133,133,133,133,133,]),'LESSTHAN':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,134,134,134,-25,-26,-34,-35,-37,-43,-44,-28,134,134,134,-28,134,-28,134,134,-28,134,134,-24,-41,-42,-36,134,-27,134,134,-28,-28,134,134,134,134,134,]),'ANDlOGICAL':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,135,135,135,-25,-26,-34,-35,-37,-43,-44,-28,135,135,135,-28,135,-28,135,135,-28,135,135,-24,-41,-42,-36,135,-27,135,135,-28,-28,135,135,135,135,135,]),'ORLOGICAL':([57,58,59,60,63,64,66,67,68,75,76,83,84,85,86,140,141,142,143,144,160,175,176,193,194,195,196,197,198,219,224,227,232,238,239,240,269,289,],[-28,136,136,136,-25,-26,-34,-35,-37,-43,-44,-28,136,136,136,-28,136,-28,136,136,-28,136,136,-24,-41,-42,-36,136,-27,136,136,-28,-28,136,136,136,136,136,]),'COMMA':([63,64,66,67,68,75,76,82,83,84,85,86,109,117,140,141,142,193,194,195,196,197,198,199,227,232,238,239,240,241,291,314,316,347,348,],[-25,-26,-34,-35,-37,-43,-44,156,-28,-56,-57,-58,156,190,-28,-39,-40,-24,-41,-42,-36,-38,-27,249,190,-28,282,283,284,156,325,282,283,-137,-138,]),'POINT':([63,64,66,67,68,75,76,82,83,84,85,86,140,141,142,193,194,195,196,197,198,210,],[-25,-26,-34,-35,-37,-43,-44,157,-28,-56,-57,-58,-28,-39,-40,-24,-41,-42,-36,-38,-27,157,]),'RBRACKET':([63,64,66,67,68,75,76,83,84,85,86,109,140,141,142,193,194,195,196,197,198,209,232,235,236,237,238,239,240,281,287,290,291,294,295,314,315,316,317,318,346,347,348,],[-25,-26,-34,-35,-37,-43,-44,-28,-56,-57,-58,-59,-28,-39,-40,-24,-41,-42,-36,-38,-27,-60,-28,-63,-64,-65,-66,-68,-70,313,321,324,-139,328,329,-66,-67,-68,-69,-71,-140,-137,-138,]),'ARROW':([66,67,196,260,292,293,],[-34,-35,-36,298,326,327,]),'MAP':([77,],[147,]),'VECTOR':([77,],[148,]),'SET':([77,],[149,]),'DOUBLEPOINT':([98,225,226,272,],[173,274,276,305,]),'AS':([153,],[208,]),'LBRACKET':([183,184,202,203,204,],[234,243,251,253,255,]),'KEYS':([213,],[262,]),'DIFF':([213,],[263,]),'UNION':([213,],[264,]),'FIND':([213,],[265,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresiones':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[1,45,186,217,223,297,306,307,308,309,337,338,355,]),'expresion':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[2,2,2,2,2,2,2,2,2,2,2,2,2,]),'var_asignar':([0,2,14,114,165,173,259,273,274,275,276,304,305,336,],[3,3,51,3,3,3,3,3,3,3,3,3,3,3,]),'var_declarar':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expresiones_de_salida':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'estructuras_de_control':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'var_plusminus':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'funciones_datos_estructurados':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'funcion_declaracion':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'return':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funcion_ejecucion':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'foreach':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'echo':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'print':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'vardump':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'print_r':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'var_export':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'if_structures':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'estructuras_while':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'funciones_map':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'funciones_set':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'funciones_vector':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'if':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),'if_r':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'while_p':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'key_map':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[37,37,37,37,37,37,37,37,37,37,37,37,37,]),'diff_map':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[38,38,38,38,38,38,38,38,38,38,38,38,38,]),'union_set':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[39,39,39,39,39,39,39,39,39,39,39,39,39,]),'remove_set':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[40,40,40,40,40,40,40,40,40,40,40,40,40,]),'find_vector':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[41,41,41,41,41,41,41,41,41,41,41,41,41,]),'push_vector':([0,2,114,165,173,259,273,274,275,276,304,305,336,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'funcion_cabecera_declaracion':([25,],[53,]),'var_asignar_contenido':([26,46,112,],[56,102,102,]),'elemento_numerico':([26,29,30,46,49,65,69,78,88,89,90,100,101,112,120,121,138,145,156,157,167,174,178,183,184,218,234,243,244,249,253,255,283,284,302,326,327,],[58,85,85,58,85,139,143,85,85,85,85,143,143,58,193,194,143,85,85,85,143,143,85,239,85,143,239,85,85,143,85,85,316,143,85,85,85,]),'elemento_string':([26,29,30,46,49,69,78,88,89,90,100,101,112,137,138,145,146,156,157,167,174,178,183,184,218,234,243,244,249,251,253,255,282,284,302,325,326,327,],[59,84,84,59,84,144,84,84,84,84,144,144,59,195,144,84,201,84,84,144,144,84,238,84,144,238,84,84,144,292,84,84,314,144,84,292,84,84,]),'elemento_logico':([26,29,30,46,49,69,78,88,89,90,100,101,112,138,145,156,157,167,174,178,183,184,218,234,243,244,249,253,255,284,302,326,327,],[60,86,86,60,86,141,86,86,86,86,175,176,60,197,86,86,86,219,224,86,240,86,269,240,86,86,289,86,86,240,86,86,86,]),'datos_estructurados':([26,46,112,],[61,61,61,]),'funciones_ingreso_datos':([26,46,112,],[62,62,62,]),'elemento_logico_pri':([26,29,30,46,49,69,78,88,89,90,100,101,112,138,145,156,157,167,174,178,183,184,218,234,243,244,249,253,255,284,302,326,327,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'map':([26,46,112,],[70,70,70,]),'vector':([26,46,112,],[71,71,71,]),'set':([26,46,112,],[72,72,72,]),'params':([29,49,78,156,178,184,243,244,253,255,],[80,108,150,209,230,242,287,230,294,295,]),'params_points':([29,157,],[81,211,]),'param':([29,30,49,78,88,89,90,145,156,157,178,184,243,244,253,255,302,326,327,],[82,87,109,109,159,161,162,199,109,210,109,241,109,109,109,109,335,347,348,]),'else':([34,92,],[91,164,]),'else_if':([34,92,163,],[92,163,163,]),'else_r':([35,97,],[96,171,]),'elseif_r':([35,97,170,],[97,170,170,]),'funcion_declaracion_anonima':([46,112,],[103,103,]),'funciones_cuerpo':([53,116,151,188,205,229,277,279,322,],[113,189,206,246,257,278,310,311,344,]),'variables_por_comma':([54,118,178,190,244,],[115,191,228,247,288,]),'operador':([58,85,139,143,193,194,239,316,],[120,120,120,120,120,120,120,120,]),'comparador':([58,59,60,84,85,86,141,143,144,175,176,197,219,224,238,239,240,269,289,],[121,137,138,137,121,138,138,121,137,138,138,138,138,138,137,121,138,138,138,]),'foreach_content':([79,],[152,]),'params_unitype':([183,234,],[233,281,]),'only_string':([183,234,282,],[235,235,315,]),'only_numerico':([183,234,283,],[236,236,317,]),'only_logico':([183,234,284,],[237,237,318,]),'todos_clave_valor':([251,325,],[290,346,]),'clave_valor':([251,325,],[291,291,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresiones","S'",1,None,None,None),
  ('expresiones -> expresion','expresiones',1,'p_expresiones','sintaxis.py',9),
  ('expresiones -> expresion expresiones','expresiones',2,'p_expresiones','sintaxis.py',10),
  ('expresion -> var_asignar','expresion',1,'p_expresion','sintaxis.py',16),
  ('expresion -> var_declarar','expresion',1,'p_expresion','sintaxis.py',17),
  ('expresion -> expresiones_de_salida','expresion',1,'p_expresion','sintaxis.py',18),
  ('expresion -> estructuras_de_control','expresion',1,'p_expresion','sintaxis.py',19),
  ('expresion -> var_plusminus','expresion',1,'p_expresion','sintaxis.py',20),
  ('expresion -> funciones_datos_estructurados','expresion',1,'p_expresion','sintaxis.py',21),
  ('expresion -> funcion_declaracion','expresion',1,'p_expresion','sintaxis.py',22),
  ('expresion -> return','expresion',1,'p_expresion','sintaxis.py',23),
  ('expresion -> funcion_ejecucion','expresion',1,'p_expresion','sintaxis.py',24),
  ('expresion -> foreach','expresion',1,'p_expresion','sintaxis.py',25),
  ('var_declarar -> VAR var_asignar','var_declarar',2,'p_var_declarar','sintaxis.py',34),
  ('var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',40),
  ('var_asignar -> VARIABLE EQUALS funcion_declaracion_anonima','var_asignar',3,'p_var_asignar','sintaxis.py',41),
  ('var_asignar_contenido -> VARIABLE','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',46),
  ('var_asignar_contenido -> elemento_numerico','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',47),
  ('var_asignar_contenido -> elemento_string','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',48),
  ('var_asignar_contenido -> elemento_logico','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',49),
  ('var_asignar_contenido -> datos_estructurados','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',50),
  ('var_asignar_contenido -> funciones_ingreso_datos','var_asignar_contenido',1,'p_var_asignar_contenido','sintaxis.py',51),
  ('var_plusminus -> VARIABLE PLUS PLUS SEMICOLON','var_plusminus',4,'p_var_plusminus','sintaxis.py',56),
  ('var_plusminus -> VARIABLE MINUS MINUS SEMICOLON','var_plusminus',4,'p_var_plusminus','sintaxis.py',57),
  ('elemento_numerico -> elemento_numerico operador elemento_numerico','elemento_numerico',3,'p_elemento_numerico','sintaxis.py',64),
  ('elemento_numerico -> FLOAT','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',65),
  ('elemento_numerico -> NUMBER','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',66),
  ('elemento_numerico -> LPAREN elemento_numerico RPAREN','elemento_numerico',3,'p_elemento_numerico','sintaxis.py',67),
  ('elemento_numerico -> VARIABLE','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',68),
  ('operador -> PLUS','operador',1,'p_operador','sintaxis.py',74),
  ('operador -> MINUS','operador',1,'p_operador','sintaxis.py',75),
  ('operador -> DIVIDE','operador',1,'p_operador','sintaxis.py',76),
  ('operador -> EXPONENTIAL','operador',1,'p_operador','sintaxis.py',77),
  ('operador -> TIMES','operador',1,'p_operador','sintaxis.py',78),
  ('elemento_string -> STRING','elemento_string',1,'p_elemento_string','sintaxis.py',83),
  ('elemento_string -> STRINGCC','elemento_string',1,'p_elemento_string','sintaxis.py',84),
  ('elemento_string -> VARIABLE','elemento_string',1,'p_elemento_string','sintaxis.py',85),
  ('elemento_logico -> elemento_logico_pri','elemento_logico',1,'p_elemento_logico','sintaxis.py',91),
  ('elemento_logico -> elemento_logico comparador elemento_logico','elemento_logico',3,'p_elemento_logico','sintaxis.py',92),
  ('elemento_logico -> NOTLOGICAL elemento_logico','elemento_logico',2,'p_elemento_logico','sintaxis.py',93),
  ('elemento_logico -> VARIABLE','elemento_logico',1,'p_elemento_logico','sintaxis.py',94),
  ('elemento_logico -> elemento_numerico comparador elemento_numerico','elemento_logico',3,'p_elemento_logico','sintaxis.py',95),
  ('elemento_logico -> elemento_string comparador elemento_string','elemento_logico',3,'p_elemento_logico','sintaxis.py',96),
  ('elemento_logico_pri -> TRUE','elemento_logico_pri',1,'p_elemento_logico_pri','sintaxis.py',101),
  ('elemento_logico_pri -> FALSE','elemento_logico_pri',1,'p_elemento_logico_pri','sintaxis.py',102),
  ('comparador -> IDENTICAL','comparador',1,'p_comparador','sintaxis.py',107),
  ('comparador -> NOTIDENTICAL','comparador',1,'p_comparador','sintaxis.py',108),
  ('comparador -> EQUALSLOGICAL','comparador',1,'p_comparador','sintaxis.py',109),
  ('comparador -> DIFFERENT','comparador',1,'p_comparador','sintaxis.py',110),
  ('comparador -> GREATEREQUAL','comparador',1,'p_comparador','sintaxis.py',111),
  ('comparador -> LESSEQUAL','comparador',1,'p_comparador','sintaxis.py',112),
  ('comparador -> GREATERTHAN','comparador',1,'p_comparador','sintaxis.py',113),
  ('comparador -> LESSTHAN','comparador',1,'p_comparador','sintaxis.py',114),
  ('comparador -> ANDlOGICAL','comparador',1,'p_comparador','sintaxis.py',115),
  ('comparador -> ORLOGICAL','comparador',1,'p_comparador','sintaxis.py',116),
  ('param -> VARIABLE','param',1,'p_param','sintaxis.py',125),
  ('param -> elemento_string','param',1,'p_param','sintaxis.py',126),
  ('param -> elemento_numerico','param',1,'p_param','sintaxis.py',127),
  ('param -> elemento_logico','param',1,'p_param','sintaxis.py',128),
  ('params -> param','params',1,'p_params','sintaxis.py',134),
  ('params -> param COMMA params','params',3,'p_params','sintaxis.py',135),
  ('params_points -> param','params_points',1,'p_params_points','sintaxis.py',140),
  ('params_points -> param POINT params_points','params_points',3,'p_params_points','sintaxis.py',141),
  ('params_unitype -> only_string','params_unitype',1,'p_params_unitype','sintaxis.py',146),
  ('params_unitype -> only_numerico','params_unitype',1,'p_params_unitype','sintaxis.py',147),
  ('params_unitype -> only_logico','params_unitype',1,'p_params_unitype','sintaxis.py',148),
  ('only_string -> elemento_string','only_string',1,'p_only_string','sintaxis.py',153),
  ('only_string -> elemento_string COMMA only_string','only_string',3,'p_only_string','sintaxis.py',154),
  ('only_numerico -> elemento_numerico','only_numerico',1,'p_only_numerico','sintaxis.py',159),
  ('only_numerico -> elemento_numerico COMMA only_numerico','only_numerico',3,'p_only_numerico','sintaxis.py',160),
  ('only_logico -> elemento_logico','only_logico',1,'p_only_logico','sintaxis.py',165),
  ('only_logico -> elemento_logico COMMA only_logico','only_logico',3,'p_only_logico','sintaxis.py',166),
  ('optional_params -> param','optional_params',1,'p_optional_params','sintaxis.py',173),
  ('optional_params -> ','optional_params',1,'p_optional_params','sintaxis.py',174),
  ('optional_params -> param COMMA optional_params','optional_params',3,'p_optional_params','sintaxis.py',175),
  ('expresiones_de_salida -> echo','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',182),
  ('expresiones_de_salida -> print','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',183),
  ('expresiones_de_salida -> vardump','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',184),
  ('expresiones_de_salida -> print_r','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',185),
  ('expresiones_de_salida -> var_export','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',186),
  ('echo -> ECHO params SEMICOLON','echo',3,'p_echo','sintaxis.py',192),
  ('echo -> ECHO params_points SEMICOLON','echo',3,'p_echo','sintaxis.py',193),
  ('print -> PRINT param SEMICOLON','print',3,'p_print','sintaxis.py',198),
  ('print_r -> PRINT_R LPAREN param RPAREN SEMICOLON','print_r',5,'p_print_r','sintaxis.py',203),
  ('vardump -> VAR_DUMP LPAREN param RPAREN SEMICOLON','vardump',5,'p_vardump','sintaxis.py',208),
  ('var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON','var_export',5,'p_var_export','sintaxis.py',213),
  ('funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN','funciones_ingreso_datos',6,'p_funciones_ingreso_datos','sintaxis.py',218),
  ('funciones_ingreso_datos -> READLINE LPAREN RPAREN','funciones_ingreso_datos',3,'p_funciones_ingreso_datos','sintaxis.py',219),
  ('funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN','funciones_ingreso_datos',4,'p_funciones_ingreso_datos','sintaxis.py',220),
  ('estructuras_de_control -> if_structures','estructuras_de_control',1,'p_estructuras_de_control','sintaxis.py',226),
  ('estructuras_de_control -> estructuras_while','estructuras_de_control',1,'p_estructuras_de_control','sintaxis.py',227),
  ('if_structures -> if','if_structures',1,'p_if_structures','sintaxis.py',232),
  ('if_structures -> if else','if_structures',2,'p_if_structures','sintaxis.py',233),
  ('if_structures -> if else_if else','if_structures',3,'p_if_structures','sintaxis.py',234),
  ('if_structures -> if else_if','if_structures',2,'p_if_structures','sintaxis.py',235),
  ('if_structures -> if_r ENDIF SEMICOLON','if_structures',3,'p_if_structures','sintaxis.py',236),
  ('if_structures -> if_r else_r ENDIF SEMICOLON','if_structures',4,'p_if_structures','sintaxis.py',237),
  ('if_structures -> if_r elseif_r else_r ENDIF SEMICOLON','if_structures',5,'p_if_structures','sintaxis.py',238),
  ('if_structures -> if_r elseif_r ENDIF SEMICOLON','if_structures',4,'p_if_structures','sintaxis.py',239),
  ('if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','if',7,'p_if','sintaxis.py',244),
  ('else -> ELSE LCURLY expresiones RCURLY','else',4,'p_else','sintaxis.py',249),
  ('else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','else_if',7,'p_else_if','sintaxis.py',254),
  ('else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','else_if',8,'p_else_if','sintaxis.py',255),
  ('else_if -> else_if else_if','else_if',2,'p_else_if','sintaxis.py',256),
  ('if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones','if_r',6,'p_if_r','sintaxis.py',261),
  ('else_r -> ELSE DOUBLEPOINT expresiones','else_r',3,'p_else_r','sintaxis.py',266),
  ('elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones','elseif_r',6,'p_elseif_r','sintaxis.py',271),
  ('elseif_r -> elseif_r elseif_r','elseif_r',2,'p_elseif_r','sintaxis.py',272),
  ('estructuras_while -> while_p','estructuras_while',1,'p_estructuras_while','sintaxis.py',277),
  ('while_p -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','while_p',7,'p_while_p','sintaxis.py',283),
  ('while_p -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON','while_p',8,'p_while_p','sintaxis.py',284),
  ('foreach -> FOREACH LPAREN foreach_content RPAREN LCURLY expresiones RCURLY','foreach',7,'p_foreach','sintaxis.py',289),
  ('foreach_content -> VARIABLE AS VARIABLE','foreach_content',3,'p_foreach_content','sintaxis.py',294),
  ('foreach_content -> VARIABLE AS VARIABLE ARROW VARIABLE','foreach_content',5,'p_foreach_content','sintaxis.py',295),
  ('funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo','funcion_declaracion',3,'p_funcion_declaracion','sintaxis.py',305),
  ('funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo','funcion_declaracion',7,'p_funcion_declaracion','sintaxis.py',306),
  ('funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo','funcion_declaracion',8,'p_funcion_declaracion','sintaxis.py',307),
  ('funcion_declaracion -> FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo','funcion_declaracion',5,'p_funcion_declaracion','sintaxis.py',308),
  ('funcion_declaracion -> FUNCTION LPAREN RPAREN funciones_cuerpo','funcion_declaracion',4,'p_funcion_declaracion','sintaxis.py',309),
  ('funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN variables_por_comma RPAREN','funcion_cabecera_declaracion',4,'p_funcion_cabecera_declaracion','sintaxis.py',315),
  ('funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN RPAREN','funcion_cabecera_declaracion',3,'p_funcion_cabecera_declaracion','sintaxis.py',316),
  ('funciones_cuerpo -> LCURLY expresiones RCURLY','funciones_cuerpo',3,'p_funciones_cuerpo','sintaxis.py',321),
  ('funciones_cuerpo -> LCURLY RCURLY','funciones_cuerpo',2,'p_funciones_cuerpo','sintaxis.py',322),
  ('return -> RETURN var_asignar_contenido SEMICOLON','return',3,'p_return','sintaxis.py',327),
  ('funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN funciones_cuerpo SEMICOLON','funcion_ejecucion',6,'p_funcion_ejecucion','sintaxis.py',333),
  ('funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN funciones_cuerpo SEMICOLON','funcion_ejecucion',5,'p_funcion_ejecucion','sintaxis.py',334),
  ('funcion_ejecucion -> VARIABLE LPAREN RPAREN SEMICOLON','funcion_ejecucion',4,'p_funcion_ejecucion','sintaxis.py',335),
  ('funcion_ejecucion -> VARIABLE LPAREN params RPAREN SEMICOLON','funcion_ejecucion',5,'p_funcion_ejecucion','sintaxis.py',336),
  ('funcion_declaracion_anonima -> FUNCTION LPAREN params RPAREN funciones_cuerpo','funcion_declaracion_anonima',5,'p_funcion_declaracion_anonima','sintaxis.py',341),
  ('funcion_declaracion_anonima -> FUNCTION LPAREN RPAREN funciones_cuerpo','funcion_declaracion_anonima',4,'p_funcion_declaracion_anonima','sintaxis.py',342),
  ('variables_por_comma -> VARIABLE','variables_por_comma',1,'p_variables_por_comma','sintaxis.py',348),
  ('variables_por_comma -> VARIABLE COMMA variables_por_comma','variables_por_comma',3,'p_variables_por_comma','sintaxis.py',349),
  ('datos_estructurados -> map','datos_estructurados',1,'p_datos_estructurados','sintaxis.py',358),
  ('datos_estructurados -> vector','datos_estructurados',1,'p_datos_estructurados','sintaxis.py',359),
  ('datos_estructurados -> set','datos_estructurados',1,'p_datos_estructurados','sintaxis.py',360),
  ('map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN','map',7,'p_map','sintaxis.py',367),
  ('map -> NEW MAP LPAREN RPAREN','map',4,'p_map','sintaxis.py',368),
  ('clave_valor -> elemento_string ARROW param','clave_valor',3,'p_clave_valor','sintaxis.py',373),
  ('clave_valor -> NUMBER ARROW param','clave_valor',3,'p_clave_valor','sintaxis.py',374),
  ('todos_clave_valor -> clave_valor','todos_clave_valor',1,'p_todos_clave_valor','sintaxis.py',379),
  ('todos_clave_valor -> clave_valor COMMA todos_clave_valor','todos_clave_valor',3,'p_todos_clave_valor','sintaxis.py',380),
  ('vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN','vector',7,'p_vector','sintaxis.py',386),
  ('vector -> NEW VECTOR LPAREN RPAREN','vector',4,'p_vector','sintaxis.py',387),
  ('datos -> FLOAT','datos',1,'p_datos','sintaxis.py',392),
  ('datos -> NUMBER','datos',1,'p_datos','sintaxis.py',393),
  ('datos -> STRING','datos',1,'p_datos','sintaxis.py',394),
  ('datos -> STRINGCC','datos',1,'p_datos','sintaxis.py',395),
  ('datos -> elemento_logico_pri','datos',1,'p_datos','sintaxis.py',396),
  ('llenar -> datos','llenar',1,'p_llenar','sintaxis.py',401),
  ('llenar -> datos COMMA llenar','llenar',3,'p_llenar','sintaxis.py',402),
  ('set -> NEW SET LPAREN LBRACKET params RBRACKET RPAREN','set',7,'p_set','sintaxis.py',407),
  ('set -> NEW SET LPAREN RPAREN','set',4,'p_set','sintaxis.py',408),
  ('funciones_datos_estructurados -> funciones_map','funciones_datos_estructurados',1,'p_funciones_datos_estructurados','sintaxis.py',415),
  ('funciones_datos_estructurados -> funciones_set','funciones_datos_estructurados',1,'p_funciones_datos_estructurados','sintaxis.py',416),
  ('funciones_datos_estructurados -> funciones_vector','funciones_datos_estructurados',1,'p_funciones_datos_estructurados','sintaxis.py',417),
  ('funciones_map -> key_map','funciones_map',1,'p_funciones_map','sintaxis.py',422),
  ('funciones_map -> diff_map','funciones_map',1,'p_funciones_map','sintaxis.py',423),
  ('key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON','key_map',9,'p_key_map','sintaxis.py',428),
  ('diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON','diff_map',10,'p_diff_map','sintaxis.py',434),
  ('funciones_vector -> find_vector','funciones_vector',1,'p_funciones_vector','sintaxis.py',442),
  ('funciones_vector -> push_vector','funciones_vector',1,'p_funciones_vector','sintaxis.py',443),
  ('find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON','find_vector',10,'p_find_vector','sintaxis.py',448),
  ('push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON','push_vector',7,'p_push_vector','sintaxis.py',453),
  ('push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON','push_vector',7,'p_push_vector','sintaxis.py',454),
  ('push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON','push_vector',9,'p_push_vector','sintaxis.py',455),
  ('funciones_set -> union_set','funciones_set',1,'p_funciones_set','sintaxis.py',462),
  ('funciones_set -> remove_set','funciones_set',1,'p_funciones_set','sintaxis.py',463),
  ('union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON','union_set',10,'p_union_set','sintaxis.py',468),
  ('remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params_unitype RPAREN SEMICOLON','remove_set',7,'p_remove_set','sintaxis.py',473),
  ('remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params_unitype RBRACKET RPAREN SEMICOLON','remove_set',9,'p_remove_set','sintaxis.py',474),
]
