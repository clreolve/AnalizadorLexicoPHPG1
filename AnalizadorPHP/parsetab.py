
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDlOGICAL ARROW AS BREAK CASE CATCH CLASS COMMA DIFFERENT DIVIDE DO DOUBLEPOINT ECHO ELSE ELSEIF ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE EQUALS EQUALSLOGICAL EXPONENTIAL EXTENDS FALSE FINAL FLOAT FOR FOREACH FUNCTION GLOBAL GREATEREQUAL GREATERTHAN ID IDENTICAL IF IMPLEMENTS INTERFACE LBRACKET LCURLY LESSEQUAL LESSTHAN LPAREN MINUS NEW NOTIDENTICAL NOTLOGICAL NUMBER OR ORLOGICAL PHPEND PHPSTART PLUS POINT PRINT PRINT_R PRIVATE PROTECTED PUBLIC RBRACKET RCURLY READLINE RETURN RPAREN SEMICOLON STATIC STRING STRINGCC SWITCH THROW TIMES TRUE VAR VARIABLE VAR_DUMP VAR_EXPORT WHILE XOR\n    expresiones : expresion\n                | expresion expresiones\n    \n    expresion : var_asignar\n                | var_declarar\n                | expresiones_de_salida\n                | estructuras_de_control\n                | var_plusminus\n                | datos_estructurados\n\n    \n    var_declarar : VAR var_asignar\n    \n    var_plusminus : VARIABLE PLUS PLUS SEMICOLON\n                | VARIABLE MINUS MINUS SEMICOLON\n    \n    var_asignar : VARIABLE EQUALS VARIABLE SEMICOLON\n                    | VARIABLE EQUALS elemento_numerico SEMICOLON\n                    | VARIABLE EQUALS elemento_string SEMICOLON\n                    | VARIABLE EQUALS elemento_logico SEMICOLON\n                    | VARIABLE EQUALS funciones_ingreso_datos SEMICOLON\n    \n    elemento_numerico : elemento_numerico operador elemento_numerico\n                        | FLOAT\n                        | NUMBER\n                        | LPAREN elemento_numerico RPAREN\n                        | VARIABLE\n    \n    operador : PLUS\n            | MINUS\n            | DIVIDE\n            | EXPONENTIAL\n            | TIMES\n    elemento_string : STRING\n                        | STRINGCC\n                        | VARIABLE\n    \n    elemento_logico : elemento_logico_pri\n                    | elemento_logico_pri comparador elemento_logico_pri\n                    | NOTLOGICAL elemento_logico_pri\n                    | LPAREN elemento_logico_pri RPAREN\n                    | VARIABLE\n                    | elemento_numerico comparador elemento_numerico\n                    | elemento_string comparador elemento_string\n    \n    elemento_logico_pri : TRUE\n                        | FALSE\n    \n    comparador : IDENTICAL\n               | NOTIDENTICAL\n               | EQUALSLOGICAL\n               | DIFFERENT\n               | GREATEREQUAL\n               | LESSEQUAL\n               | GREATERTHAN\n               | LESSTHAN\n               | ANDlOGICAL\n               | ORLOGICAL\n    \n    param : VARIABLE\n            | elemento_string\n            | elemento_numerico\n            | elemento_logico\n    \n    params : param\n            | param COMMA params\n    \n    params_points : param\n                | param POINT params_points\n    \n    optional_params : param\n                        | ""\n                        | param COMMA optional_params\n    \n    expresiones_de_salida : echo\n                            | print\n                            | var_dump\n                            | print_r\n                            | var_export\n    \n    echo : ECHO params SEMICOLON\n            | ECHO params_points SEMICOLON\n    \n    print : PRINT param SEMICOLON\n    \n    print_r : PRINT_R LPAREN param RPAREN SEMICOLON\n    \n    var_dump : VAR_DUMP LPAREN param RPAREN SEMICOLON\n    \n    var_export : VAR_EXPORT LPAREN param RPAREN SEMICOLON\n    \n    funciones_ingreso_datos : VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN\n                        | READLINE LPAREN RPAREN\n                        | READLINE LPAREN elemento_string RPAREN\n    \n    estructuras_de_control : if_structures\n                            | estructuras_while\n    \n    if_structures : if\n            | if else\n            | if else_if else\n            | if else_if\n            | if_r ENDIF SEMICOLON\n            | if_r else_r ENDIF SEMICOLON\n            | if_r elseif_r else_r ENDIF SEMICOLON\n            | if_r elseif_r ENDIF SEMICOLON\n\n    \n    if : IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n    \n    else : ELSE LCURLY expresiones RCURLY\n    \n    else_if : ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | else_if else_if\n    \n    if_r : IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones\n    \n    else_r : ELSE DOUBLEPOINT expresiones\n    \n    elseif_r : ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones\n                | elseif_r elseif_r\n    \n    estructuras_while : while\n\n    \n    while : WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON\n    \n    datos_estructurados : map\n                            | vector\n                            | set\n    \n    map : VARIABLE EQUALS NEW LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN SEMICOLON\n    \n    clave_valor : elemento_string ARROW elemento_string\n                    | elemento_string ARROW NUMBER\n                    | NUMBER ARROW elemento_string\n                    | NUMBER ARROW NUMBER\n                    | NUMBER ARROW elemento_logico_pri\n                    | elemento_string ARROW elemento_logico_pri\n    \n    todos_clave_valor : clave_valor\n                            | clave_valor COMMA todos_clave_valor\n    \n    vector : VARIABLE EQUALS NEW LPAREN LBRACKET llenar RBRACKET RPAREN SEMICOLON\n    \n    datos : FLOAT\n                | NUMBER\n                | STRING\n                | STRINGCC\n                | elemento_logico_pri\n    \n    llenar : datos\n                | datos COMMA llenar\n    \n    set : VARIABLE EQUALS NEW LPAREN LBRACKET llenar RBRACKET RPAREN SEMICOLON\n    '
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,26,28,32,35,48,54,55,56,57,58,66,67,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,111,112,113,115,116,121,122,123,129,130,131,132,133,135,136,137,138,155,157,159,164,168,169,170,171,174,176,177,178,179,190,193,194,201,203,204,206,209,210,228,229,230,231,232,],[9,9,-3,-4,-5,-6,-7,-8,36,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,40,40,-76,-93,68,-9,104,40,40,40,-77,-79,125,125,68,-65,-66,40,40,144,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,104,104,-22,-23,-24,-25,-26,104,-67,-88,-78,9,125,-80,9,125,104,-12,-13,-14,-15,-16,40,144,-10,-11,125,-81,-83,144,-69,-68,-70,-85,-82,9,9,9,9,125,9,9,144,144,144,9,-84,-94,-86,-95,-99,-108,-87,]),'VAR':([0,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,35,57,58,79,80,107,111,112,113,116,121,129,130,131,132,133,137,138,157,159,168,169,170,171,174,176,177,178,179,193,194,206,209,210,228,229,230,231,232,],[10,10,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-9,-77,-79,-65,-66,-67,-88,-78,10,-80,10,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,10,10,10,10,10,10,10,-84,-94,-86,-95,-99,-108,-87,]),'ECHO':([0,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,35,57,58,79,80,107,111,112,113,116,121,129,130,131,132,133,137,138,157,159,168,169,170,171,174,176,177,178,179,193,194,206,209,210,228,229,230,231,232,],[21,21,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-9,-77,-79,-65,-66,-67,-88,-78,21,-80,21,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,21,21,21,21,21,21,21,-84,-94,-86,-95,-99,-108,-87,]),'PRINT':([0,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,35,57,58,79,80,107,111,112,113,116,121,129,130,131,132,133,137,138,157,159,168,169,170,171,174,176,177,178,179,193,194,206,209,210,228,229,230,231,232,],[22,22,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-9,-77,-79,-65,-66,-67,-88,-78,22,-80,22,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,22,22,22,22,22,22,22,-84,-94,-86,-95,-99,-108,-87,]),'VAR_DUMP':([0,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,35,57,58,79,80,107,111,112,113,116,121,129,130,131,132,133,137,138,157,159,168,169,170,171,174,176,177,178,179,193,194,206,209,210,228,229,230,231,232,],[23,23,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-9,-77,-79,-65,-66,-67,-88,-78,23,-80,23,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,23,23,23,23,23,23,23,-84,-94,-86,-95,-99,-108,-87,]),'PRINT_R':([0,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,35,57,58,79,80,107,111,112,113,116,121,129,130,131,132,133,137,138,157,159,168,169,170,171,174,176,177,178,179,193,194,206,209,210,228,229,230,231,232,],[24,24,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-9,-77,-79,-65,-66,-67,-88,-78,24,-80,24,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,24,24,24,24,24,24,24,-84,-94,-86,-95,-99,-108,-87,]),'VAR_EXPORT':([0,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,32,35,57,58,78,79,80,107,111,112,113,116,121,129,130,131,132,133,137,138,157,159,168,169,170,171,174,176,177,178,179,193,194,206,209,210,228,229,230,231,232,],[25,25,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,74,-9,-77,-79,74,-65,-66,-67,-88,-78,25,-80,25,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,25,25,25,25,25,25,25,-84,-94,-86,-95,-99,-108,-87,]),'IF':([0,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,35,57,58,59,79,80,107,111,112,113,116,121,129,130,131,132,133,137,138,153,157,159,168,169,170,171,174,176,177,178,179,193,194,206,209,210,228,229,230,231,232,],[29,29,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-9,-77,-79,114,-65,-66,-67,-88,-78,29,-80,29,-12,-13,-14,-15,-16,-10,-11,114,-81,-83,-69,-68,-70,-85,-82,29,29,29,29,29,29,29,-84,-94,-86,-95,-99,-108,-87,]),'WHILE':([0,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,35,57,58,79,80,107,111,112,113,116,121,129,130,131,132,133,137,138,157,159,168,169,170,171,174,176,177,178,179,193,194,206,209,210,228,229,230,231,232,],[30,30,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-9,-77,-79,-65,-66,-67,-88,-78,30,-80,30,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,30,30,30,30,30,30,30,-84,-94,-86,-95,-99,-108,-87,]),'$end':([1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,31,35,57,58,79,80,107,111,112,116,129,130,131,132,133,137,138,157,159,168,169,170,171,174,209,210,228,229,230,231,232,],[0,-1,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-2,-9,-77,-79,-65,-66,-67,-88,-78,-80,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,-84,-94,-86,-95,-99,-108,-87,]),'RCURLY':([2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,31,35,57,58,79,80,107,111,112,116,129,130,131,132,133,137,138,154,157,159,168,169,170,171,174,195,197,207,209,210,227,228,229,230,231,232,],[-1,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-2,-9,-77,-79,-65,-66,-67,-88,-78,-80,-12,-13,-14,-15,-16,-10,-11,171,-81,-83,-69,-68,-70,-85,-82,209,210,228,-84,-94,232,-86,-95,-99,-108,-87,]),'ENDIF':([2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,27,28,31,35,57,58,62,63,79,80,107,111,112,116,118,119,129,130,131,132,133,137,138,157,159,160,168,169,170,171,174,196,208,209,210,228,229,230,231,232,],[-1,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,61,-93,-2,-9,-77,-79,117,120,-65,-66,-67,-88,-78,-80,-92,158,-12,-13,-14,-15,-16,-10,-11,-81,-83,-90,-69,-68,-70,-85,-82,-89,-91,-84,-94,-86,-95,-99,-108,-87,]),'ELSE':([2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,27,28,31,35,57,58,63,79,80,107,111,112,116,118,129,130,131,132,133,137,138,157,159,168,169,170,171,174,196,208,209,210,228,229,230,231,232,],[-1,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,59,64,-93,-2,-9,-77,59,64,-65,-66,-67,153,-78,-80,-92,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,-89,-91,-84,-94,-86,-95,-99,-108,-87,]),'ELSEIF':([2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,27,28,31,35,57,58,63,79,80,107,111,112,116,118,129,130,131,132,133,137,138,157,159,168,169,170,171,174,196,208,209,210,228,229,230,231,232,],[-1,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,60,65,-93,-2,-9,-77,60,65,-65,-66,-67,60,-78,-80,65,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,-89,-91,-84,-94,-86,-95,-99,-108,-87,]),'ENDWHILE':([2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,26,28,31,35,57,58,79,80,107,111,112,116,129,130,131,132,133,137,138,157,159,168,169,170,171,174,198,209,210,228,229,230,231,232,],[-1,-3,-4,-5,-6,-7,-8,-60,-61,-62,-63,-64,-74,-75,-96,-97,-98,-76,-93,-2,-9,-77,-79,-65,-66,-67,-88,-78,-80,-12,-13,-14,-15,-16,-10,-11,-81,-83,-69,-68,-70,-85,-82,211,-84,-94,-86,-95,-99,-108,-87,]),'EQUALS':([9,36,],[32,78,]),'PLUS':([9,33,40,42,46,47,68,69,102,104,125,126,145,146,147,],[33,76,-21,96,-18,-19,-21,96,96,-21,-21,96,96,96,-20,]),'MINUS':([9,34,40,42,46,47,68,69,102,104,125,126,145,146,147,],[34,77,-21,97,-18,-19,-21,97,97,-21,-21,97,97,97,-20,]),'STRING':([21,22,32,54,55,56,66,67,78,81,82,83,84,85,86,87,88,89,90,91,92,93,115,122,135,136,155,164,190,201,202,203,204,],[44,44,44,44,44,44,44,44,44,44,44,44,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,44,44,44,44,44,188,44,44,218,44,44,]),'STRINGCC':([21,22,32,54,55,56,66,67,78,81,82,83,84,85,86,87,88,89,90,91,92,93,115,122,135,136,155,164,190,201,202,203,204,],[45,45,45,45,45,45,45,45,45,45,45,45,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,45,45,45,45,45,189,45,45,219,45,45,]),'FLOAT':([21,22,32,48,54,55,56,66,67,78,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,115,122,123,135,155,164,190,202,],[46,46,46,46,46,46,46,46,46,46,46,46,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,46,46,-22,-23,-24,-25,-26,46,46,46,46,46,46,187,46,187,]),'NUMBER':([21,22,32,48,54,55,56,66,67,78,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,115,122,123,135,155,164,190,201,202,203,204,],[47,47,47,47,47,47,47,47,47,47,47,47,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,47,47,-22,-23,-24,-25,-26,47,47,47,47,47,47,185,47,215,217,221,223,]),'LPAREN':([21,22,23,24,25,29,30,32,48,54,55,56,60,65,66,67,73,74,75,78,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,114,115,122,123,135,155,190,],[48,48,54,55,56,66,67,48,101,48,48,48,115,122,123,123,134,135,136,48,48,48,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,101,101,-22,-23,-24,-25,-26,101,155,123,123,101,48,123,123,]),'NOTLOGICAL':([21,22,32,54,55,56,66,67,78,81,82,115,122,135,155,190,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'TRUE':([21,22,32,48,50,54,55,56,66,67,78,81,82,84,85,86,87,88,89,90,91,92,93,105,115,122,123,135,155,164,190,202,203,204,],[51,51,51,51,51,51,51,51,51,51,51,51,51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,51,51,51,51,51,51,51,51,51,51,51,]),'FALSE':([21,22,32,48,50,54,55,56,66,67,78,81,82,84,85,86,87,88,89,90,91,92,93,105,115,122,123,135,155,164,190,202,203,204,],[52,52,52,52,52,52,52,52,52,52,52,52,52,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,52,52,52,52,52,52,52,52,52,52,52,]),'NEW':([32,],[73,]),'READLINE':([32,78,],[75,75,]),'SEMICOLON':([37,38,39,40,41,42,43,44,45,46,47,49,51,52,53,61,68,69,70,71,72,76,77,104,106,117,120,139,140,141,142,143,144,145,146,147,148,149,150,151,152,158,166,191,211,212,213,226,],[79,80,-53,-21,-50,-51,-52,-27,-28,-18,-19,-30,-37,-38,107,116,129,130,131,132,133,137,138,-21,-32,157,159,-53,-54,-55,-56,-36,-29,-17,-35,-20,-33,-31,168,169,170,174,-72,-73,229,230,231,-71,]),'COMMA':([39,40,41,42,43,44,45,46,47,49,51,52,104,106,139,143,144,145,146,147,148,149,165,182,183,185,186,187,188,189,217,218,219,220,221,222,223,224,225,],[81,-21,-50,-51,-52,-27,-28,-18,-19,-30,-37,-38,-21,-32,81,-36,-29,-17,-35,-20,-33,-31,190,201,202,-110,-113,-109,-111,-112,-110,-111,-112,-100,-101,-105,-103,-102,-104,]),'POINT':([39,40,41,42,43,44,45,46,47,49,51,52,104,106,141,143,144,145,146,147,148,149,],[82,-21,-50,-51,-52,-27,-28,-18,-19,-30,-37,-38,-21,-32,82,-36,-29,-17,-35,-20,-33,-31,]),'RPAREN':([40,41,42,43,44,45,46,47,49,51,52,102,103,104,106,108,109,110,124,125,128,136,143,144,145,146,147,148,149,156,161,167,172,199,200,205,],[-21,-50,-51,-52,-27,-28,-18,-19,-30,-37,-38,147,148,-21,-32,150,151,152,162,-34,163,166,-36,-29,-17,-35,-20,-33,-31,173,175,191,192,212,213,226,]),'IDENTICAL':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,84,84,-27,-28,-18,-19,84,-37,-38,-21,84,84,-21,-21,84,84,-17,-20,]),'NOTIDENTICAL':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,85,85,-27,-28,-18,-19,85,-37,-38,-21,85,85,-21,-21,85,85,-17,-20,]),'EQUALSLOGICAL':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,86,86,-27,-28,-18,-19,86,-37,-38,-21,86,86,-21,-21,86,86,-17,-20,]),'DIFFERENT':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,87,87,-27,-28,-18,-19,87,-37,-38,-21,87,87,-21,-21,87,87,-17,-20,]),'GREATEREQUAL':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,88,88,-27,-28,-18,-19,88,-37,-38,-21,88,88,-21,-21,88,88,-17,-20,]),'LESSEQUAL':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,89,89,-27,-28,-18,-19,89,-37,-38,-21,89,89,-21,-21,89,89,-17,-20,]),'GREATERTHAN':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,90,90,-27,-28,-18,-19,90,-37,-38,-21,90,90,-21,-21,90,90,-17,-20,]),'LESSTHAN':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,91,91,-27,-28,-18,-19,91,-37,-38,-21,91,91,-21,-21,91,91,-17,-20,]),'ANDlOGICAL':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,92,92,-27,-28,-18,-19,92,-37,-38,-21,92,92,-21,-21,92,92,-17,-20,]),'ORLOGICAL':([40,41,42,44,45,46,47,49,51,52,68,69,70,104,125,126,127,145,147,],[-21,93,93,-27,-28,-18,-19,93,-37,-38,-21,93,93,-21,-21,93,93,-17,-20,]),'DIVIDE':([40,42,46,47,68,69,102,104,125,126,145,146,147,],[-21,98,-18,-19,-21,98,98,-21,-21,98,98,98,-20,]),'EXPONENTIAL':([40,42,46,47,68,69,102,104,125,126,145,146,147,],[-21,99,-18,-19,-21,99,99,-21,-21,99,99,99,-20,]),'TIMES':([40,42,46,47,68,69,102,104,125,126,145,146,147,],[-21,100,-18,-19,-21,100,100,-21,-21,100,100,100,-20,]),'ARROW':([44,45,144,184,185,188,189,215,],[-27,-28,-29,203,204,-27,-28,204,]),'RBRACKET':([44,45,51,52,144,180,181,182,183,185,186,187,188,189,214,216,217,218,219,220,221,222,223,224,225,],[-27,-28,-37,-38,-29,199,200,-106,-114,-110,-113,-109,-111,-112,-107,-115,-110,-111,-112,-100,-101,-105,-103,-102,-104,]),'LCURLY':([59,162,163,173,192,],[113,176,178,193,206,]),'DOUBLEPOINT':([64,162,163,175,],[121,177,179,194,]),'LBRACKET':([134,],[164,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresiones':([0,2,113,121,176,177,178,179,193,194,206,],[1,31,154,160,195,196,197,198,207,208,227,]),'expresion':([0,2,113,121,176,177,178,179,193,194,206,],[2,2,2,2,2,2,2,2,2,2,2,]),'var_asignar':([0,2,10,113,121,176,177,178,179,193,194,206,],[3,3,35,3,3,3,3,3,3,3,3,3,]),'var_declarar':([0,2,113,121,176,177,178,179,193,194,206,],[4,4,4,4,4,4,4,4,4,4,4,]),'expresiones_de_salida':([0,2,113,121,176,177,178,179,193,194,206,],[5,5,5,5,5,5,5,5,5,5,5,]),'estructuras_de_control':([0,2,113,121,176,177,178,179,193,194,206,],[6,6,6,6,6,6,6,6,6,6,6,]),'var_plusminus':([0,2,113,121,176,177,178,179,193,194,206,],[7,7,7,7,7,7,7,7,7,7,7,]),'datos_estructurados':([0,2,113,121,176,177,178,179,193,194,206,],[8,8,8,8,8,8,8,8,8,8,8,]),'echo':([0,2,113,121,176,177,178,179,193,194,206,],[11,11,11,11,11,11,11,11,11,11,11,]),'print':([0,2,113,121,176,177,178,179,193,194,206,],[12,12,12,12,12,12,12,12,12,12,12,]),'var_dump':([0,2,113,121,176,177,178,179,193,194,206,],[13,13,13,13,13,13,13,13,13,13,13,]),'print_r':([0,2,113,121,176,177,178,179,193,194,206,],[14,14,14,14,14,14,14,14,14,14,14,]),'var_export':([0,2,113,121,176,177,178,179,193,194,206,],[15,15,15,15,15,15,15,15,15,15,15,]),'if_structures':([0,2,113,121,176,177,178,179,193,194,206,],[16,16,16,16,16,16,16,16,16,16,16,]),'estructuras_while':([0,2,113,121,176,177,178,179,193,194,206,],[17,17,17,17,17,17,17,17,17,17,17,]),'map':([0,2,113,121,176,177,178,179,193,194,206,],[18,18,18,18,18,18,18,18,18,18,18,]),'vector':([0,2,113,121,176,177,178,179,193,194,206,],[19,19,19,19,19,19,19,19,19,19,19,]),'set':([0,2,113,121,176,177,178,179,193,194,206,],[20,20,20,20,20,20,20,20,20,20,20,]),'if':([0,2,113,121,176,177,178,179,193,194,206,],[26,26,26,26,26,26,26,26,26,26,26,]),'if_r':([0,2,113,121,176,177,178,179,193,194,206,],[27,27,27,27,27,27,27,27,27,27,27,]),'while':([0,2,113,121,176,177,178,179,193,194,206,],[28,28,28,28,28,28,28,28,28,28,28,]),'params':([21,81,],[37,140,]),'params_points':([21,82,],[38,142,]),'param':([21,22,54,55,56,81,82,135,],[39,53,108,109,110,139,141,165,]),'elemento_string':([21,22,32,54,55,56,66,67,78,81,82,83,115,122,135,136,155,164,190,201,203,204,],[41,41,70,41,41,41,127,127,70,41,41,143,127,127,41,167,127,184,127,184,220,224,]),'elemento_numerico':([21,22,32,48,54,55,56,66,67,78,81,82,94,95,101,115,122,123,135,155,190,],[42,42,69,102,42,42,42,126,126,69,42,42,145,146,102,126,126,102,42,126,126,]),'elemento_logico':([21,22,32,54,55,56,66,67,78,81,82,115,122,135,155,190,],[43,43,71,43,43,43,124,128,71,43,43,156,161,43,172,205,]),'elemento_logico_pri':([21,22,32,48,50,54,55,56,66,67,78,81,82,105,115,122,123,135,155,164,190,202,203,204,],[49,49,49,103,106,49,49,49,49,49,49,49,49,149,49,49,103,49,49,186,49,186,222,225,]),'else':([26,58,],[57,112,]),'else_if':([26,58,111,],[58,111,111,]),'else_r':([27,63,],[62,119,]),'elseif_r':([27,63,118,],[63,118,118,]),'funciones_ingreso_datos':([32,78,],[72,72,]),'comparador':([41,42,49,69,70,126,127,],[83,95,105,95,83,95,83,]),'operador':([42,69,102,126,145,146,],[94,94,94,94,94,94,]),'todos_clave_valor':([164,201,],[180,214,]),'llenar':([164,202,],[181,216,]),'clave_valor':([164,201,],[182,182,]),'datos':([164,202,],[183,183,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresiones","S'",1,None,None,None),
  ('expresiones -> expresion','expresiones',1,'p_expresiones','sintaxis.py',6),
  ('expresiones -> expresion expresiones','expresiones',2,'p_expresiones','sintaxis.py',7),
  ('expresion -> var_asignar','expresion',1,'p_expresion','sintaxis.py',12),
  ('expresion -> var_declarar','expresion',1,'p_expresion','sintaxis.py',13),
  ('expresion -> expresiones_de_salida','expresion',1,'p_expresion','sintaxis.py',14),
  ('expresion -> estructuras_de_control','expresion',1,'p_expresion','sintaxis.py',15),
  ('expresion -> var_plusminus','expresion',1,'p_expresion','sintaxis.py',16),
  ('expresion -> datos_estructurados','expresion',1,'p_expresion','sintaxis.py',17),
  ('var_declarar -> VAR var_asignar','var_declarar',2,'p_var_declarar','sintaxis.py',25),
  ('var_plusminus -> VARIABLE PLUS PLUS SEMICOLON','var_plusminus',4,'p_var_plusminus','sintaxis.py',30),
  ('var_plusminus -> VARIABLE MINUS MINUS SEMICOLON','var_plusminus',4,'p_var_plusminus','sintaxis.py',31),
  ('var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',36),
  ('var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',37),
  ('var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',38),
  ('var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',39),
  ('var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',40),
  ('elemento_numerico -> elemento_numerico operador elemento_numerico','elemento_numerico',3,'p_elemento_numerico','sintaxis.py',47),
  ('elemento_numerico -> FLOAT','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',48),
  ('elemento_numerico -> NUMBER','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',49),
  ('elemento_numerico -> LPAREN elemento_numerico RPAREN','elemento_numerico',3,'p_elemento_numerico','sintaxis.py',50),
  ('elemento_numerico -> VARIABLE','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',51),
  ('operador -> PLUS','operador',1,'p_operador','sintaxis.py',57),
  ('operador -> MINUS','operador',1,'p_operador','sintaxis.py',58),
  ('operador -> DIVIDE','operador',1,'p_operador','sintaxis.py',59),
  ('operador -> EXPONENTIAL','operador',1,'p_operador','sintaxis.py',60),
  ('operador -> TIMES','operador',1,'p_operador','sintaxis.py',61),
  ('elemento_string -> STRING','elemento_string',1,'p_elemento_string','sintaxis.py',66),
  ('elemento_string -> STRINGCC','elemento_string',1,'p_elemento_string','sintaxis.py',67),
  ('elemento_string -> VARIABLE','elemento_string',1,'p_elemento_string','sintaxis.py',68),
  ('elemento_logico -> elemento_logico_pri','elemento_logico',1,'p_elemento_logico','sintaxis.py',74),
  ('elemento_logico -> elemento_logico_pri comparador elemento_logico_pri','elemento_logico',3,'p_elemento_logico','sintaxis.py',75),
  ('elemento_logico -> NOTLOGICAL elemento_logico_pri','elemento_logico',2,'p_elemento_logico','sintaxis.py',76),
  ('elemento_logico -> LPAREN elemento_logico_pri RPAREN','elemento_logico',3,'p_elemento_logico','sintaxis.py',77),
  ('elemento_logico -> VARIABLE','elemento_logico',1,'p_elemento_logico','sintaxis.py',78),
  ('elemento_logico -> elemento_numerico comparador elemento_numerico','elemento_logico',3,'p_elemento_logico','sintaxis.py',79),
  ('elemento_logico -> elemento_string comparador elemento_string','elemento_logico',3,'p_elemento_logico','sintaxis.py',80),
  ('elemento_logico_pri -> TRUE','elemento_logico_pri',1,'p_elemento_logico_pri','sintaxis.py',86),
  ('elemento_logico_pri -> FALSE','elemento_logico_pri',1,'p_elemento_logico_pri','sintaxis.py',87),
  ('comparador -> IDENTICAL','comparador',1,'p_comparador','sintaxis.py',92),
  ('comparador -> NOTIDENTICAL','comparador',1,'p_comparador','sintaxis.py',93),
  ('comparador -> EQUALSLOGICAL','comparador',1,'p_comparador','sintaxis.py',94),
  ('comparador -> DIFFERENT','comparador',1,'p_comparador','sintaxis.py',95),
  ('comparador -> GREATEREQUAL','comparador',1,'p_comparador','sintaxis.py',96),
  ('comparador -> LESSEQUAL','comparador',1,'p_comparador','sintaxis.py',97),
  ('comparador -> GREATERTHAN','comparador',1,'p_comparador','sintaxis.py',98),
  ('comparador -> LESSTHAN','comparador',1,'p_comparador','sintaxis.py',99),
  ('comparador -> ANDlOGICAL','comparador',1,'p_comparador','sintaxis.py',100),
  ('comparador -> ORLOGICAL','comparador',1,'p_comparador','sintaxis.py',101),
  ('param -> VARIABLE','param',1,'p_param','sintaxis.py',110),
  ('param -> elemento_string','param',1,'p_param','sintaxis.py',111),
  ('param -> elemento_numerico','param',1,'p_param','sintaxis.py',112),
  ('param -> elemento_logico','param',1,'p_param','sintaxis.py',113),
  ('params -> param','params',1,'p_params','sintaxis.py',119),
  ('params -> param COMMA params','params',3,'p_params','sintaxis.py',120),
  ('params_points -> param','params_points',1,'p_params_points','sintaxis.py',125),
  ('params_points -> param POINT params_points','params_points',3,'p_params_points','sintaxis.py',126),
  ('optional_params -> param','optional_params',1,'p_optional_params','sintaxis.py',132),
  ('optional_params -> ','optional_params',1,'p_optional_params','sintaxis.py',133),
  ('optional_params -> param COMMA optional_params','optional_params',3,'p_optional_params','sintaxis.py',134),
  ('expresiones_de_salida -> echo','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',141),
  ('expresiones_de_salida -> print','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',142),
  ('expresiones_de_salida -> var_dump','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',143),
  ('expresiones_de_salida -> print_r','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',144),
  ('expresiones_de_salida -> var_export','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',145),
  ('echo -> ECHO params SEMICOLON','echo',3,'p_echo','sintaxis.py',151),
  ('echo -> ECHO params_points SEMICOLON','echo',3,'p_echo','sintaxis.py',152),
  ('print -> PRINT param SEMICOLON','print',3,'p_print','sintaxis.py',157),
  ('print_r -> PRINT_R LPAREN param RPAREN SEMICOLON','print_r',5,'p_print_r','sintaxis.py',162),
  ('var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON','var_dump',5,'p_var_dump','sintaxis.py',167),
  ('var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON','var_export',5,'p_var_export','sintaxis.py',172),
  ('funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN','funciones_ingreso_datos',6,'p_funciones_ingreso_datos','sintaxis.py',177),
  ('funciones_ingreso_datos -> READLINE LPAREN RPAREN','funciones_ingreso_datos',3,'p_funciones_ingreso_datos','sintaxis.py',178),
  ('funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN','funciones_ingreso_datos',4,'p_funciones_ingreso_datos','sintaxis.py',179),
  ('estructuras_de_control -> if_structures','estructuras_de_control',1,'p_estructuras_de_control','sintaxis.py',185),
  ('estructuras_de_control -> estructuras_while','estructuras_de_control',1,'p_estructuras_de_control','sintaxis.py',186),
  ('if_structures -> if','if_structures',1,'p_if_structures','sintaxis.py',191),
  ('if_structures -> if else','if_structures',2,'p_if_structures','sintaxis.py',192),
  ('if_structures -> if else_if else','if_structures',3,'p_if_structures','sintaxis.py',193),
  ('if_structures -> if else_if','if_structures',2,'p_if_structures','sintaxis.py',194),
  ('if_structures -> if_r ENDIF SEMICOLON','if_structures',3,'p_if_structures','sintaxis.py',195),
  ('if_structures -> if_r else_r ENDIF SEMICOLON','if_structures',4,'p_if_structures','sintaxis.py',196),
  ('if_structures -> if_r elseif_r else_r ENDIF SEMICOLON','if_structures',5,'p_if_structures','sintaxis.py',197),
  ('if_structures -> if_r elseif_r ENDIF SEMICOLON','if_structures',4,'p_if_structures','sintaxis.py',198),
  ('if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','if',7,'p_if','sintaxis.py',204),
  ('else -> ELSE LCURLY expresiones RCURLY','else',4,'p_else','sintaxis.py',209),
  ('else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','else_if',7,'p_else_if','sintaxis.py',214),
  ('else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','else_if',8,'p_else_if','sintaxis.py',215),
  ('else_if -> else_if else_if','else_if',2,'p_else_if','sintaxis.py',216),
  ('if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones','if_r',6,'p_if_r','sintaxis.py',221),
  ('else_r -> ELSE DOUBLEPOINT expresiones','else_r',3,'p_else_r','sintaxis.py',226),
  ('elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones','elseif_r',6,'p_elseif_r','sintaxis.py',231),
  ('elseif_r -> elseif_r elseif_r','elseif_r',2,'p_elseif_r','sintaxis.py',232),
  ('estructuras_while -> while','estructuras_while',1,'p_estructuras_while','sintaxis.py',237),
  ('while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','while',7,'p_while','sintaxis.py',243),
  ('while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON','while',8,'p_while','sintaxis.py',244),
  ('datos_estructurados -> map','datos_estructurados',1,'p_datos_estructurados','sintaxis.py',255),
  ('datos_estructurados -> vector','datos_estructurados',1,'p_datos_estructurados','sintaxis.py',256),
  ('datos_estructurados -> set','datos_estructurados',1,'p_datos_estructurados','sintaxis.py',257),
  ('map -> VARIABLE EQUALS NEW LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN SEMICOLON','map',9,'p_map','sintaxis.py',262),
  ('clave_valor -> elemento_string ARROW elemento_string','clave_valor',3,'p_clave_valor','sintaxis.py',267),
  ('clave_valor -> elemento_string ARROW NUMBER','clave_valor',3,'p_clave_valor','sintaxis.py',268),
  ('clave_valor -> NUMBER ARROW elemento_string','clave_valor',3,'p_clave_valor','sintaxis.py',269),
  ('clave_valor -> NUMBER ARROW NUMBER','clave_valor',3,'p_clave_valor','sintaxis.py',270),
  ('clave_valor -> NUMBER ARROW elemento_logico_pri','clave_valor',3,'p_clave_valor','sintaxis.py',271),
  ('clave_valor -> elemento_string ARROW elemento_logico_pri','clave_valor',3,'p_clave_valor','sintaxis.py',272),
  ('todos_clave_valor -> clave_valor','todos_clave_valor',1,'p_todos_clave_valor','sintaxis.py',277),
  ('todos_clave_valor -> clave_valor COMMA todos_clave_valor','todos_clave_valor',3,'p_todos_clave_valor','sintaxis.py',278),
  ('vector -> VARIABLE EQUALS NEW LPAREN LBRACKET llenar RBRACKET RPAREN SEMICOLON','vector',9,'p_vector','sintaxis.py',284),
  ('datos -> FLOAT','datos',1,'p_datos','sintaxis.py',289),
  ('datos -> NUMBER','datos',1,'p_datos','sintaxis.py',290),
  ('datos -> STRING','datos',1,'p_datos','sintaxis.py',291),
  ('datos -> STRINGCC','datos',1,'p_datos','sintaxis.py',292),
  ('datos -> elemento_logico_pri','datos',1,'p_datos','sintaxis.py',293),
  ('llenar -> datos','llenar',1,'p_llenar','sintaxis.py',298),
  ('llenar -> datos COMMA llenar','llenar',3,'p_llenar','sintaxis.py',299),
  ('set -> VARIABLE EQUALS NEW LPAREN LBRACKET llenar RBRACKET RPAREN SEMICOLON','set',9,'p_set','sintaxis.py',304),
]
