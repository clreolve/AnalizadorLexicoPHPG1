
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDlOGICAL ARROW AS BREAK CASE CATCH CLASS COMMA DIFFERENT DIVIDE DO DOUBLEPOINT ECHO ELSE ELSEIF ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE EQUALS EQUALSLOGICAL EXPONENTIAL EXTENDS ElSE_IF FALSE FINAL FLOAT FOR FOREACH FUNCTION GLOBAL GREATEREQUAL GREATERTHAN ID IDENTICAL IF IMPLEMENTS INTERFACE LBRACKET LCURLY LESSEQUAL LESSTHAN LPAREN MINUS NEW NOTIDENTICAL NOTLOGICAL NUMBER OR ORLOGICAL PHPEND PHPSTART PLUS PRINT PRINT_R PRIVATE PROTECTED PUBLIC RBRACKET RCURLY READLINE RETURN RPAREN SEMICOLON STATIC STRING STRINGCC SWITCH THROW TIMES TRUE VAR VARIABLE VAR_DUMP VAR_EXPORT WHILE XOR\n    expresiones : expresion\n                | expresion expresiones\n    \n    expresion : elemento_numerico\n                | var_asignar\n                | var_declarar\n                | expresiones_de_salida\n                | estructuras_de_control\n\n    \n    var_declarar : VAR var_asignar\n    \n    var_asignar : VARIABLE EQUALS VARIABLE SEMICOLON\n                    | VARIABLE EQUALS elemento_numerico SEMICOLON\n                    | VARIABLE EQUALS elemento_string SEMICOLON\n                    | VARIABLE EQUALS elemento_logico SEMICOLON\n                    | VARIABLE EQUALS funciones_ingreso_datos SEMICOLON\n    \n    elemento_numerico : elemento_numerico operador elemento_numerico\n                        | FLOAT\n                        | NUMBER\n                        | LPAREN elemento_numerico RPAREN\n                        | VARIABLE\n    \n    operador : PLUS\n            | MINUS\n            | DIVIDE\n            | EXPONENTIAL\n            | TIMES\n    elemento_string : STRING\n                        | STRINGCC\n                        | VARIABLE\n    \n    elemento_logico : TRUE\n                    | FALSE\n                    | elemento_logico comparador elemento_logico\n                    | NOTLOGICAL elemento_logico\n                    | LPAREN elemento_logico RPAREN\n                    | VARIABLE\n                    | elemento_numerico comparador elemento_numerico\n                    | elemento_string comparador elemento_string\n    \n    comparador : IDENTICAL\n               | NOTIDENTICAL\n               | EQUALSLOGICAL\n               | DIFFERENT\n               | GREATEREQUAL\n               | LESSEQUAL\n               | GREATERTHAN\n               | LESSTHAN\n               | ANDlOGICAL\n               | ORLOGICAL\n    \n    param : VARIABLE\n            | elemento_string\n            | elemento_numerico\n            | elemento_logico\n    \n    params : param\n            | param COMMA params\n    \n    optional_params : param\n                        | ""\n                        | param COMMA optional_params\n    \n    expresiones_de_salida : echo\n                            | print\n                            | var_dump\n                            | print_r\n                            | var_export\n    \n    echo : ECHO params SEMICOLON\n    \n    print : PRINT param SEMICOLON\n    \n    print_r : PRINT_R LPAREN param RPAREN SEMICOLON\n    \n    var_dump : VAR_DUMP LPAREN param RPAREN SEMICOLON\n    \n    var_export : VAR_EXPORT LPAREN param RPAREN SEMICOLON\n    \n    funciones_ingreso_datos : VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN\n                        | READLINE LPAREN RPAREN\n                        | READLINE LPAREN elemento_string RPAREN\n    \n    estructuras_de_control : if_structures\n    \n    if_structures : if\n            | if else\n            | if else_if else\n            | if else_if\n    \n    if : IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n    \n    else : ELSE LCURLY expresiones RCURLY\n    \n    else_if : ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY\n            | else_if else_if\n    '
    
_lr_action_items = {'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,24,27,28,29,30,31,32,34,35,36,46,49,51,52,53,54,55,59,60,61,69,70,72,73,74,75,76,77,78,79,80,81,82,83,89,92,96,97,98,99,100,102,103,104,105,106,107,126,127,128,129,132,133,135,136,141,143,144,],[8,8,-3,-4,-5,-6,-7,-15,-16,8,-18,-54,-55,-56,-57,-58,-67,8,8,-68,8,-19,-20,-21,-22,-23,-18,8,-8,8,8,8,8,8,-69,-71,8,-14,-17,-59,8,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,8,8,8,-60,-76,-70,8,8,8,-9,-10,-11,-12,-13,8,-62,-61,-63,-73,8,8,8,8,-72,-74,-75,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,24,27,28,29,30,31,32,34,35,36,46,49,51,52,53,54,55,59,60,61,69,70,72,73,74,75,76,77,78,79,80,81,82,83,89,92,96,97,98,99,100,102,103,104,105,106,107,126,127,128,129,132,133,135,136,141,143,144,],[9,9,-3,-4,-5,-6,-7,-15,-16,9,-18,-54,-55,-56,-57,-58,-67,9,9,-68,9,-19,-20,-21,-22,-23,-18,9,-8,9,9,9,9,9,-69,-71,9,-14,-17,-59,9,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,9,9,9,-60,-76,-70,9,9,9,-9,-10,-11,-12,-13,9,-62,-61,-63,-73,9,9,9,9,-72,-74,-75,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,46,49,51,52,53,54,55,57,58,59,60,61,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,89,92,96,97,98,99,100,102,103,104,105,106,107,126,127,128,129,132,133,135,136,141,143,144,],[10,10,-3,-4,-5,-6,-7,-15,-16,10,-18,-54,-55,-56,-57,-58,-67,46,46,51,52,53,-68,59,10,-19,-20,-21,-22,-23,-18,46,-8,46,89,46,46,46,-69,-71,99,100,89,-14,-17,107,108,-59,46,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,10,89,89,-60,-76,-70,10,89,89,-9,-10,-11,-12,-13,46,-62,-61,-63,-73,10,89,10,10,-72,-74,-75,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,24,27,28,29,30,31,32,34,35,36,46,49,51,52,53,54,55,59,60,61,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,92,96,97,98,99,100,102,103,104,105,106,107,108,126,127,128,129,132,133,135,136,141,143,144,],[11,11,-3,-4,-5,-6,-7,-15,-16,34,-18,37,-54,-55,-56,-57,-58,-67,40,40,-68,34,-19,-20,-21,-22,-23,-18,62,-8,86,90,40,40,40,-69,-71,90,-14,-17,-59,40,111,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,34,90,90,-60,-76,-70,11,90,90,-9,-10,-11,-12,-13,40,111,-62,-61,-63,-73,11,90,11,11,-72,-74,-75,]),'VAR':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,24,34,36,54,55,60,61,69,92,96,97,98,102,103,104,105,106,126,127,128,129,132,135,136,141,143,144,],[12,12,-3,-4,-5,-6,-7,-15,-16,-18,-54,-55,-56,-57,-58,-67,-68,-18,-8,-69,-71,-14,-17,-59,-60,-76,-70,12,-9,-10,-11,-12,-13,-62,-61,-63,-73,12,12,12,-72,-74,-75,]),'ECHO':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,24,34,36,54,55,60,61,69,92,96,97,98,102,103,104,105,106,126,127,128,129,132,135,136,141,143,144,],[19,19,-3,-4,-5,-6,-7,-15,-16,-18,-54,-55,-56,-57,-58,-67,-68,-18,-8,-69,-71,-14,-17,-59,-60,-76,-70,19,-9,-10,-11,-12,-13,-62,-61,-63,-73,19,19,19,-72,-74,-75,]),'PRINT':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,24,34,36,54,55,60,61,69,92,96,97,98,102,103,104,105,106,126,127,128,129,132,135,136,141,143,144,],[20,20,-3,-4,-5,-6,-7,-15,-16,-18,-54,-55,-56,-57,-58,-67,-68,-18,-8,-69,-71,-14,-17,-59,-60,-76,-70,20,-9,-10,-11,-12,-13,-62,-61,-63,-73,20,20,20,-72,-74,-75,]),'VAR_DUMP':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,24,34,36,54,55,60,61,69,92,96,97,98,102,103,104,105,106,126,127,128,129,132,135,136,141,143,144,],[21,21,-3,-4,-5,-6,-7,-15,-16,-18,-54,-55,-56,-57,-58,-67,-68,-18,-8,-69,-71,-14,-17,-59,-60,-76,-70,21,-9,-10,-11,-12,-13,-62,-61,-63,-73,21,21,21,-72,-74,-75,]),'PRINT_R':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,24,34,36,54,55,60,61,69,92,96,97,98,102,103,104,105,106,126,127,128,129,132,135,136,141,143,144,],[22,22,-3,-4,-5,-6,-7,-15,-16,-18,-54,-55,-56,-57,-58,-67,-68,-18,-8,-69,-71,-14,-17,-59,-60,-76,-70,22,-9,-10,-11,-12,-13,-62,-61,-63,-73,22,22,22,-72,-74,-75,]),'VAR_EXPORT':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,24,34,35,36,54,55,60,61,69,92,96,97,98,102,103,104,105,106,126,127,128,129,132,135,136,141,143,144,],[23,23,-3,-4,-5,-6,-7,-15,-16,-18,-54,-55,-56,-57,-58,-67,-68,-18,67,-8,-69,-71,-14,-17,-59,-60,-76,-70,23,-9,-10,-11,-12,-13,-62,-61,-63,-73,23,23,23,-72,-74,-75,]),'IF':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,24,34,36,54,55,60,61,69,92,96,97,98,102,103,104,105,106,126,127,128,129,132,135,136,141,143,144,],[25,25,-3,-4,-5,-6,-7,-15,-16,-18,-54,-55,-56,-57,-58,-67,-68,-18,-8,-69,-71,-14,-17,-59,-60,-76,-70,25,-9,-10,-11,-12,-13,-62,-61,-63,-73,25,25,25,-72,-74,-75,]),'$end':([1,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,24,26,34,36,54,55,60,61,69,92,96,97,102,103,104,105,106,126,127,128,129,141,143,144,],[0,-1,-3,-4,-5,-6,-7,-15,-16,-18,-54,-55,-56,-57,-58,-67,-68,-2,-18,-8,-69,-71,-14,-17,-59,-60,-76,-70,-9,-10,-11,-12,-13,-62,-61,-63,-73,-72,-74,-75,]),'RCURLY':([2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,24,26,34,36,54,55,60,61,69,92,96,97,102,103,104,105,106,119,126,127,128,129,137,139,140,141,143,144,],[-1,-3,-4,-5,-6,-7,-15,-16,-18,-54,-55,-56,-57,-58,-67,-68,-2,-18,-8,-69,-71,-14,-17,-59,-60,-76,-70,-9,-10,-11,-12,-13,129,-62,-61,-63,-73,141,143,144,-72,-74,-75,]),'PLUS':([3,8,9,11,33,34,40,42,60,61,62,63,84,86,90,91,112,115,],[28,-15,-16,-18,28,-18,-18,28,28,-17,-18,28,28,-18,-18,28,28,28,]),'MINUS':([3,8,9,11,33,34,40,42,60,61,62,63,84,86,90,91,112,115,],[29,-15,-16,-18,29,-18,-18,29,29,-17,-18,29,29,-18,-18,29,29,29,]),'DIVIDE':([3,8,9,11,33,34,40,42,60,61,62,63,84,86,90,91,112,115,],[30,-15,-16,-18,30,-18,-18,30,30,-17,-18,30,30,-18,-18,30,30,30,]),'EXPONENTIAL':([3,8,9,11,33,34,40,42,60,61,62,63,84,86,90,91,112,115,],[31,-15,-16,-18,31,-18,-18,31,31,-17,-18,31,31,-18,-18,31,31,31,]),'TIMES':([3,8,9,11,33,34,40,42,60,61,62,63,84,86,90,91,112,115,],[32,-15,-16,-18,32,-18,-18,32,32,-17,-18,32,32,-18,-18,32,32,32,]),'RPAREN':([8,9,33,34,40,41,42,43,44,45,47,48,60,61,84,85,86,88,90,93,94,95,101,108,110,111,112,113,114,115,120,121,125,138,],[-15,-16,61,-18,-18,-46,-47,-48,-24,-25,-27,-28,-14,-17,61,114,-18,-30,-18,116,117,118,122,124,-34,-26,-33,-29,-31,61,130,131,134,142,]),'IDENTICAL':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,72,72,72,-24,-25,-27,-28,-14,-17,-18,72,72,72,72,72,-18,72,72,-18,72,72,-34,-26,-33,72,-31,72,72,72,72,]),'NOTIDENTICAL':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,73,73,73,-24,-25,-27,-28,-14,-17,-18,73,73,73,73,73,-18,73,73,-18,73,73,-34,-26,-33,73,-31,73,73,73,73,]),'EQUALSLOGICAL':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,74,74,74,-24,-25,-27,-28,-14,-17,-18,74,74,74,74,74,-18,74,74,-18,74,74,-34,-26,-33,74,-31,74,74,74,74,]),'DIFFERENT':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,75,75,75,-24,-25,-27,-28,-14,-17,-18,75,75,75,75,75,-18,75,75,-18,75,75,-34,-26,-33,75,-31,75,75,75,75,]),'GREATEREQUAL':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,76,76,76,-24,-25,-27,-28,-14,-17,-18,76,76,76,76,76,-18,76,76,-18,76,76,-34,-26,-33,76,-31,76,76,76,76,]),'LESSEQUAL':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,77,77,77,-24,-25,-27,-28,-14,-17,-18,77,77,77,77,77,-18,77,77,-18,77,77,-34,-26,-33,77,-31,77,77,77,77,]),'GREATERTHAN':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,78,78,78,-24,-25,-27,-28,-14,-17,-18,78,78,78,78,78,-18,78,78,-18,78,78,-34,-26,-33,78,-31,78,78,78,78,]),'LESSTHAN':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,79,79,79,-24,-25,-27,-28,-14,-17,-18,79,79,79,79,79,-18,79,79,-18,79,79,-34,-26,-33,79,-31,79,79,79,79,]),'ANDlOGICAL':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,80,80,80,-24,-25,-27,-28,-14,-17,-18,80,80,80,80,80,-18,80,80,-18,80,80,-34,-26,-33,80,-31,80,80,80,80,]),'ORLOGICAL':([8,9,34,40,41,42,43,44,45,47,48,60,61,62,63,64,65,84,85,86,87,88,90,91,101,110,111,112,113,114,115,120,121,138,],[-15,-16,-18,-18,81,81,81,-24,-25,-27,-28,-14,-17,-18,81,81,81,81,81,-18,81,81,-18,81,81,-34,-26,-33,81,-31,81,81,81,81,]),'COMMA':([8,9,34,39,40,41,42,43,44,45,47,48,60,61,88,90,110,111,112,113,114,123,],[-15,-16,-18,70,-18,-46,-47,-48,-24,-25,-27,-28,-14,-17,-30,-32,-34,-26,-33,-29,-31,133,]),'SEMICOLON':([8,9,34,38,39,40,41,42,43,44,45,47,48,50,60,61,62,63,64,65,66,88,90,109,110,111,112,113,114,116,117,118,124,134,142,],[-15,-16,-18,69,-49,-18,-46,-47,-48,-24,-25,-27,-28,92,-14,-17,102,103,104,105,106,-30,-32,-50,-34,-26,-33,-29,-31,126,127,128,-65,-66,-64,]),'EQUALS':([11,37,],[35,35,]),'STRING':([19,20,35,46,49,51,52,53,59,70,71,72,73,74,75,76,77,78,79,80,81,83,89,99,100,107,108,133,],[44,44,44,44,44,44,44,44,44,44,44,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,44,44,44,44,44,44,44,]),'STRINGCC':([19,20,35,46,49,51,52,53,59,70,71,72,73,74,75,76,77,78,79,80,81,83,89,99,100,107,108,133,],[45,45,45,45,45,45,45,45,45,45,45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,45,45,45,45,45,45,45,]),'TRUE':([19,20,35,46,49,51,52,53,59,70,72,73,74,75,76,77,78,79,80,81,83,89,99,100,107,133,],[47,47,47,47,47,47,47,47,47,47,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,47,47,47,47,47,47,]),'FALSE':([19,20,35,46,49,51,52,53,59,70,72,73,74,75,76,77,78,79,80,81,83,89,99,100,107,133,],[48,48,48,48,48,48,48,48,48,48,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,48,48,48,48,48,48,]),'NOTLOGICAL':([19,20,35,46,49,51,52,53,59,70,72,73,74,75,76,77,78,79,80,81,83,89,99,100,107,133,],[49,49,49,49,49,49,49,49,49,49,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,49,49,49,49,49,49,]),'ELSE':([24,55,96,141,143,144,],[56,56,-76,-72,-74,-75,]),'ELSEIF':([24,55,96,141,143,144,],[57,57,57,-72,-74,-75,]),'ElSE_IF':([24,55,96,141,143,144,],[58,58,58,-72,-74,-75,]),'READLINE':([35,],[68,]),'LCURLY':([56,122,130,131,],[98,132,135,136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresiones':([0,2,98,132,135,136,],[1,26,119,137,139,140,]),'expresion':([0,2,98,132,135,136,],[2,2,2,2,2,2,]),'elemento_numerico':([0,2,10,19,20,27,35,46,49,51,52,53,59,70,82,83,89,98,99,100,107,132,133,135,136,],[3,3,33,42,42,60,63,84,91,42,42,42,91,42,112,91,115,3,91,91,42,3,91,3,3,]),'var_asignar':([0,2,12,98,132,135,136,],[4,4,36,4,4,4,4,]),'var_declarar':([0,2,98,132,135,136,],[5,5,5,5,5,5,]),'expresiones_de_salida':([0,2,98,132,135,136,],[6,6,6,6,6,6,]),'estructuras_de_control':([0,2,98,132,135,136,],[7,7,7,7,7,7,]),'echo':([0,2,98,132,135,136,],[13,13,13,13,13,13,]),'print':([0,2,98,132,135,136,],[14,14,14,14,14,14,]),'var_dump':([0,2,98,132,135,136,],[15,15,15,15,15,15,]),'print_r':([0,2,98,132,135,136,],[16,16,16,16,16,16,]),'var_export':([0,2,98,132,135,136,],[17,17,17,17,17,17,]),'if_structures':([0,2,98,132,135,136,],[18,18,18,18,18,18,]),'if':([0,2,98,132,135,136,],[24,24,24,24,24,24,]),'operador':([3,33,42,60,63,84,91,112,115,],[27,27,27,27,27,27,27,27,27,]),'params':([19,70,],[38,109,]),'param':([19,20,51,52,53,70,107,],[39,50,93,94,95,39,123,]),'elemento_string':([19,20,35,46,49,51,52,53,59,70,71,83,89,99,100,107,108,133,],[41,41,64,87,87,41,41,41,87,41,110,87,87,87,87,41,125,87,]),'elemento_logico':([19,20,35,46,49,51,52,53,59,70,83,89,99,100,107,133,],[43,43,65,85,88,43,43,43,101,43,113,85,120,121,43,138,]),'else':([24,55,],[54,97,]),'else_if':([24,55,96,],[55,96,96,]),'funciones_ingreso_datos':([35,],[66,]),'comparador':([41,42,43,63,64,65,84,85,87,88,91,101,113,115,120,121,138,],[71,82,83,82,71,83,82,83,71,83,82,83,83,82,83,83,83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresiones","S'",1,None,None,None),
  ('expresiones -> expresion','expresiones',1,'p_expresiones','sintaxis.py',6),
  ('expresiones -> expresion expresiones','expresiones',2,'p_expresiones','sintaxis.py',7),
  ('expresion -> elemento_numerico','expresion',1,'p_expresion','sintaxis.py',12),
  ('expresion -> var_asignar','expresion',1,'p_expresion','sintaxis.py',13),
  ('expresion -> var_declarar','expresion',1,'p_expresion','sintaxis.py',14),
  ('expresion -> expresiones_de_salida','expresion',1,'p_expresion','sintaxis.py',15),
  ('expresion -> estructuras_de_control','expresion',1,'p_expresion','sintaxis.py',16),
  ('var_declarar -> VAR var_asignar','var_declarar',2,'p_var_declarar','sintaxis.py',23),
  ('var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',29),
  ('var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',30),
  ('var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',31),
  ('var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',32),
  ('var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON','var_asignar',4,'p_var_asignar','sintaxis.py',33),
  ('elemento_numerico -> elemento_numerico operador elemento_numerico','elemento_numerico',3,'p_elemento_numerico','sintaxis.py',39),
  ('elemento_numerico -> FLOAT','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',40),
  ('elemento_numerico -> NUMBER','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',41),
  ('elemento_numerico -> LPAREN elemento_numerico RPAREN','elemento_numerico',3,'p_elemento_numerico','sintaxis.py',42),
  ('elemento_numerico -> VARIABLE','elemento_numerico',1,'p_elemento_numerico','sintaxis.py',43),
  ('operador -> PLUS','operador',1,'p_operador','sintaxis.py',49),
  ('operador -> MINUS','operador',1,'p_operador','sintaxis.py',50),
  ('operador -> DIVIDE','operador',1,'p_operador','sintaxis.py',51),
  ('operador -> EXPONENTIAL','operador',1,'p_operador','sintaxis.py',52),
  ('operador -> TIMES','operador',1,'p_operador','sintaxis.py',53),
  ('elemento_string -> STRING','elemento_string',1,'p_elemento_string','sintaxis.py',58),
  ('elemento_string -> STRINGCC','elemento_string',1,'p_elemento_string','sintaxis.py',59),
  ('elemento_string -> VARIABLE','elemento_string',1,'p_elemento_string','sintaxis.py',60),
  ('elemento_logico -> TRUE','elemento_logico',1,'p_elemento_logico','sintaxis.py',66),
  ('elemento_logico -> FALSE','elemento_logico',1,'p_elemento_logico','sintaxis.py',67),
  ('elemento_logico -> elemento_logico comparador elemento_logico','elemento_logico',3,'p_elemento_logico','sintaxis.py',68),
  ('elemento_logico -> NOTLOGICAL elemento_logico','elemento_logico',2,'p_elemento_logico','sintaxis.py',69),
  ('elemento_logico -> LPAREN elemento_logico RPAREN','elemento_logico',3,'p_elemento_logico','sintaxis.py',70),
  ('elemento_logico -> VARIABLE','elemento_logico',1,'p_elemento_logico','sintaxis.py',71),
  ('elemento_logico -> elemento_numerico comparador elemento_numerico','elemento_logico',3,'p_elemento_logico','sintaxis.py',72),
  ('elemento_logico -> elemento_string comparador elemento_string','elemento_logico',3,'p_elemento_logico','sintaxis.py',73),
  ('comparador -> IDENTICAL','comparador',1,'p_comparador','sintaxis.py',78),
  ('comparador -> NOTIDENTICAL','comparador',1,'p_comparador','sintaxis.py',79),
  ('comparador -> EQUALSLOGICAL','comparador',1,'p_comparador','sintaxis.py',80),
  ('comparador -> DIFFERENT','comparador',1,'p_comparador','sintaxis.py',81),
  ('comparador -> GREATEREQUAL','comparador',1,'p_comparador','sintaxis.py',82),
  ('comparador -> LESSEQUAL','comparador',1,'p_comparador','sintaxis.py',83),
  ('comparador -> GREATERTHAN','comparador',1,'p_comparador','sintaxis.py',84),
  ('comparador -> LESSTHAN','comparador',1,'p_comparador','sintaxis.py',85),
  ('comparador -> ANDlOGICAL','comparador',1,'p_comparador','sintaxis.py',86),
  ('comparador -> ORLOGICAL','comparador',1,'p_comparador','sintaxis.py',87),
  ('param -> VARIABLE','param',1,'p_param','sintaxis.py',95),
  ('param -> elemento_string','param',1,'p_param','sintaxis.py',96),
  ('param -> elemento_numerico','param',1,'p_param','sintaxis.py',97),
  ('param -> elemento_logico','param',1,'p_param','sintaxis.py',98),
  ('params -> param','params',1,'p_params','sintaxis.py',104),
  ('params -> param COMMA params','params',3,'p_params','sintaxis.py',105),
  ('optional_params -> param','optional_params',1,'p_optional_params','sintaxis.py',111),
  ('optional_params -> ','optional_params',1,'p_optional_params','sintaxis.py',112),
  ('optional_params -> param COMMA optional_params','optional_params',3,'p_optional_params','sintaxis.py',113),
  ('expresiones_de_salida -> echo','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',120),
  ('expresiones_de_salida -> print','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',121),
  ('expresiones_de_salida -> var_dump','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',122),
  ('expresiones_de_salida -> print_r','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',123),
  ('expresiones_de_salida -> var_export','expresiones_de_salida',1,'p_expresiones_de_salida','sintaxis.py',124),
  ('echo -> ECHO params SEMICOLON','echo',3,'p_echo','sintaxis.py',130),
  ('print -> PRINT param SEMICOLON','print',3,'p_print','sintaxis.py',135),
  ('print_r -> PRINT_R LPAREN param RPAREN SEMICOLON','print_r',5,'p_print_r','sintaxis.py',140),
  ('var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON','var_dump',5,'p_var_dump','sintaxis.py',145),
  ('var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON','var_export',5,'p_var_export','sintaxis.py',150),
  ('funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN','funciones_ingreso_datos',6,'p_funciones_ingreso_datos','sintaxis.py',155),
  ('funciones_ingreso_datos -> READLINE LPAREN RPAREN','funciones_ingreso_datos',3,'p_funciones_ingreso_datos','sintaxis.py',156),
  ('funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN','funciones_ingreso_datos',4,'p_funciones_ingreso_datos','sintaxis.py',157),
  ('estructuras_de_control -> if_structures','estructuras_de_control',1,'p_estructuras_de_control','sintaxis.py',163),
  ('if_structures -> if','if_structures',1,'p_if_structures','sintaxis.py',168),
  ('if_structures -> if else','if_structures',2,'p_if_structures','sintaxis.py',169),
  ('if_structures -> if else_if else','if_structures',3,'p_if_structures','sintaxis.py',170),
  ('if_structures -> if else_if','if_structures',2,'p_if_structures','sintaxis.py',171),
  ('if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','if',7,'p_if','sintaxis.py',176),
  ('else -> ELSE LCURLY expresiones RCURLY','else',4,'p_else','sintaxis.py',181),
  ('else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','else_if',7,'p_else_if','sintaxis.py',186),
  ('else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY','else_if',7,'p_else_if','sintaxis.py',187),
  ('else_if -> else_if else_if','else_if',2,'p_else_if','sintaxis.py',188),
]
