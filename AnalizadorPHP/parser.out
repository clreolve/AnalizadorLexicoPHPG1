Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AS
    BREAK
    CASE
    CATCH
    CLASS
    DO
    ENDFOR
    ENDFOREACH
    ENDSWITCH
    EXTENDS
    FINAL
    FOR
    FOREACH
    GLOBAL
    ID
    IMPLEMENTS
    INTERFACE
    OR
    PHPEND
    PHPSTART
    PRIVATE
    PROTECTED
    PUBLIC
    STATIC
    SWITCH
    THROW
    XOR

Grammar

Rule 0     S' -> expresiones
Rule 1     expresiones -> expresion
Rule 2     expresiones -> expresion expresiones
Rule 3     expresion -> var_asignar
Rule 4     expresion -> var_declarar
Rule 5     expresion -> expresiones_de_salida
Rule 6     expresion -> estructuras_de_control
Rule 7     expresion -> var_plusminus
Rule 8     expresion -> funciones_datos_estructurados
Rule 9     expresion -> funcion_declaracion
Rule 10    expresion -> return
Rule 11    expresion -> funcion_ejecucion
Rule 12    var_declarar -> VAR var_asignar
Rule 13    var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON
Rule 14    var_asignar -> VARIABLE EQUALS funcion_ejecucion
Rule 15    var_asignar_contenido -> VARIABLE
Rule 16    var_asignar_contenido -> elemento_numerico
Rule 17    var_asignar_contenido -> elemento_string
Rule 18    var_asignar_contenido -> elemento_logico
Rule 19    var_asignar_contenido -> datos_estructurados
Rule 20    var_asignar_contenido -> funciones_ingreso_datos
Rule 21    var_plusminus -> VARIABLE PLUS PLUS SEMICOLON
Rule 22    var_plusminus -> VARIABLE MINUS MINUS SEMICOLON
Rule 23    elemento_numerico -> elemento_numerico operador elemento_numerico
Rule 24    elemento_numerico -> FLOAT
Rule 25    elemento_numerico -> NUMBER
Rule 26    elemento_numerico -> LPAREN elemento_numerico RPAREN
Rule 27    elemento_numerico -> VARIABLE
Rule 28    operador -> PLUS
Rule 29    operador -> MINUS
Rule 30    operador -> DIVIDE
Rule 31    operador -> EXPONENTIAL
Rule 32    operador -> TIMES
Rule 33    elemento_string -> STRING
Rule 34    elemento_string -> STRINGCC
Rule 35    elemento_string -> VARIABLE
Rule 36    elemento_logico -> elemento_logico_pri
Rule 37    elemento_logico -> elemento_logico comparador elemento_logico
Rule 38    elemento_logico -> NOTLOGICAL elemento_logico
Rule 39    elemento_logico -> LPAREN elemento_logico RPAREN
Rule 40    elemento_logico -> VARIABLE
Rule 41    elemento_logico -> elemento_numerico comparador elemento_numerico
Rule 42    elemento_logico -> elemento_string comparador elemento_string
Rule 43    elemento_logico_pri -> TRUE
Rule 44    elemento_logico_pri -> FALSE
Rule 45    comparador -> IDENTICAL
Rule 46    comparador -> NOTIDENTICAL
Rule 47    comparador -> EQUALSLOGICAL
Rule 48    comparador -> DIFFERENT
Rule 49    comparador -> GREATEREQUAL
Rule 50    comparador -> LESSEQUAL
Rule 51    comparador -> GREATERTHAN
Rule 52    comparador -> LESSTHAN
Rule 53    comparador -> ANDlOGICAL
Rule 54    comparador -> ORLOGICAL
Rule 55    param -> VARIABLE
Rule 56    param -> elemento_string
Rule 57    param -> elemento_numerico
Rule 58    param -> elemento_logico
Rule 59    params -> param
Rule 60    params -> param COMMA params
Rule 61    params_points -> param
Rule 62    params_points -> param POINT params_points
Rule 63    param_unictype -> VARIABLE
Rule 64    param_unictype -> elemento_string
Rule 65    param_unictype -> elemento_numerico
Rule 66    param_unictype -> elemento_logico
Rule 67    params_unitype -> param
Rule 68    params_unitype -> param COMMA params
Rule 69    optional_params -> param
Rule 70    optional_params -> 
Rule 71    optional_params -> param COMMA optional_params
Rule 72    expresiones_de_salida -> echo
Rule 73    expresiones_de_salida -> print
Rule 74    expresiones_de_salida -> var_dump
Rule 75    expresiones_de_salida -> print_r
Rule 76    expresiones_de_salida -> var_export
Rule 77    echo -> ECHO params SEMICOLON
Rule 78    echo -> ECHO params_points SEMICOLON
Rule 79    print -> PRINT param SEMICOLON
Rule 80    print_r -> PRINT_R LPAREN param RPAREN SEMICOLON
Rule 81    var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON
Rule 82    var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON
Rule 83    funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN
Rule 84    funciones_ingreso_datos -> READLINE LPAREN RPAREN
Rule 85    funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN
Rule 86    estructuras_de_control -> if_structures
Rule 87    estructuras_de_control -> estructuras_while
Rule 88    if_structures -> if
Rule 89    if_structures -> if else
Rule 90    if_structures -> if else_if else
Rule 91    if_structures -> if else_if
Rule 92    if_structures -> if_r ENDIF SEMICOLON
Rule 93    if_structures -> if_r else_r ENDIF SEMICOLON
Rule 94    if_structures -> if_r elseif_r else_r ENDIF SEMICOLON
Rule 95    if_structures -> if_r elseif_r ENDIF SEMICOLON
Rule 96    if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 97    else -> ELSE LCURLY expresiones RCURLY
Rule 98    else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 99    else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 100   else_if -> else_if else_if
Rule 101   if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
Rule 102   else_r -> ELSE DOUBLEPOINT expresiones
Rule 103   elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
Rule 104   elseif_r -> elseif_r elseif_r
Rule 105   estructuras_while -> while
Rule 106   while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 107   while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
Rule 108   funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo
Rule 109   funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
Rule 110   funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
Rule 111   funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN variables_por_comma RPAREN
Rule 112   funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN RPAREN
Rule 113   funciones_cuerpo -> LCURLY expresiones RCURLY
Rule 114   funciones_cuerpo -> LCURLY RCURLY
Rule 115   return -> RETURN var_asignar_contenido SEMICOLON
Rule 116   funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON
Rule 117   funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON
Rule 118   variables_por_comma -> VARIABLE
Rule 119   variables_por_comma -> VARIABLE COMMA variables_por_comma
Rule 120   datos_estructurados -> map
Rule 121   datos_estructurados -> vector
Rule 122   datos_estructurados -> set
Rule 123   map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
Rule 124   map -> NEW MAP LPAREN RPAREN
Rule 125   clave_valor -> elemento_string ARROW param
Rule 126   clave_valor -> NUMBER ARROW param
Rule 127   todos_clave_valor -> clave_valor
Rule 128   todos_clave_valor -> clave_valor COMMA todos_clave_valor
Rule 129   vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN
Rule 130   vector -> NEW VECTOR LPAREN RPAREN
Rule 131   datos -> FLOAT
Rule 132   datos -> NUMBER
Rule 133   datos -> STRING
Rule 134   datos -> STRINGCC
Rule 135   datos -> elemento_logico_pri
Rule 136   llenar -> datos
Rule 137   llenar -> datos COMMA llenar
Rule 138   set -> NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN
Rule 139   set -> NEW SET LPAREN RPAREN
Rule 140   funciones_datos_estructurados -> funciones_map
Rule 141   funciones_datos_estructurados -> funciones_set
Rule 142   funciones_datos_estructurados -> funciones_vector
Rule 143   funciones_map -> key_map
Rule 144   funciones_map -> diff_map
Rule 145   key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
Rule 146   diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
Rule 147   funciones_vector -> find_vector
Rule 148   funciones_vector -> push_vector
Rule 149   find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
Rule 150   push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
Rule 151   push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
Rule 152   push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
Rule 153   funciones_set -> union_set
Rule 154   funciones_set -> remove_set
Rule 155   union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
Rule 156   remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
Rule 157   remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
Rule 158   remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

Terminals, with rules where they appear

                     : 70
AND                  : 
ANDlOGICAL           : 53
ARROW                : 125 126
AS                   : 
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
COMMA                : 60 68 71 83 119 128 137
DIFF                 : 146
DIFFERENT            : 48
DIVIDE               : 30
DO                   : 
DOUBLEPOINT          : 101 102 103 107
ECHO                 : 77 78
ELSE                 : 97 99 102
ELSEIF               : 98 103
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 92 93 94 95
ENDSWITCH            : 
ENDWHILE             : 107
EQUALS               : 13 14 109 110
EQUALSLOGICAL        : 47
EXPONENTIAL          : 31
EXTENDS              : 
FALSE                : 44
FINAL                : 
FIND                 : 149
FLOAT                : 24 131
FOR                  : 
FOREACH              : 
FUNCTION             : 108 109 110
FUNCTION_NAME        : 111 112 116 117
GLOBAL               : 
GREATEREQUAL         : 49
GREATERTHAN          : 51
ID                   : 
IDENTICAL            : 45
IF                   : 96 99 101
IMPLEMENTS           : 
INTERFACE            : 
KEYS                 : 145
LBRACKET             : 123 129 138 152 158
LCURLY               : 96 97 98 99 106 113 114
LESSEQUAL            : 50
LESSTHAN             : 52
LPAREN               : 26 39 80 81 82 83 84 85 96 98 99 101 103 106 107 109 110 111 112 116 117 123 124 129 130 138 139 145 145 146 146 149 149 150 151 152 155 155 156 157 158
MAP                  : 123 124
MINUS                : 22 22 29
NEW                  : 123 124 129 130 138 139
NOTIDENTICAL         : 46
NOTLOGICAL           : 38
NUMBER               : 25 126 132
OR                   : 
ORLOGICAL            : 54
PHPEND               : 
PHPSTART             : 
PLUS                 : 21 21 28
POINT                : 62
PRINT                : 79
PRINT_R              : 80
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 150 151 152
RBRACKET             : 123 129 138 152 158
RCURLY               : 96 97 98 99 106 113 114
READLINE             : 84 85
REMOVE               : 156 157 158
RETURN               : 115
RPAREN               : 26 39 80 81 82 83 84 85 96 98 99 101 103 106 107 109 110 111 112 116 117 123 124 129 130 138 139 145 145 146 146 149 149 150 151 152 155 155 156 157 158
SEMICOLON            : 13 21 22 77 78 79 80 81 82 92 93 94 95 107 115 116 117 145 146 149 150 151 152 155 156 157 158
SET                  : 138 139
SIMPLEARROW          : 145 146 149 150 151 152 155 156 157 158
STATIC               : 
STRING               : 33 133
STRINGCC             : 34 134
SWITCH               : 
THROW                : 
TIMES                : 32
TRUE                 : 43
UNION                : 155
VAR                  : 12 110
VARIABLE             : 13 14 15 21 22 27 35 40 55 63 109 110 118 119 145 146 146 149 150 151 152 155 155 156 157 158
VAR_DUMP             : 81 145 146 149 155
VAR_EXPORT           : 82 83
VECTOR               : 129 130
WHILE                : 106 107
XOR                  : 
error                : 

Nonterminals, with rules where they appear

clave_valor          : 127 128
comparador           : 37 41 42
datos                : 136 137
datos_estructurados  : 19
diff_map             : 144
echo                 : 72
elemento_logico      : 18 37 37 38 39 58 66 83 96 98 99 101 103 106 107
elemento_logico_pri  : 36 135
elemento_numerico    : 16 23 23 26 41 41 57 65
elemento_string      : 17 42 42 56 64 85 125
else                 : 89 90
else_if              : 90 91 100 100
else_r               : 93 94
elseif_r             : 94 95 104 104
estructuras_de_control : 6
estructuras_while    : 87
expresion            : 1 2
expresiones          : 2 96 97 98 99 101 102 103 106 107 113 0
expresiones_de_salida : 5
find_vector          : 147
funcion_cabecera_declaracion : 108
funcion_declaracion  : 9
funcion_ejecucion    : 11 14
funciones_cuerpo     : 108 109 110
funciones_datos_estructurados : 8
funciones_ingreso_datos : 20
funciones_map        : 140
funciones_set        : 141
funciones_vector     : 142
if                   : 88 89 90 91
if_r                 : 92 93 94 95
if_structures        : 86
key_map              : 143
llenar               : 137
map                  : 120
operador             : 23
optional_params      : 71
param                : 59 60 61 62 67 68 69 71 79 80 81 82 83 125 126 149 150 156
param_unictype       : 
params               : 60 68 77 116 129 151 152 157 158
params_points        : 62 78
params_unitype       : 138
print                : 73
print_r              : 75
push_vector          : 148
remove_set           : 154
return               : 10
set                  : 122
todos_clave_valor    : 123 128
union_set            : 153
var_asignar          : 3 12
var_asignar_contenido : 13 115
var_declarar         : 4
var_dump             : 74
var_export           : 76
var_plusminus        : 7
variables_por_comma  : 109 110 111 119
vector               : 121
while                : 105

Parsing method: LALR

state 0

    (0) S' -> . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 1
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 1

    (0) S' -> expresiones .



state 2

    (1) expresiones -> expresion .
    (2) expresiones -> expresion . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    $end            reduce using rule 1 (expresiones -> expresion .)
    RCURLY          reduce using rule 1 (expresiones -> expresion .)
    ENDIF           reduce using rule 1 (expresiones -> expresion .)
    ELSE            reduce using rule 1 (expresiones -> expresion .)
    ELSEIF          reduce using rule 1 (expresiones -> expresion .)
    ENDWHILE        reduce using rule 1 (expresiones -> expresion .)
    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresion                      shift and go to state 2
    expresiones                    shift and go to state 43
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 3

    (3) expresion -> var_asignar .

    VARIABLE        reduce using rule 3 (expresion -> var_asignar .)
    VAR             reduce using rule 3 (expresion -> var_asignar .)
    FUNCTION        reduce using rule 3 (expresion -> var_asignar .)
    RETURN          reduce using rule 3 (expresion -> var_asignar .)
    FUNCTION_NAME   reduce using rule 3 (expresion -> var_asignar .)
    ECHO            reduce using rule 3 (expresion -> var_asignar .)
    PRINT           reduce using rule 3 (expresion -> var_asignar .)
    VAR_DUMP        reduce using rule 3 (expresion -> var_asignar .)
    PRINT_R         reduce using rule 3 (expresion -> var_asignar .)
    VAR_EXPORT      reduce using rule 3 (expresion -> var_asignar .)
    IF              reduce using rule 3 (expresion -> var_asignar .)
    WHILE           reduce using rule 3 (expresion -> var_asignar .)
    $end            reduce using rule 3 (expresion -> var_asignar .)
    RCURLY          reduce using rule 3 (expresion -> var_asignar .)
    ENDIF           reduce using rule 3 (expresion -> var_asignar .)
    ELSE            reduce using rule 3 (expresion -> var_asignar .)
    ELSEIF          reduce using rule 3 (expresion -> var_asignar .)
    ENDWHILE        reduce using rule 3 (expresion -> var_asignar .)


state 4

    (4) expresion -> var_declarar .

    VARIABLE        reduce using rule 4 (expresion -> var_declarar .)
    VAR             reduce using rule 4 (expresion -> var_declarar .)
    FUNCTION        reduce using rule 4 (expresion -> var_declarar .)
    RETURN          reduce using rule 4 (expresion -> var_declarar .)
    FUNCTION_NAME   reduce using rule 4 (expresion -> var_declarar .)
    ECHO            reduce using rule 4 (expresion -> var_declarar .)
    PRINT           reduce using rule 4 (expresion -> var_declarar .)
    VAR_DUMP        reduce using rule 4 (expresion -> var_declarar .)
    PRINT_R         reduce using rule 4 (expresion -> var_declarar .)
    VAR_EXPORT      reduce using rule 4 (expresion -> var_declarar .)
    IF              reduce using rule 4 (expresion -> var_declarar .)
    WHILE           reduce using rule 4 (expresion -> var_declarar .)
    $end            reduce using rule 4 (expresion -> var_declarar .)
    RCURLY          reduce using rule 4 (expresion -> var_declarar .)
    ENDIF           reduce using rule 4 (expresion -> var_declarar .)
    ELSE            reduce using rule 4 (expresion -> var_declarar .)
    ELSEIF          reduce using rule 4 (expresion -> var_declarar .)
    ENDWHILE        reduce using rule 4 (expresion -> var_declarar .)


state 5

    (5) expresion -> expresiones_de_salida .

    VARIABLE        reduce using rule 5 (expresion -> expresiones_de_salida .)
    VAR             reduce using rule 5 (expresion -> expresiones_de_salida .)
    FUNCTION        reduce using rule 5 (expresion -> expresiones_de_salida .)
    RETURN          reduce using rule 5 (expresion -> expresiones_de_salida .)
    FUNCTION_NAME   reduce using rule 5 (expresion -> expresiones_de_salida .)
    ECHO            reduce using rule 5 (expresion -> expresiones_de_salida .)
    PRINT           reduce using rule 5 (expresion -> expresiones_de_salida .)
    VAR_DUMP        reduce using rule 5 (expresion -> expresiones_de_salida .)
    PRINT_R         reduce using rule 5 (expresion -> expresiones_de_salida .)
    VAR_EXPORT      reduce using rule 5 (expresion -> expresiones_de_salida .)
    IF              reduce using rule 5 (expresion -> expresiones_de_salida .)
    WHILE           reduce using rule 5 (expresion -> expresiones_de_salida .)
    $end            reduce using rule 5 (expresion -> expresiones_de_salida .)
    RCURLY          reduce using rule 5 (expresion -> expresiones_de_salida .)
    ENDIF           reduce using rule 5 (expresion -> expresiones_de_salida .)
    ELSE            reduce using rule 5 (expresion -> expresiones_de_salida .)
    ELSEIF          reduce using rule 5 (expresion -> expresiones_de_salida .)
    ENDWHILE        reduce using rule 5 (expresion -> expresiones_de_salida .)


state 6

    (6) expresion -> estructuras_de_control .

    VARIABLE        reduce using rule 6 (expresion -> estructuras_de_control .)
    VAR             reduce using rule 6 (expresion -> estructuras_de_control .)
    FUNCTION        reduce using rule 6 (expresion -> estructuras_de_control .)
    RETURN          reduce using rule 6 (expresion -> estructuras_de_control .)
    FUNCTION_NAME   reduce using rule 6 (expresion -> estructuras_de_control .)
    ECHO            reduce using rule 6 (expresion -> estructuras_de_control .)
    PRINT           reduce using rule 6 (expresion -> estructuras_de_control .)
    VAR_DUMP        reduce using rule 6 (expresion -> estructuras_de_control .)
    PRINT_R         reduce using rule 6 (expresion -> estructuras_de_control .)
    VAR_EXPORT      reduce using rule 6 (expresion -> estructuras_de_control .)
    IF              reduce using rule 6 (expresion -> estructuras_de_control .)
    WHILE           reduce using rule 6 (expresion -> estructuras_de_control .)
    $end            reduce using rule 6 (expresion -> estructuras_de_control .)
    RCURLY          reduce using rule 6 (expresion -> estructuras_de_control .)
    ENDIF           reduce using rule 6 (expresion -> estructuras_de_control .)
    ELSE            reduce using rule 6 (expresion -> estructuras_de_control .)
    ELSEIF          reduce using rule 6 (expresion -> estructuras_de_control .)
    ENDWHILE        reduce using rule 6 (expresion -> estructuras_de_control .)


state 7

    (7) expresion -> var_plusminus .

    VARIABLE        reduce using rule 7 (expresion -> var_plusminus .)
    VAR             reduce using rule 7 (expresion -> var_plusminus .)
    FUNCTION        reduce using rule 7 (expresion -> var_plusminus .)
    RETURN          reduce using rule 7 (expresion -> var_plusminus .)
    FUNCTION_NAME   reduce using rule 7 (expresion -> var_plusminus .)
    ECHO            reduce using rule 7 (expresion -> var_plusminus .)
    PRINT           reduce using rule 7 (expresion -> var_plusminus .)
    VAR_DUMP        reduce using rule 7 (expresion -> var_plusminus .)
    PRINT_R         reduce using rule 7 (expresion -> var_plusminus .)
    VAR_EXPORT      reduce using rule 7 (expresion -> var_plusminus .)
    IF              reduce using rule 7 (expresion -> var_plusminus .)
    WHILE           reduce using rule 7 (expresion -> var_plusminus .)
    $end            reduce using rule 7 (expresion -> var_plusminus .)
    RCURLY          reduce using rule 7 (expresion -> var_plusminus .)
    ENDIF           reduce using rule 7 (expresion -> var_plusminus .)
    ELSE            reduce using rule 7 (expresion -> var_plusminus .)
    ELSEIF          reduce using rule 7 (expresion -> var_plusminus .)
    ENDWHILE        reduce using rule 7 (expresion -> var_plusminus .)


state 8

    (8) expresion -> funciones_datos_estructurados .

    VARIABLE        reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    VAR             reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    FUNCTION        reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    RETURN          reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    FUNCTION_NAME   reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ECHO            reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    PRINT           reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    VAR_DUMP        reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    PRINT_R         reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    VAR_EXPORT      reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    IF              reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    WHILE           reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    $end            reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    RCURLY          reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ENDIF           reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ELSE            reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ELSEIF          reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ENDWHILE        reduce using rule 8 (expresion -> funciones_datos_estructurados .)


state 9

    (9) expresion -> funcion_declaracion .

    VARIABLE        reduce using rule 9 (expresion -> funcion_declaracion .)
    VAR             reduce using rule 9 (expresion -> funcion_declaracion .)
    FUNCTION        reduce using rule 9 (expresion -> funcion_declaracion .)
    RETURN          reduce using rule 9 (expresion -> funcion_declaracion .)
    FUNCTION_NAME   reduce using rule 9 (expresion -> funcion_declaracion .)
    ECHO            reduce using rule 9 (expresion -> funcion_declaracion .)
    PRINT           reduce using rule 9 (expresion -> funcion_declaracion .)
    VAR_DUMP        reduce using rule 9 (expresion -> funcion_declaracion .)
    PRINT_R         reduce using rule 9 (expresion -> funcion_declaracion .)
    VAR_EXPORT      reduce using rule 9 (expresion -> funcion_declaracion .)
    IF              reduce using rule 9 (expresion -> funcion_declaracion .)
    WHILE           reduce using rule 9 (expresion -> funcion_declaracion .)
    $end            reduce using rule 9 (expresion -> funcion_declaracion .)
    RCURLY          reduce using rule 9 (expresion -> funcion_declaracion .)
    ENDIF           reduce using rule 9 (expresion -> funcion_declaracion .)
    ELSE            reduce using rule 9 (expresion -> funcion_declaracion .)
    ELSEIF          reduce using rule 9 (expresion -> funcion_declaracion .)
    ENDWHILE        reduce using rule 9 (expresion -> funcion_declaracion .)


state 10

    (10) expresion -> return .

    VARIABLE        reduce using rule 10 (expresion -> return .)
    VAR             reduce using rule 10 (expresion -> return .)
    FUNCTION        reduce using rule 10 (expresion -> return .)
    RETURN          reduce using rule 10 (expresion -> return .)
    FUNCTION_NAME   reduce using rule 10 (expresion -> return .)
    ECHO            reduce using rule 10 (expresion -> return .)
    PRINT           reduce using rule 10 (expresion -> return .)
    VAR_DUMP        reduce using rule 10 (expresion -> return .)
    PRINT_R         reduce using rule 10 (expresion -> return .)
    VAR_EXPORT      reduce using rule 10 (expresion -> return .)
    IF              reduce using rule 10 (expresion -> return .)
    WHILE           reduce using rule 10 (expresion -> return .)
    $end            reduce using rule 10 (expresion -> return .)
    RCURLY          reduce using rule 10 (expresion -> return .)
    ENDIF           reduce using rule 10 (expresion -> return .)
    ELSE            reduce using rule 10 (expresion -> return .)
    ELSEIF          reduce using rule 10 (expresion -> return .)
    ENDWHILE        reduce using rule 10 (expresion -> return .)


state 11

    (11) expresion -> funcion_ejecucion .

    VARIABLE        reduce using rule 11 (expresion -> funcion_ejecucion .)
    VAR             reduce using rule 11 (expresion -> funcion_ejecucion .)
    FUNCTION        reduce using rule 11 (expresion -> funcion_ejecucion .)
    RETURN          reduce using rule 11 (expresion -> funcion_ejecucion .)
    FUNCTION_NAME   reduce using rule 11 (expresion -> funcion_ejecucion .)
    ECHO            reduce using rule 11 (expresion -> funcion_ejecucion .)
    PRINT           reduce using rule 11 (expresion -> funcion_ejecucion .)
    VAR_DUMP        reduce using rule 11 (expresion -> funcion_ejecucion .)
    PRINT_R         reduce using rule 11 (expresion -> funcion_ejecucion .)
    VAR_EXPORT      reduce using rule 11 (expresion -> funcion_ejecucion .)
    IF              reduce using rule 11 (expresion -> funcion_ejecucion .)
    WHILE           reduce using rule 11 (expresion -> funcion_ejecucion .)
    $end            reduce using rule 11 (expresion -> funcion_ejecucion .)
    RCURLY          reduce using rule 11 (expresion -> funcion_ejecucion .)
    ENDIF           reduce using rule 11 (expresion -> funcion_ejecucion .)
    ELSE            reduce using rule 11 (expresion -> funcion_ejecucion .)
    ELSEIF          reduce using rule 11 (expresion -> funcion_ejecucion .)
    ENDWHILE        reduce using rule 11 (expresion -> funcion_ejecucion .)


state 12

    (13) var_asignar -> VARIABLE . EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> VARIABLE . EQUALS funcion_ejecucion
    (21) var_plusminus -> VARIABLE . PLUS PLUS SEMICOLON
    (22) var_plusminus -> VARIABLE . MINUS MINUS SEMICOLON
    (109) funcion_declaracion -> VARIABLE . EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (156) remove_set -> VARIABLE . SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> VARIABLE . SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> VARIABLE . SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (150) push_vector -> VARIABLE . SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> VARIABLE . SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> VARIABLE . SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    EQUALS          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    SIMPLEARROW     shift and go to state 47


state 13

    (12) var_declarar -> VAR . var_asignar
    (110) funcion_declaracion -> VAR . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion

    VARIABLE        shift and go to state 49

    var_asignar                    shift and go to state 48

state 14

    (72) expresiones_de_salida -> echo .

    VARIABLE        reduce using rule 72 (expresiones_de_salida -> echo .)
    VAR             reduce using rule 72 (expresiones_de_salida -> echo .)
    FUNCTION        reduce using rule 72 (expresiones_de_salida -> echo .)
    RETURN          reduce using rule 72 (expresiones_de_salida -> echo .)
    FUNCTION_NAME   reduce using rule 72 (expresiones_de_salida -> echo .)
    ECHO            reduce using rule 72 (expresiones_de_salida -> echo .)
    PRINT           reduce using rule 72 (expresiones_de_salida -> echo .)
    VAR_DUMP        reduce using rule 72 (expresiones_de_salida -> echo .)
    PRINT_R         reduce using rule 72 (expresiones_de_salida -> echo .)
    VAR_EXPORT      reduce using rule 72 (expresiones_de_salida -> echo .)
    IF              reduce using rule 72 (expresiones_de_salida -> echo .)
    WHILE           reduce using rule 72 (expresiones_de_salida -> echo .)
    $end            reduce using rule 72 (expresiones_de_salida -> echo .)
    RCURLY          reduce using rule 72 (expresiones_de_salida -> echo .)
    ENDIF           reduce using rule 72 (expresiones_de_salida -> echo .)
    ELSE            reduce using rule 72 (expresiones_de_salida -> echo .)
    ELSEIF          reduce using rule 72 (expresiones_de_salida -> echo .)
    ENDWHILE        reduce using rule 72 (expresiones_de_salida -> echo .)


state 15

    (73) expresiones_de_salida -> print .

    VARIABLE        reduce using rule 73 (expresiones_de_salida -> print .)
    VAR             reduce using rule 73 (expresiones_de_salida -> print .)
    FUNCTION        reduce using rule 73 (expresiones_de_salida -> print .)
    RETURN          reduce using rule 73 (expresiones_de_salida -> print .)
    FUNCTION_NAME   reduce using rule 73 (expresiones_de_salida -> print .)
    ECHO            reduce using rule 73 (expresiones_de_salida -> print .)
    PRINT           reduce using rule 73 (expresiones_de_salida -> print .)
    VAR_DUMP        reduce using rule 73 (expresiones_de_salida -> print .)
    PRINT_R         reduce using rule 73 (expresiones_de_salida -> print .)
    VAR_EXPORT      reduce using rule 73 (expresiones_de_salida -> print .)
    IF              reduce using rule 73 (expresiones_de_salida -> print .)
    WHILE           reduce using rule 73 (expresiones_de_salida -> print .)
    $end            reduce using rule 73 (expresiones_de_salida -> print .)
    RCURLY          reduce using rule 73 (expresiones_de_salida -> print .)
    ENDIF           reduce using rule 73 (expresiones_de_salida -> print .)
    ELSE            reduce using rule 73 (expresiones_de_salida -> print .)
    ELSEIF          reduce using rule 73 (expresiones_de_salida -> print .)
    ENDWHILE        reduce using rule 73 (expresiones_de_salida -> print .)


state 16

    (74) expresiones_de_salida -> var_dump .

    VARIABLE        reduce using rule 74 (expresiones_de_salida -> var_dump .)
    VAR             reduce using rule 74 (expresiones_de_salida -> var_dump .)
    FUNCTION        reduce using rule 74 (expresiones_de_salida -> var_dump .)
    RETURN          reduce using rule 74 (expresiones_de_salida -> var_dump .)
    FUNCTION_NAME   reduce using rule 74 (expresiones_de_salida -> var_dump .)
    ECHO            reduce using rule 74 (expresiones_de_salida -> var_dump .)
    PRINT           reduce using rule 74 (expresiones_de_salida -> var_dump .)
    VAR_DUMP        reduce using rule 74 (expresiones_de_salida -> var_dump .)
    PRINT_R         reduce using rule 74 (expresiones_de_salida -> var_dump .)
    VAR_EXPORT      reduce using rule 74 (expresiones_de_salida -> var_dump .)
    IF              reduce using rule 74 (expresiones_de_salida -> var_dump .)
    WHILE           reduce using rule 74 (expresiones_de_salida -> var_dump .)
    $end            reduce using rule 74 (expresiones_de_salida -> var_dump .)
    RCURLY          reduce using rule 74 (expresiones_de_salida -> var_dump .)
    ENDIF           reduce using rule 74 (expresiones_de_salida -> var_dump .)
    ELSE            reduce using rule 74 (expresiones_de_salida -> var_dump .)
    ELSEIF          reduce using rule 74 (expresiones_de_salida -> var_dump .)
    ENDWHILE        reduce using rule 74 (expresiones_de_salida -> var_dump .)


state 17

    (75) expresiones_de_salida -> print_r .

    VARIABLE        reduce using rule 75 (expresiones_de_salida -> print_r .)
    VAR             reduce using rule 75 (expresiones_de_salida -> print_r .)
    FUNCTION        reduce using rule 75 (expresiones_de_salida -> print_r .)
    RETURN          reduce using rule 75 (expresiones_de_salida -> print_r .)
    FUNCTION_NAME   reduce using rule 75 (expresiones_de_salida -> print_r .)
    ECHO            reduce using rule 75 (expresiones_de_salida -> print_r .)
    PRINT           reduce using rule 75 (expresiones_de_salida -> print_r .)
    VAR_DUMP        reduce using rule 75 (expresiones_de_salida -> print_r .)
    PRINT_R         reduce using rule 75 (expresiones_de_salida -> print_r .)
    VAR_EXPORT      reduce using rule 75 (expresiones_de_salida -> print_r .)
    IF              reduce using rule 75 (expresiones_de_salida -> print_r .)
    WHILE           reduce using rule 75 (expresiones_de_salida -> print_r .)
    $end            reduce using rule 75 (expresiones_de_salida -> print_r .)
    RCURLY          reduce using rule 75 (expresiones_de_salida -> print_r .)
    ENDIF           reduce using rule 75 (expresiones_de_salida -> print_r .)
    ELSE            reduce using rule 75 (expresiones_de_salida -> print_r .)
    ELSEIF          reduce using rule 75 (expresiones_de_salida -> print_r .)
    ENDWHILE        reduce using rule 75 (expresiones_de_salida -> print_r .)


state 18

    (76) expresiones_de_salida -> var_export .

    VARIABLE        reduce using rule 76 (expresiones_de_salida -> var_export .)
    VAR             reduce using rule 76 (expresiones_de_salida -> var_export .)
    FUNCTION        reduce using rule 76 (expresiones_de_salida -> var_export .)
    RETURN          reduce using rule 76 (expresiones_de_salida -> var_export .)
    FUNCTION_NAME   reduce using rule 76 (expresiones_de_salida -> var_export .)
    ECHO            reduce using rule 76 (expresiones_de_salida -> var_export .)
    PRINT           reduce using rule 76 (expresiones_de_salida -> var_export .)
    VAR_DUMP        reduce using rule 76 (expresiones_de_salida -> var_export .)
    PRINT_R         reduce using rule 76 (expresiones_de_salida -> var_export .)
    VAR_EXPORT      reduce using rule 76 (expresiones_de_salida -> var_export .)
    IF              reduce using rule 76 (expresiones_de_salida -> var_export .)
    WHILE           reduce using rule 76 (expresiones_de_salida -> var_export .)
    $end            reduce using rule 76 (expresiones_de_salida -> var_export .)
    RCURLY          reduce using rule 76 (expresiones_de_salida -> var_export .)
    ENDIF           reduce using rule 76 (expresiones_de_salida -> var_export .)
    ELSE            reduce using rule 76 (expresiones_de_salida -> var_export .)
    ELSEIF          reduce using rule 76 (expresiones_de_salida -> var_export .)
    ENDWHILE        reduce using rule 76 (expresiones_de_salida -> var_export .)


state 19

    (86) estructuras_de_control -> if_structures .

    VARIABLE        reduce using rule 86 (estructuras_de_control -> if_structures .)
    VAR             reduce using rule 86 (estructuras_de_control -> if_structures .)
    FUNCTION        reduce using rule 86 (estructuras_de_control -> if_structures .)
    RETURN          reduce using rule 86 (estructuras_de_control -> if_structures .)
    FUNCTION_NAME   reduce using rule 86 (estructuras_de_control -> if_structures .)
    ECHO            reduce using rule 86 (estructuras_de_control -> if_structures .)
    PRINT           reduce using rule 86 (estructuras_de_control -> if_structures .)
    VAR_DUMP        reduce using rule 86 (estructuras_de_control -> if_structures .)
    PRINT_R         reduce using rule 86 (estructuras_de_control -> if_structures .)
    VAR_EXPORT      reduce using rule 86 (estructuras_de_control -> if_structures .)
    IF              reduce using rule 86 (estructuras_de_control -> if_structures .)
    WHILE           reduce using rule 86 (estructuras_de_control -> if_structures .)
    $end            reduce using rule 86 (estructuras_de_control -> if_structures .)
    RCURLY          reduce using rule 86 (estructuras_de_control -> if_structures .)
    ENDIF           reduce using rule 86 (estructuras_de_control -> if_structures .)
    ELSE            reduce using rule 86 (estructuras_de_control -> if_structures .)
    ELSEIF          reduce using rule 86 (estructuras_de_control -> if_structures .)
    ENDWHILE        reduce using rule 86 (estructuras_de_control -> if_structures .)


state 20

    (87) estructuras_de_control -> estructuras_while .

    VARIABLE        reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    VAR             reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    FUNCTION        reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    RETURN          reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    FUNCTION_NAME   reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    ECHO            reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    PRINT           reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    VAR_DUMP        reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    PRINT_R         reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    VAR_EXPORT      reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    IF              reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    WHILE           reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    $end            reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    RCURLY          reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    ENDIF           reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    ELSE            reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    ELSEIF          reduce using rule 87 (estructuras_de_control -> estructuras_while .)
    ENDWHILE        reduce using rule 87 (estructuras_de_control -> estructuras_while .)


state 21

    (140) funciones_datos_estructurados -> funciones_map .

    VARIABLE        reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    VAR             reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    FUNCTION        reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    RETURN          reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    FUNCTION_NAME   reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    ECHO            reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    PRINT           reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    VAR_DUMP        reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    PRINT_R         reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    VAR_EXPORT      reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    IF              reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    WHILE           reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    $end            reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    RCURLY          reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    ENDIF           reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    ELSE            reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    ELSEIF          reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)
    ENDWHILE        reduce using rule 140 (funciones_datos_estructurados -> funciones_map .)


state 22

    (141) funciones_datos_estructurados -> funciones_set .

    VARIABLE        reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    VAR             reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    FUNCTION        reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    RETURN          reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    FUNCTION_NAME   reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    ECHO            reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    PRINT           reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    VAR_DUMP        reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    PRINT_R         reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    VAR_EXPORT      reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    IF              reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    WHILE           reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    $end            reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    RCURLY          reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    ENDIF           reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    ELSE            reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    ELSEIF          reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)
    ENDWHILE        reduce using rule 141 (funciones_datos_estructurados -> funciones_set .)


state 23

    (142) funciones_datos_estructurados -> funciones_vector .

    VARIABLE        reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    VAR             reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    FUNCTION        reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    RETURN          reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    FUNCTION_NAME   reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    ECHO            reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    PRINT           reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    VAR_DUMP        reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    PRINT_R         reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    VAR_EXPORT      reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    IF              reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    WHILE           reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    $end            reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    RCURLY          reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    ENDIF           reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    ELSE            reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    ELSEIF          reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)
    ENDWHILE        reduce using rule 142 (funciones_datos_estructurados -> funciones_vector .)


state 24

    (108) funcion_declaracion -> FUNCTION . funcion_cabecera_declaracion funciones_cuerpo
    (111) funcion_cabecera_declaracion -> . FUNCTION_NAME LPAREN variables_por_comma RPAREN
    (112) funcion_cabecera_declaracion -> . FUNCTION_NAME LPAREN RPAREN

    FUNCTION_NAME   shift and go to state 51

    funcion_cabecera_declaracion   shift and go to state 50

state 25

    (115) return -> RETURN . var_asignar_contenido SEMICOLON
    (15) var_asignar_contenido -> . VARIABLE
    (16) var_asignar_contenido -> . elemento_numerico
    (17) var_asignar_contenido -> . elemento_string
    (18) var_asignar_contenido -> . elemento_logico
    (19) var_asignar_contenido -> . datos_estructurados
    (20) var_asignar_contenido -> . funciones_ingreso_datos
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (120) datos_estructurados -> . map
    (121) datos_estructurados -> . vector
    (122) datos_estructurados -> . set
    (83) funciones_ingreso_datos -> . VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN
    (84) funciones_ingreso_datos -> . READLINE LPAREN RPAREN
    (85) funciones_ingreso_datos -> . READLINE LPAREN elemento_string RPAREN
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (123) map -> . NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
    (124) map -> . NEW MAP LPAREN RPAREN
    (129) vector -> . NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN
    (130) vector -> . NEW VECTOR LPAREN RPAREN
    (138) set -> . NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN
    (139) set -> . NEW SET LPAREN RPAREN

    VARIABLE        shift and go to state 53
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    NOTLOGICAL      shift and go to state 65
    VAR_EXPORT      shift and go to state 69
    READLINE        shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NEW             shift and go to state 73

    var_asignar_contenido          shift and go to state 52
    elemento_numerico              shift and go to state 54
    elemento_string                shift and go to state 55
    elemento_logico                shift and go to state 56
    datos_estructurados            shift and go to state 57
    funciones_ingreso_datos        shift and go to state 58
    elemento_logico_pri            shift and go to state 64
    map                            shift and go to state 66
    vector                         shift and go to state 67
    set                            shift and go to state 68

state 26

    (116) funcion_ejecucion -> FUNCTION_NAME . LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> FUNCTION_NAME . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 74


state 27

    (77) echo -> ECHO . params SEMICOLON
    (78) echo -> ECHO . params_points SEMICOLON
    (59) params -> . param
    (60) params -> . param COMMA params
    (61) params_points -> . param
    (62) params_points -> . param POINT params_points
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 75
    params_points                  shift and go to state 76
    param                          shift and go to state 77
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 28

    (79) print -> PRINT . param SEMICOLON
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 82
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 29

    (81) var_dump -> VAR_DUMP . LPAREN param RPAREN SEMICOLON
    (145) key_map -> VAR_DUMP . LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> VAR_DUMP . LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> VAR_DUMP . LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (149) find_vector -> VAR_DUMP . LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 83


state 30

    (80) print_r -> PRINT_R . LPAREN param RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 31

    (82) var_export -> VAR_EXPORT . LPAREN param RPAREN SEMICOLON

    LPAREN          shift and go to state 85


state 32

    (88) if_structures -> if .
    (89) if_structures -> if . else
    (90) if_structures -> if . else_if else
    (91) if_structures -> if . else_if
    (97) else -> . ELSE LCURLY expresiones RCURLY
    (98) else_if -> . ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (99) else_if -> . ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (100) else_if -> . else_if else_if

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    VARIABLE        reduce using rule 88 (if_structures -> if .)
    VAR             reduce using rule 88 (if_structures -> if .)
    FUNCTION        reduce using rule 88 (if_structures -> if .)
    RETURN          reduce using rule 88 (if_structures -> if .)
    FUNCTION_NAME   reduce using rule 88 (if_structures -> if .)
    ECHO            reduce using rule 88 (if_structures -> if .)
    PRINT           reduce using rule 88 (if_structures -> if .)
    VAR_DUMP        reduce using rule 88 (if_structures -> if .)
    PRINT_R         reduce using rule 88 (if_structures -> if .)
    VAR_EXPORT      reduce using rule 88 (if_structures -> if .)
    IF              reduce using rule 88 (if_structures -> if .)
    WHILE           reduce using rule 88 (if_structures -> if .)
    $end            reduce using rule 88 (if_structures -> if .)
    RCURLY          reduce using rule 88 (if_structures -> if .)
    ENDIF           reduce using rule 88 (if_structures -> if .)
    ENDWHILE        reduce using rule 88 (if_structures -> if .)
    ELSE            shift and go to state 88
    ELSEIF          shift and go to state 89

  ! ELSE            [ reduce using rule 88 (if_structures -> if .) ]
  ! ELSEIF          [ reduce using rule 88 (if_structures -> if .) ]

    else                           shift and go to state 86
    else_if                        shift and go to state 87

state 33

    (92) if_structures -> if_r . ENDIF SEMICOLON
    (93) if_structures -> if_r . else_r ENDIF SEMICOLON
    (94) if_structures -> if_r . elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> if_r . elseif_r ENDIF SEMICOLON
    (102) else_r -> . ELSE DOUBLEPOINT expresiones
    (103) elseif_r -> . ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (104) elseif_r -> . elseif_r elseif_r

    ENDIF           shift and go to state 90
    ELSE            shift and go to state 93
    ELSEIF          shift and go to state 94

    else_r                         shift and go to state 91
    elseif_r                       shift and go to state 92

state 34

    (105) estructuras_while -> while .

    VARIABLE        reduce using rule 105 (estructuras_while -> while .)
    VAR             reduce using rule 105 (estructuras_while -> while .)
    FUNCTION        reduce using rule 105 (estructuras_while -> while .)
    RETURN          reduce using rule 105 (estructuras_while -> while .)
    FUNCTION_NAME   reduce using rule 105 (estructuras_while -> while .)
    ECHO            reduce using rule 105 (estructuras_while -> while .)
    PRINT           reduce using rule 105 (estructuras_while -> while .)
    VAR_DUMP        reduce using rule 105 (estructuras_while -> while .)
    PRINT_R         reduce using rule 105 (estructuras_while -> while .)
    VAR_EXPORT      reduce using rule 105 (estructuras_while -> while .)
    IF              reduce using rule 105 (estructuras_while -> while .)
    WHILE           reduce using rule 105 (estructuras_while -> while .)
    $end            reduce using rule 105 (estructuras_while -> while .)
    RCURLY          reduce using rule 105 (estructuras_while -> while .)
    ENDIF           reduce using rule 105 (estructuras_while -> while .)
    ELSE            reduce using rule 105 (estructuras_while -> while .)
    ELSEIF          reduce using rule 105 (estructuras_while -> while .)
    ENDWHILE        reduce using rule 105 (estructuras_while -> while .)


state 35

    (143) funciones_map -> key_map .

    VARIABLE        reduce using rule 143 (funciones_map -> key_map .)
    VAR             reduce using rule 143 (funciones_map -> key_map .)
    FUNCTION        reduce using rule 143 (funciones_map -> key_map .)
    RETURN          reduce using rule 143 (funciones_map -> key_map .)
    FUNCTION_NAME   reduce using rule 143 (funciones_map -> key_map .)
    ECHO            reduce using rule 143 (funciones_map -> key_map .)
    PRINT           reduce using rule 143 (funciones_map -> key_map .)
    VAR_DUMP        reduce using rule 143 (funciones_map -> key_map .)
    PRINT_R         reduce using rule 143 (funciones_map -> key_map .)
    VAR_EXPORT      reduce using rule 143 (funciones_map -> key_map .)
    IF              reduce using rule 143 (funciones_map -> key_map .)
    WHILE           reduce using rule 143 (funciones_map -> key_map .)
    $end            reduce using rule 143 (funciones_map -> key_map .)
    RCURLY          reduce using rule 143 (funciones_map -> key_map .)
    ENDIF           reduce using rule 143 (funciones_map -> key_map .)
    ELSE            reduce using rule 143 (funciones_map -> key_map .)
    ELSEIF          reduce using rule 143 (funciones_map -> key_map .)
    ENDWHILE        reduce using rule 143 (funciones_map -> key_map .)


state 36

    (144) funciones_map -> diff_map .

    VARIABLE        reduce using rule 144 (funciones_map -> diff_map .)
    VAR             reduce using rule 144 (funciones_map -> diff_map .)
    FUNCTION        reduce using rule 144 (funciones_map -> diff_map .)
    RETURN          reduce using rule 144 (funciones_map -> diff_map .)
    FUNCTION_NAME   reduce using rule 144 (funciones_map -> diff_map .)
    ECHO            reduce using rule 144 (funciones_map -> diff_map .)
    PRINT           reduce using rule 144 (funciones_map -> diff_map .)
    VAR_DUMP        reduce using rule 144 (funciones_map -> diff_map .)
    PRINT_R         reduce using rule 144 (funciones_map -> diff_map .)
    VAR_EXPORT      reduce using rule 144 (funciones_map -> diff_map .)
    IF              reduce using rule 144 (funciones_map -> diff_map .)
    WHILE           reduce using rule 144 (funciones_map -> diff_map .)
    $end            reduce using rule 144 (funciones_map -> diff_map .)
    RCURLY          reduce using rule 144 (funciones_map -> diff_map .)
    ENDIF           reduce using rule 144 (funciones_map -> diff_map .)
    ELSE            reduce using rule 144 (funciones_map -> diff_map .)
    ELSEIF          reduce using rule 144 (funciones_map -> diff_map .)
    ENDWHILE        reduce using rule 144 (funciones_map -> diff_map .)


state 37

    (153) funciones_set -> union_set .

    VARIABLE        reduce using rule 153 (funciones_set -> union_set .)
    VAR             reduce using rule 153 (funciones_set -> union_set .)
    FUNCTION        reduce using rule 153 (funciones_set -> union_set .)
    RETURN          reduce using rule 153 (funciones_set -> union_set .)
    FUNCTION_NAME   reduce using rule 153 (funciones_set -> union_set .)
    ECHO            reduce using rule 153 (funciones_set -> union_set .)
    PRINT           reduce using rule 153 (funciones_set -> union_set .)
    VAR_DUMP        reduce using rule 153 (funciones_set -> union_set .)
    PRINT_R         reduce using rule 153 (funciones_set -> union_set .)
    VAR_EXPORT      reduce using rule 153 (funciones_set -> union_set .)
    IF              reduce using rule 153 (funciones_set -> union_set .)
    WHILE           reduce using rule 153 (funciones_set -> union_set .)
    $end            reduce using rule 153 (funciones_set -> union_set .)
    RCURLY          reduce using rule 153 (funciones_set -> union_set .)
    ENDIF           reduce using rule 153 (funciones_set -> union_set .)
    ELSE            reduce using rule 153 (funciones_set -> union_set .)
    ELSEIF          reduce using rule 153 (funciones_set -> union_set .)
    ENDWHILE        reduce using rule 153 (funciones_set -> union_set .)


state 38

    (154) funciones_set -> remove_set .

    VARIABLE        reduce using rule 154 (funciones_set -> remove_set .)
    VAR             reduce using rule 154 (funciones_set -> remove_set .)
    FUNCTION        reduce using rule 154 (funciones_set -> remove_set .)
    RETURN          reduce using rule 154 (funciones_set -> remove_set .)
    FUNCTION_NAME   reduce using rule 154 (funciones_set -> remove_set .)
    ECHO            reduce using rule 154 (funciones_set -> remove_set .)
    PRINT           reduce using rule 154 (funciones_set -> remove_set .)
    VAR_DUMP        reduce using rule 154 (funciones_set -> remove_set .)
    PRINT_R         reduce using rule 154 (funciones_set -> remove_set .)
    VAR_EXPORT      reduce using rule 154 (funciones_set -> remove_set .)
    IF              reduce using rule 154 (funciones_set -> remove_set .)
    WHILE           reduce using rule 154 (funciones_set -> remove_set .)
    $end            reduce using rule 154 (funciones_set -> remove_set .)
    RCURLY          reduce using rule 154 (funciones_set -> remove_set .)
    ENDIF           reduce using rule 154 (funciones_set -> remove_set .)
    ELSE            reduce using rule 154 (funciones_set -> remove_set .)
    ELSEIF          reduce using rule 154 (funciones_set -> remove_set .)
    ENDWHILE        reduce using rule 154 (funciones_set -> remove_set .)


state 39

    (147) funciones_vector -> find_vector .

    VARIABLE        reduce using rule 147 (funciones_vector -> find_vector .)
    VAR             reduce using rule 147 (funciones_vector -> find_vector .)
    FUNCTION        reduce using rule 147 (funciones_vector -> find_vector .)
    RETURN          reduce using rule 147 (funciones_vector -> find_vector .)
    FUNCTION_NAME   reduce using rule 147 (funciones_vector -> find_vector .)
    ECHO            reduce using rule 147 (funciones_vector -> find_vector .)
    PRINT           reduce using rule 147 (funciones_vector -> find_vector .)
    VAR_DUMP        reduce using rule 147 (funciones_vector -> find_vector .)
    PRINT_R         reduce using rule 147 (funciones_vector -> find_vector .)
    VAR_EXPORT      reduce using rule 147 (funciones_vector -> find_vector .)
    IF              reduce using rule 147 (funciones_vector -> find_vector .)
    WHILE           reduce using rule 147 (funciones_vector -> find_vector .)
    $end            reduce using rule 147 (funciones_vector -> find_vector .)
    RCURLY          reduce using rule 147 (funciones_vector -> find_vector .)
    ENDIF           reduce using rule 147 (funciones_vector -> find_vector .)
    ELSE            reduce using rule 147 (funciones_vector -> find_vector .)
    ELSEIF          reduce using rule 147 (funciones_vector -> find_vector .)
    ENDWHILE        reduce using rule 147 (funciones_vector -> find_vector .)


state 40

    (148) funciones_vector -> push_vector .

    VARIABLE        reduce using rule 148 (funciones_vector -> push_vector .)
    VAR             reduce using rule 148 (funciones_vector -> push_vector .)
    FUNCTION        reduce using rule 148 (funciones_vector -> push_vector .)
    RETURN          reduce using rule 148 (funciones_vector -> push_vector .)
    FUNCTION_NAME   reduce using rule 148 (funciones_vector -> push_vector .)
    ECHO            reduce using rule 148 (funciones_vector -> push_vector .)
    PRINT           reduce using rule 148 (funciones_vector -> push_vector .)
    VAR_DUMP        reduce using rule 148 (funciones_vector -> push_vector .)
    PRINT_R         reduce using rule 148 (funciones_vector -> push_vector .)
    VAR_EXPORT      reduce using rule 148 (funciones_vector -> push_vector .)
    IF              reduce using rule 148 (funciones_vector -> push_vector .)
    WHILE           reduce using rule 148 (funciones_vector -> push_vector .)
    $end            reduce using rule 148 (funciones_vector -> push_vector .)
    RCURLY          reduce using rule 148 (funciones_vector -> push_vector .)
    ENDIF           reduce using rule 148 (funciones_vector -> push_vector .)
    ELSE            reduce using rule 148 (funciones_vector -> push_vector .)
    ELSEIF          reduce using rule 148 (funciones_vector -> push_vector .)
    ENDWHILE        reduce using rule 148 (funciones_vector -> push_vector .)


state 41

    (96) if -> IF . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> IF . LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones

    LPAREN          shift and go to state 95


state 42

    (106) while -> WHILE . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> WHILE . LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON

    LPAREN          shift and go to state 96


state 43

    (2) expresiones -> expresion expresiones .

    $end            reduce using rule 2 (expresiones -> expresion expresiones .)
    RCURLY          reduce using rule 2 (expresiones -> expresion expresiones .)
    ENDIF           reduce using rule 2 (expresiones -> expresion expresiones .)
    ELSE            reduce using rule 2 (expresiones -> expresion expresiones .)
    ELSEIF          reduce using rule 2 (expresiones -> expresion expresiones .)
    ENDWHILE        reduce using rule 2 (expresiones -> expresion expresiones .)


state 44

    (13) var_asignar -> VARIABLE EQUALS . var_asignar_contenido SEMICOLON
    (14) var_asignar -> VARIABLE EQUALS . funcion_ejecucion
    (109) funcion_declaracion -> VARIABLE EQUALS . FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (15) var_asignar_contenido -> . VARIABLE
    (16) var_asignar_contenido -> . elemento_numerico
    (17) var_asignar_contenido -> . elemento_string
    (18) var_asignar_contenido -> . elemento_logico
    (19) var_asignar_contenido -> . datos_estructurados
    (20) var_asignar_contenido -> . funciones_ingreso_datos
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (120) datos_estructurados -> . map
    (121) datos_estructurados -> . vector
    (122) datos_estructurados -> . set
    (83) funciones_ingreso_datos -> . VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN
    (84) funciones_ingreso_datos -> . READLINE LPAREN RPAREN
    (85) funciones_ingreso_datos -> . READLINE LPAREN elemento_string RPAREN
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (123) map -> . NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
    (124) map -> . NEW MAP LPAREN RPAREN
    (129) vector -> . NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN
    (130) vector -> . NEW VECTOR LPAREN RPAREN
    (138) set -> . NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN
    (139) set -> . NEW SET LPAREN RPAREN

    FUNCTION        shift and go to state 99
    VARIABLE        shift and go to state 53
    FUNCTION_NAME   shift and go to state 26
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    NOTLOGICAL      shift and go to state 65
    VAR_EXPORT      shift and go to state 69
    READLINE        shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NEW             shift and go to state 73

    var_asignar_contenido          shift and go to state 97
    funcion_ejecucion              shift and go to state 98
    elemento_numerico              shift and go to state 54
    elemento_string                shift and go to state 55
    elemento_logico                shift and go to state 56
    datos_estructurados            shift and go to state 57
    funciones_ingreso_datos        shift and go to state 58
    elemento_logico_pri            shift and go to state 64
    map                            shift and go to state 66
    vector                         shift and go to state 67
    set                            shift and go to state 68

state 45

    (21) var_plusminus -> VARIABLE PLUS . PLUS SEMICOLON

    PLUS            shift and go to state 100


state 46

    (22) var_plusminus -> VARIABLE MINUS . MINUS SEMICOLON

    MINUS           shift and go to state 101


state 47

    (156) remove_set -> VARIABLE SIMPLEARROW . REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> VARIABLE SIMPLEARROW . REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> VARIABLE SIMPLEARROW . REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (150) push_vector -> VARIABLE SIMPLEARROW . PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> VARIABLE SIMPLEARROW . PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> VARIABLE SIMPLEARROW . PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    REMOVE          shift and go to state 102
    PUSH            shift and go to state 103


state 48

    (12) var_declarar -> VAR var_asignar .

    VARIABLE        reduce using rule 12 (var_declarar -> VAR var_asignar .)
    VAR             reduce using rule 12 (var_declarar -> VAR var_asignar .)
    FUNCTION        reduce using rule 12 (var_declarar -> VAR var_asignar .)
    RETURN          reduce using rule 12 (var_declarar -> VAR var_asignar .)
    FUNCTION_NAME   reduce using rule 12 (var_declarar -> VAR var_asignar .)
    ECHO            reduce using rule 12 (var_declarar -> VAR var_asignar .)
    PRINT           reduce using rule 12 (var_declarar -> VAR var_asignar .)
    VAR_DUMP        reduce using rule 12 (var_declarar -> VAR var_asignar .)
    PRINT_R         reduce using rule 12 (var_declarar -> VAR var_asignar .)
    VAR_EXPORT      reduce using rule 12 (var_declarar -> VAR var_asignar .)
    IF              reduce using rule 12 (var_declarar -> VAR var_asignar .)
    WHILE           reduce using rule 12 (var_declarar -> VAR var_asignar .)
    $end            reduce using rule 12 (var_declarar -> VAR var_asignar .)
    RCURLY          reduce using rule 12 (var_declarar -> VAR var_asignar .)
    ENDIF           reduce using rule 12 (var_declarar -> VAR var_asignar .)
    ELSE            reduce using rule 12 (var_declarar -> VAR var_asignar .)
    ELSEIF          reduce using rule 12 (var_declarar -> VAR var_asignar .)
    ENDWHILE        reduce using rule 12 (var_declarar -> VAR var_asignar .)


state 49

    (110) funcion_declaracion -> VAR VARIABLE . EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (13) var_asignar -> VARIABLE . EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> VARIABLE . EQUALS funcion_ejecucion

    EQUALS          shift and go to state 104


state 50

    (108) funcion_declaracion -> FUNCTION funcion_cabecera_declaracion . funciones_cuerpo
    (113) funciones_cuerpo -> . LCURLY expresiones RCURLY
    (114) funciones_cuerpo -> . LCURLY RCURLY

    LCURLY          shift and go to state 106

    funciones_cuerpo               shift and go to state 105

state 51

    (111) funcion_cabecera_declaracion -> FUNCTION_NAME . LPAREN variables_por_comma RPAREN
    (112) funcion_cabecera_declaracion -> FUNCTION_NAME . LPAREN RPAREN

    LPAREN          shift and go to state 107


state 52

    (115) return -> RETURN var_asignar_contenido . SEMICOLON

    SEMICOLON       shift and go to state 108


state 53

    (15) var_asignar_contenido -> VARIABLE .
    (27) elemento_numerico -> VARIABLE .
    (35) elemento_string -> VARIABLE .
    (40) elemento_logico -> VARIABLE .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 15 (var_asignar_contenido -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 15 (var_asignar_contenido -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 15 (var_asignar_contenido -> VARIABLE .)
    SEMICOLON       reduce using rule 15 (var_asignar_contenido -> VARIABLE .)
    PLUS            reduce using rule 27 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)

  ! SEMICOLON       [ reduce using rule 27 (elemento_numerico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]


state 54

    (16) var_asignar_contenido -> elemento_numerico .
    (23) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (41) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (28) operador -> . PLUS
    (29) operador -> . MINUS
    (30) operador -> . DIVIDE
    (31) operador -> . EXPONENTIAL
    (32) operador -> . TIMES
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    SEMICOLON       reduce using rule 16 (var_asignar_contenido -> elemento_numerico .)
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    DIVIDE          shift and go to state 113
    EXPONENTIAL     shift and go to state 114
    TIMES           shift and go to state 115
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    operador                       shift and go to state 109
    comparador                     shift and go to state 110

state 55

    (17) var_asignar_contenido -> elemento_string .
    (42) elemento_logico -> elemento_string . comparador elemento_string
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    SEMICOLON       reduce using rule 17 (var_asignar_contenido -> elemento_string .)
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 126

state 56

    (18) var_asignar_contenido -> elemento_logico .
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    SEMICOLON       reduce using rule 18 (var_asignar_contenido -> elemento_logico .)
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 127

state 57

    (19) var_asignar_contenido -> datos_estructurados .

    SEMICOLON       reduce using rule 19 (var_asignar_contenido -> datos_estructurados .)


state 58

    (20) var_asignar_contenido -> funciones_ingreso_datos .

    SEMICOLON       reduce using rule 20 (var_asignar_contenido -> funciones_ingreso_datos .)


state 59

    (24) elemento_numerico -> FLOAT .

    PLUS            reduce using rule 24 (elemento_numerico -> FLOAT .)
    MINUS           reduce using rule 24 (elemento_numerico -> FLOAT .)
    DIVIDE          reduce using rule 24 (elemento_numerico -> FLOAT .)
    EXPONENTIAL     reduce using rule 24 (elemento_numerico -> FLOAT .)
    TIMES           reduce using rule 24 (elemento_numerico -> FLOAT .)
    IDENTICAL       reduce using rule 24 (elemento_numerico -> FLOAT .)
    NOTIDENTICAL    reduce using rule 24 (elemento_numerico -> FLOAT .)
    EQUALSLOGICAL   reduce using rule 24 (elemento_numerico -> FLOAT .)
    DIFFERENT       reduce using rule 24 (elemento_numerico -> FLOAT .)
    GREATEREQUAL    reduce using rule 24 (elemento_numerico -> FLOAT .)
    LESSEQUAL       reduce using rule 24 (elemento_numerico -> FLOAT .)
    GREATERTHAN     reduce using rule 24 (elemento_numerico -> FLOAT .)
    LESSTHAN        reduce using rule 24 (elemento_numerico -> FLOAT .)
    ANDlOGICAL      reduce using rule 24 (elemento_numerico -> FLOAT .)
    ORLOGICAL       reduce using rule 24 (elemento_numerico -> FLOAT .)
    SEMICOLON       reduce using rule 24 (elemento_numerico -> FLOAT .)
    COMMA           reduce using rule 24 (elemento_numerico -> FLOAT .)
    POINT           reduce using rule 24 (elemento_numerico -> FLOAT .)
    RPAREN          reduce using rule 24 (elemento_numerico -> FLOAT .)
    RBRACKET        reduce using rule 24 (elemento_numerico -> FLOAT .)


state 60

    (25) elemento_numerico -> NUMBER .

    PLUS            reduce using rule 25 (elemento_numerico -> NUMBER .)
    MINUS           reduce using rule 25 (elemento_numerico -> NUMBER .)
    DIVIDE          reduce using rule 25 (elemento_numerico -> NUMBER .)
    EXPONENTIAL     reduce using rule 25 (elemento_numerico -> NUMBER .)
    TIMES           reduce using rule 25 (elemento_numerico -> NUMBER .)
    IDENTICAL       reduce using rule 25 (elemento_numerico -> NUMBER .)
    NOTIDENTICAL    reduce using rule 25 (elemento_numerico -> NUMBER .)
    EQUALSLOGICAL   reduce using rule 25 (elemento_numerico -> NUMBER .)
    DIFFERENT       reduce using rule 25 (elemento_numerico -> NUMBER .)
    GREATEREQUAL    reduce using rule 25 (elemento_numerico -> NUMBER .)
    LESSEQUAL       reduce using rule 25 (elemento_numerico -> NUMBER .)
    GREATERTHAN     reduce using rule 25 (elemento_numerico -> NUMBER .)
    LESSTHAN        reduce using rule 25 (elemento_numerico -> NUMBER .)
    ANDlOGICAL      reduce using rule 25 (elemento_numerico -> NUMBER .)
    ORLOGICAL       reduce using rule 25 (elemento_numerico -> NUMBER .)
    SEMICOLON       reduce using rule 25 (elemento_numerico -> NUMBER .)
    COMMA           reduce using rule 25 (elemento_numerico -> NUMBER .)
    POINT           reduce using rule 25 (elemento_numerico -> NUMBER .)
    RPAREN          reduce using rule 25 (elemento_numerico -> NUMBER .)
    RBRACKET        reduce using rule 25 (elemento_numerico -> NUMBER .)


state 61

    (26) elemento_numerico -> LPAREN . elemento_numerico RPAREN
    (39) elemento_logico -> LPAREN . elemento_logico RPAREN
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    VARIABLE        shift and go to state 130
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_numerico              shift and go to state 128
    elemento_logico                shift and go to state 129
    elemento_logico_pri            shift and go to state 64
    elemento_string                shift and go to state 131

state 62

    (33) elemento_string -> STRING .

    IDENTICAL       reduce using rule 33 (elemento_string -> STRING .)
    NOTIDENTICAL    reduce using rule 33 (elemento_string -> STRING .)
    EQUALSLOGICAL   reduce using rule 33 (elemento_string -> STRING .)
    DIFFERENT       reduce using rule 33 (elemento_string -> STRING .)
    GREATEREQUAL    reduce using rule 33 (elemento_string -> STRING .)
    LESSEQUAL       reduce using rule 33 (elemento_string -> STRING .)
    GREATERTHAN     reduce using rule 33 (elemento_string -> STRING .)
    LESSTHAN        reduce using rule 33 (elemento_string -> STRING .)
    ANDlOGICAL      reduce using rule 33 (elemento_string -> STRING .)
    ORLOGICAL       reduce using rule 33 (elemento_string -> STRING .)
    SEMICOLON       reduce using rule 33 (elemento_string -> STRING .)
    COMMA           reduce using rule 33 (elemento_string -> STRING .)
    POINT           reduce using rule 33 (elemento_string -> STRING .)
    RPAREN          reduce using rule 33 (elemento_string -> STRING .)
    RBRACKET        reduce using rule 33 (elemento_string -> STRING .)
    ARROW           reduce using rule 33 (elemento_string -> STRING .)


state 63

    (34) elemento_string -> STRINGCC .

    IDENTICAL       reduce using rule 34 (elemento_string -> STRINGCC .)
    NOTIDENTICAL    reduce using rule 34 (elemento_string -> STRINGCC .)
    EQUALSLOGICAL   reduce using rule 34 (elemento_string -> STRINGCC .)
    DIFFERENT       reduce using rule 34 (elemento_string -> STRINGCC .)
    GREATEREQUAL    reduce using rule 34 (elemento_string -> STRINGCC .)
    LESSEQUAL       reduce using rule 34 (elemento_string -> STRINGCC .)
    GREATERTHAN     reduce using rule 34 (elemento_string -> STRINGCC .)
    LESSTHAN        reduce using rule 34 (elemento_string -> STRINGCC .)
    ANDlOGICAL      reduce using rule 34 (elemento_string -> STRINGCC .)
    ORLOGICAL       reduce using rule 34 (elemento_string -> STRINGCC .)
    SEMICOLON       reduce using rule 34 (elemento_string -> STRINGCC .)
    COMMA           reduce using rule 34 (elemento_string -> STRINGCC .)
    POINT           reduce using rule 34 (elemento_string -> STRINGCC .)
    RPAREN          reduce using rule 34 (elemento_string -> STRINGCC .)
    RBRACKET        reduce using rule 34 (elemento_string -> STRINGCC .)
    ARROW           reduce using rule 34 (elemento_string -> STRINGCC .)


state 64

    (36) elemento_logico -> elemento_logico_pri .

    IDENTICAL       reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    NOTIDENTICAL    reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    EQUALSLOGICAL   reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    DIFFERENT       reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    GREATEREQUAL    reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    LESSEQUAL       reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    GREATERTHAN     reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    LESSTHAN        reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    ANDlOGICAL      reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    ORLOGICAL       reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    SEMICOLON       reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    COMMA           reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    POINT           reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    RPAREN          reduce using rule 36 (elemento_logico -> elemento_logico_pri .)
    RBRACKET        reduce using rule 36 (elemento_logico -> elemento_logico_pri .)


state 65

    (38) elemento_logico -> NOTLOGICAL . elemento_logico
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 65
    LPAREN          shift and go to state 133
    VARIABLE        shift and go to state 134
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_logico                shift and go to state 132
    elemento_logico_pri            shift and go to state 64
    elemento_numerico              shift and go to state 135
    elemento_string                shift and go to state 131

state 66

    (120) datos_estructurados -> map .

    SEMICOLON       reduce using rule 120 (datos_estructurados -> map .)


state 67

    (121) datos_estructurados -> vector .

    SEMICOLON       reduce using rule 121 (datos_estructurados -> vector .)


state 68

    (122) datos_estructurados -> set .

    SEMICOLON       reduce using rule 122 (datos_estructurados -> set .)


state 69

    (83) funciones_ingreso_datos -> VAR_EXPORT . LPAREN param COMMA elemento_logico RPAREN

    LPAREN          shift and go to state 136


state 70

    (84) funciones_ingreso_datos -> READLINE . LPAREN RPAREN
    (85) funciones_ingreso_datos -> READLINE . LPAREN elemento_string RPAREN

    LPAREN          shift and go to state 137


state 71

    (43) elemento_logico_pri -> TRUE .

    IDENTICAL       reduce using rule 43 (elemento_logico_pri -> TRUE .)
    NOTIDENTICAL    reduce using rule 43 (elemento_logico_pri -> TRUE .)
    EQUALSLOGICAL   reduce using rule 43 (elemento_logico_pri -> TRUE .)
    DIFFERENT       reduce using rule 43 (elemento_logico_pri -> TRUE .)
    GREATEREQUAL    reduce using rule 43 (elemento_logico_pri -> TRUE .)
    LESSEQUAL       reduce using rule 43 (elemento_logico_pri -> TRUE .)
    GREATERTHAN     reduce using rule 43 (elemento_logico_pri -> TRUE .)
    LESSTHAN        reduce using rule 43 (elemento_logico_pri -> TRUE .)
    ANDlOGICAL      reduce using rule 43 (elemento_logico_pri -> TRUE .)
    ORLOGICAL       reduce using rule 43 (elemento_logico_pri -> TRUE .)
    SEMICOLON       reduce using rule 43 (elemento_logico_pri -> TRUE .)
    COMMA           reduce using rule 43 (elemento_logico_pri -> TRUE .)
    POINT           reduce using rule 43 (elemento_logico_pri -> TRUE .)
    RPAREN          reduce using rule 43 (elemento_logico_pri -> TRUE .)
    RBRACKET        reduce using rule 43 (elemento_logico_pri -> TRUE .)


state 72

    (44) elemento_logico_pri -> FALSE .

    IDENTICAL       reduce using rule 44 (elemento_logico_pri -> FALSE .)
    NOTIDENTICAL    reduce using rule 44 (elemento_logico_pri -> FALSE .)
    EQUALSLOGICAL   reduce using rule 44 (elemento_logico_pri -> FALSE .)
    DIFFERENT       reduce using rule 44 (elemento_logico_pri -> FALSE .)
    GREATEREQUAL    reduce using rule 44 (elemento_logico_pri -> FALSE .)
    LESSEQUAL       reduce using rule 44 (elemento_logico_pri -> FALSE .)
    GREATERTHAN     reduce using rule 44 (elemento_logico_pri -> FALSE .)
    LESSTHAN        reduce using rule 44 (elemento_logico_pri -> FALSE .)
    ANDlOGICAL      reduce using rule 44 (elemento_logico_pri -> FALSE .)
    ORLOGICAL       reduce using rule 44 (elemento_logico_pri -> FALSE .)
    SEMICOLON       reduce using rule 44 (elemento_logico_pri -> FALSE .)
    COMMA           reduce using rule 44 (elemento_logico_pri -> FALSE .)
    POINT           reduce using rule 44 (elemento_logico_pri -> FALSE .)
    RPAREN          reduce using rule 44 (elemento_logico_pri -> FALSE .)
    RBRACKET        reduce using rule 44 (elemento_logico_pri -> FALSE .)


state 73

    (123) map -> NEW . MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
    (124) map -> NEW . MAP LPAREN RPAREN
    (129) vector -> NEW . VECTOR LPAREN LBRACKET params RBRACKET RPAREN
    (130) vector -> NEW . VECTOR LPAREN RPAREN
    (138) set -> NEW . SET LPAREN LBRACKET params_unitype RBRACKET RPAREN
    (139) set -> NEW . SET LPAREN RPAREN

    MAP             shift and go to state 138
    VECTOR          shift and go to state 139
    SET             shift and go to state 140


state 74

    (116) funcion_ejecucion -> FUNCTION_NAME LPAREN . params RPAREN SEMICOLON
    (117) funcion_ejecucion -> FUNCTION_NAME LPAREN . RPAREN SEMICOLON
    (59) params -> . param
    (60) params -> . param COMMA params
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    RPAREN          shift and go to state 142
    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 141
    param                          shift and go to state 143
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 75

    (77) echo -> ECHO params . SEMICOLON

    SEMICOLON       shift and go to state 144


state 76

    (78) echo -> ECHO params_points . SEMICOLON

    SEMICOLON       shift and go to state 145


state 77

    (59) params -> param .
    (60) params -> param . COMMA params
    (61) params_points -> param .
    (62) params_points -> param . POINT params_points

  ! reduce/reduce conflict for SEMICOLON resolved using rule 59 (params -> param .)
    SEMICOLON       reduce using rule 59 (params -> param .)
    COMMA           shift and go to state 146
    POINT           shift and go to state 147

  ! SEMICOLON       [ reduce using rule 61 (params_points -> param .) ]


state 78

    (55) param -> VARIABLE .
    (35) elemento_string -> VARIABLE .
    (27) elemento_numerico -> VARIABLE .
    (40) elemento_logico -> VARIABLE .

  ! reduce/reduce conflict for COMMA resolved using rule 35 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for POINT resolved using rule 35 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 35 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 35 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 35 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for POINT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for POINT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 27 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 27 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    COMMA           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    POINT           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    SEMICOLON       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 27 (elemento_numerico -> VARIABLE .)
    RBRACKET        reduce using rule 27 (elemento_numerico -> VARIABLE .)

  ! COMMA           [ reduce using rule 55 (param -> VARIABLE .) ]
  ! POINT           [ reduce using rule 55 (param -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 55 (param -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 55 (param -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 55 (param -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! POINT           [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! POINT           [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]


state 79

    (56) param -> elemento_string .
    (42) elemento_logico -> elemento_string . comparador elemento_string
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    COMMA           reduce using rule 56 (param -> elemento_string .)
    POINT           reduce using rule 56 (param -> elemento_string .)
    SEMICOLON       reduce using rule 56 (param -> elemento_string .)
    RPAREN          reduce using rule 56 (param -> elemento_string .)
    RBRACKET        reduce using rule 56 (param -> elemento_string .)
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 126

state 80

    (57) param -> elemento_numerico .
    (23) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (41) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (28) operador -> . PLUS
    (29) operador -> . MINUS
    (30) operador -> . DIVIDE
    (31) operador -> . EXPONENTIAL
    (32) operador -> . TIMES
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    COMMA           reduce using rule 57 (param -> elemento_numerico .)
    POINT           reduce using rule 57 (param -> elemento_numerico .)
    SEMICOLON       reduce using rule 57 (param -> elemento_numerico .)
    RPAREN          reduce using rule 57 (param -> elemento_numerico .)
    RBRACKET        reduce using rule 57 (param -> elemento_numerico .)
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    DIVIDE          shift and go to state 113
    EXPONENTIAL     shift and go to state 114
    TIMES           shift and go to state 115
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    operador                       shift and go to state 109
    comparador                     shift and go to state 110

state 81

    (58) param -> elemento_logico .
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    COMMA           reduce using rule 58 (param -> elemento_logico .)
    POINT           reduce using rule 58 (param -> elemento_logico .)
    SEMICOLON       reduce using rule 58 (param -> elemento_logico .)
    RPAREN          reduce using rule 58 (param -> elemento_logico .)
    RBRACKET        reduce using rule 58 (param -> elemento_logico .)
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 127

state 82

    (79) print -> PRINT param . SEMICOLON

    SEMICOLON       shift and go to state 148


state 83

    (81) var_dump -> VAR_DUMP LPAREN . param RPAREN SEMICOLON
    (145) key_map -> VAR_DUMP LPAREN . VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> VAR_DUMP LPAREN . VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> VAR_DUMP LPAREN . VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (149) find_vector -> VAR_DUMP LPAREN . VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 150
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 149
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 84

    (80) print_r -> PRINT_R LPAREN . param RPAREN SEMICOLON
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 151
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 85

    (82) var_export -> VAR_EXPORT LPAREN . param RPAREN SEMICOLON
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 152
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 86

    (89) if_structures -> if else .

    VARIABLE        reduce using rule 89 (if_structures -> if else .)
    VAR             reduce using rule 89 (if_structures -> if else .)
    FUNCTION        reduce using rule 89 (if_structures -> if else .)
    RETURN          reduce using rule 89 (if_structures -> if else .)
    FUNCTION_NAME   reduce using rule 89 (if_structures -> if else .)
    ECHO            reduce using rule 89 (if_structures -> if else .)
    PRINT           reduce using rule 89 (if_structures -> if else .)
    VAR_DUMP        reduce using rule 89 (if_structures -> if else .)
    PRINT_R         reduce using rule 89 (if_structures -> if else .)
    VAR_EXPORT      reduce using rule 89 (if_structures -> if else .)
    IF              reduce using rule 89 (if_structures -> if else .)
    WHILE           reduce using rule 89 (if_structures -> if else .)
    $end            reduce using rule 89 (if_structures -> if else .)
    RCURLY          reduce using rule 89 (if_structures -> if else .)
    ENDIF           reduce using rule 89 (if_structures -> if else .)
    ELSE            reduce using rule 89 (if_structures -> if else .)
    ELSEIF          reduce using rule 89 (if_structures -> if else .)
    ENDWHILE        reduce using rule 89 (if_structures -> if else .)


state 87

    (90) if_structures -> if else_if . else
    (91) if_structures -> if else_if .
    (100) else_if -> else_if . else_if
    (97) else -> . ELSE LCURLY expresiones RCURLY
    (98) else_if -> . ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (99) else_if -> . ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (100) else_if -> . else_if else_if

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    VARIABLE        reduce using rule 91 (if_structures -> if else_if .)
    VAR             reduce using rule 91 (if_structures -> if else_if .)
    FUNCTION        reduce using rule 91 (if_structures -> if else_if .)
    RETURN          reduce using rule 91 (if_structures -> if else_if .)
    FUNCTION_NAME   reduce using rule 91 (if_structures -> if else_if .)
    ECHO            reduce using rule 91 (if_structures -> if else_if .)
    PRINT           reduce using rule 91 (if_structures -> if else_if .)
    VAR_DUMP        reduce using rule 91 (if_structures -> if else_if .)
    PRINT_R         reduce using rule 91 (if_structures -> if else_if .)
    VAR_EXPORT      reduce using rule 91 (if_structures -> if else_if .)
    IF              reduce using rule 91 (if_structures -> if else_if .)
    WHILE           reduce using rule 91 (if_structures -> if else_if .)
    $end            reduce using rule 91 (if_structures -> if else_if .)
    RCURLY          reduce using rule 91 (if_structures -> if else_if .)
    ENDIF           reduce using rule 91 (if_structures -> if else_if .)
    ENDWHILE        reduce using rule 91 (if_structures -> if else_if .)
    ELSE            shift and go to state 88
    ELSEIF          shift and go to state 89

  ! ELSE            [ reduce using rule 91 (if_structures -> if else_if .) ]
  ! ELSEIF          [ reduce using rule 91 (if_structures -> if else_if .) ]

    else_if                        shift and go to state 153
    else                           shift and go to state 154

state 88

    (97) else -> ELSE . LCURLY expresiones RCURLY
    (99) else_if -> ELSE . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    LCURLY          shift and go to state 155
    IF              shift and go to state 156


state 89

    (98) else_if -> ELSEIF . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    LPAREN          shift and go to state 157


state 90

    (92) if_structures -> if_r ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 158


state 91

    (93) if_structures -> if_r else_r . ENDIF SEMICOLON

    ENDIF           shift and go to state 159


state 92

    (94) if_structures -> if_r elseif_r . else_r ENDIF SEMICOLON
    (95) if_structures -> if_r elseif_r . ENDIF SEMICOLON
    (104) elseif_r -> elseif_r . elseif_r
    (102) else_r -> . ELSE DOUBLEPOINT expresiones
    (103) elseif_r -> . ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (104) elseif_r -> . elseif_r elseif_r

    ENDIF           shift and go to state 162
    ELSE            shift and go to state 93
    ELSEIF          shift and go to state 94

    elseif_r                       shift and go to state 160
    else_r                         shift and go to state 161

state 93

    (102) else_r -> ELSE . DOUBLEPOINT expresiones

    DOUBLEPOINT     shift and go to state 163


state 94

    (103) elseif_r -> ELSEIF . LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones

    LPAREN          shift and go to state 164


state 95

    (96) if -> IF LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> IF LPAREN . elemento_logico RPAREN DOUBLEPOINT expresiones
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 65
    LPAREN          shift and go to state 133
    VARIABLE        shift and go to state 134
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_logico                shift and go to state 165
    elemento_logico_pri            shift and go to state 64
    elemento_numerico              shift and go to state 135
    elemento_string                shift and go to state 131

state 96

    (106) while -> WHILE LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> WHILE LPAREN . elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 65
    LPAREN          shift and go to state 133
    VARIABLE        shift and go to state 134
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_logico                shift and go to state 166
    elemento_logico_pri            shift and go to state 64
    elemento_numerico              shift and go to state 135
    elemento_string                shift and go to state 131

state 97

    (13) var_asignar -> VARIABLE EQUALS var_asignar_contenido . SEMICOLON

    SEMICOLON       shift and go to state 167


state 98

    (14) var_asignar -> VARIABLE EQUALS funcion_ejecucion .

    VARIABLE        reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    VAR             reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    FUNCTION        reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    RETURN          reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    FUNCTION_NAME   reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    ECHO            reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    PRINT           reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    VAR_DUMP        reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    PRINT_R         reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    VAR_EXPORT      reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    IF              reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    WHILE           reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    $end            reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    RCURLY          reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    ENDIF           reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    ELSE            reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    ELSEIF          reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)
    ENDWHILE        reduce using rule 14 (var_asignar -> VARIABLE EQUALS funcion_ejecucion .)


state 99

    (109) funcion_declaracion -> VARIABLE EQUALS FUNCTION . LPAREN variables_por_comma RPAREN funciones_cuerpo

    LPAREN          shift and go to state 168


state 100

    (21) var_plusminus -> VARIABLE PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 169


state 101

    (22) var_plusminus -> VARIABLE MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 170


state 102

    (156) remove_set -> VARIABLE SIMPLEARROW REMOVE . LPAREN param RPAREN SEMICOLON
    (157) remove_set -> VARIABLE SIMPLEARROW REMOVE . LPAREN params RPAREN SEMICOLON
    (158) remove_set -> VARIABLE SIMPLEARROW REMOVE . LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    LPAREN          shift and go to state 171


state 103

    (150) push_vector -> VARIABLE SIMPLEARROW PUSH . LPAREN param RPAREN SEMICOLON
    (151) push_vector -> VARIABLE SIMPLEARROW PUSH . LPAREN params RPAREN SEMICOLON
    (152) push_vector -> VARIABLE SIMPLEARROW PUSH . LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    LPAREN          shift and go to state 172


state 104

    (110) funcion_declaracion -> VAR VARIABLE EQUALS . FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (13) var_asignar -> VARIABLE EQUALS . var_asignar_contenido SEMICOLON
    (14) var_asignar -> VARIABLE EQUALS . funcion_ejecucion
    (15) var_asignar_contenido -> . VARIABLE
    (16) var_asignar_contenido -> . elemento_numerico
    (17) var_asignar_contenido -> . elemento_string
    (18) var_asignar_contenido -> . elemento_logico
    (19) var_asignar_contenido -> . datos_estructurados
    (20) var_asignar_contenido -> . funciones_ingreso_datos
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (120) datos_estructurados -> . map
    (121) datos_estructurados -> . vector
    (122) datos_estructurados -> . set
    (83) funciones_ingreso_datos -> . VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN
    (84) funciones_ingreso_datos -> . READLINE LPAREN RPAREN
    (85) funciones_ingreso_datos -> . READLINE LPAREN elemento_string RPAREN
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (123) map -> . NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
    (124) map -> . NEW MAP LPAREN RPAREN
    (129) vector -> . NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN
    (130) vector -> . NEW VECTOR LPAREN RPAREN
    (138) set -> . NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN
    (139) set -> . NEW SET LPAREN RPAREN

    FUNCTION        shift and go to state 173
    VARIABLE        shift and go to state 53
    FUNCTION_NAME   shift and go to state 26
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    NOTLOGICAL      shift and go to state 65
    VAR_EXPORT      shift and go to state 69
    READLINE        shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NEW             shift and go to state 73

    var_asignar_contenido          shift and go to state 97
    funcion_ejecucion              shift and go to state 98
    elemento_numerico              shift and go to state 54
    elemento_string                shift and go to state 55
    elemento_logico                shift and go to state 56
    datos_estructurados            shift and go to state 57
    funciones_ingreso_datos        shift and go to state 58
    elemento_logico_pri            shift and go to state 64
    map                            shift and go to state 66
    vector                         shift and go to state 67
    set                            shift and go to state 68

state 105

    (108) funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .

    VARIABLE        reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    VAR             reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    FUNCTION        reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    RETURN          reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    FUNCTION_NAME   reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    ECHO            reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    PRINT           reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    VAR_DUMP        reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    PRINT_R         reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    VAR_EXPORT      reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    IF              reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    WHILE           reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    $end            reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    RCURLY          reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    ENDIF           reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    ELSE            reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    ELSEIF          reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)
    ENDWHILE        reduce using rule 108 (funcion_declaracion -> FUNCTION funcion_cabecera_declaracion funciones_cuerpo .)


state 106

    (113) funciones_cuerpo -> LCURLY . expresiones RCURLY
    (114) funciones_cuerpo -> LCURLY . RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    RCURLY          shift and go to state 175
    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 174
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 107

    (111) funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN . variables_por_comma RPAREN
    (112) funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN . RPAREN
    (118) variables_por_comma -> . VARIABLE
    (119) variables_por_comma -> . VARIABLE COMMA variables_por_comma

    RPAREN          shift and go to state 177
    VARIABLE        shift and go to state 178

    variables_por_comma            shift and go to state 176

state 108

    (115) return -> RETURN var_asignar_contenido SEMICOLON .

    VARIABLE        reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    VAR             reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    FUNCTION        reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    RETURN          reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    FUNCTION_NAME   reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    ECHO            reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    PRINT           reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    VAR_DUMP        reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    PRINT_R         reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    VAR_EXPORT      reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    IF              reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    WHILE           reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    $end            reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    RCURLY          reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    ENDIF           reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    ELSE            reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    ELSEIF          reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)
    ENDWHILE        reduce using rule 115 (return -> RETURN var_asignar_contenido SEMICOLON .)


state 109

    (23) elemento_numerico -> elemento_numerico operador . elemento_numerico
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE

    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 180
    VARIABLE        shift and go to state 181

    elemento_numerico              shift and go to state 179

state 110

    (41) elemento_logico -> elemento_numerico comparador . elemento_numerico
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE

    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 180
    VARIABLE        shift and go to state 181

    elemento_numerico              shift and go to state 182

state 111

    (28) operador -> PLUS .

    FLOAT           reduce using rule 28 (operador -> PLUS .)
    NUMBER          reduce using rule 28 (operador -> PLUS .)
    LPAREN          reduce using rule 28 (operador -> PLUS .)
    VARIABLE        reduce using rule 28 (operador -> PLUS .)


state 112

    (29) operador -> MINUS .

    FLOAT           reduce using rule 29 (operador -> MINUS .)
    NUMBER          reduce using rule 29 (operador -> MINUS .)
    LPAREN          reduce using rule 29 (operador -> MINUS .)
    VARIABLE        reduce using rule 29 (operador -> MINUS .)


state 113

    (30) operador -> DIVIDE .

    FLOAT           reduce using rule 30 (operador -> DIVIDE .)
    NUMBER          reduce using rule 30 (operador -> DIVIDE .)
    LPAREN          reduce using rule 30 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 30 (operador -> DIVIDE .)


state 114

    (31) operador -> EXPONENTIAL .

    FLOAT           reduce using rule 31 (operador -> EXPONENTIAL .)
    NUMBER          reduce using rule 31 (operador -> EXPONENTIAL .)
    LPAREN          reduce using rule 31 (operador -> EXPONENTIAL .)
    VARIABLE        reduce using rule 31 (operador -> EXPONENTIAL .)


state 115

    (32) operador -> TIMES .

    FLOAT           reduce using rule 32 (operador -> TIMES .)
    NUMBER          reduce using rule 32 (operador -> TIMES .)
    LPAREN          reduce using rule 32 (operador -> TIMES .)
    VARIABLE        reduce using rule 32 (operador -> TIMES .)


state 116

    (45) comparador -> IDENTICAL .

    FLOAT           reduce using rule 45 (comparador -> IDENTICAL .)
    NUMBER          reduce using rule 45 (comparador -> IDENTICAL .)
    LPAREN          reduce using rule 45 (comparador -> IDENTICAL .)
    VARIABLE        reduce using rule 45 (comparador -> IDENTICAL .)
    STRING          reduce using rule 45 (comparador -> IDENTICAL .)
    STRINGCC        reduce using rule 45 (comparador -> IDENTICAL .)
    NOTLOGICAL      reduce using rule 45 (comparador -> IDENTICAL .)
    TRUE            reduce using rule 45 (comparador -> IDENTICAL .)
    FALSE           reduce using rule 45 (comparador -> IDENTICAL .)


state 117

    (46) comparador -> NOTIDENTICAL .

    FLOAT           reduce using rule 46 (comparador -> NOTIDENTICAL .)
    NUMBER          reduce using rule 46 (comparador -> NOTIDENTICAL .)
    LPAREN          reduce using rule 46 (comparador -> NOTIDENTICAL .)
    VARIABLE        reduce using rule 46 (comparador -> NOTIDENTICAL .)
    STRING          reduce using rule 46 (comparador -> NOTIDENTICAL .)
    STRINGCC        reduce using rule 46 (comparador -> NOTIDENTICAL .)
    NOTLOGICAL      reduce using rule 46 (comparador -> NOTIDENTICAL .)
    TRUE            reduce using rule 46 (comparador -> NOTIDENTICAL .)
    FALSE           reduce using rule 46 (comparador -> NOTIDENTICAL .)


state 118

    (47) comparador -> EQUALSLOGICAL .

    FLOAT           reduce using rule 47 (comparador -> EQUALSLOGICAL .)
    NUMBER          reduce using rule 47 (comparador -> EQUALSLOGICAL .)
    LPAREN          reduce using rule 47 (comparador -> EQUALSLOGICAL .)
    VARIABLE        reduce using rule 47 (comparador -> EQUALSLOGICAL .)
    STRING          reduce using rule 47 (comparador -> EQUALSLOGICAL .)
    STRINGCC        reduce using rule 47 (comparador -> EQUALSLOGICAL .)
    NOTLOGICAL      reduce using rule 47 (comparador -> EQUALSLOGICAL .)
    TRUE            reduce using rule 47 (comparador -> EQUALSLOGICAL .)
    FALSE           reduce using rule 47 (comparador -> EQUALSLOGICAL .)


state 119

    (48) comparador -> DIFFERENT .

    FLOAT           reduce using rule 48 (comparador -> DIFFERENT .)
    NUMBER          reduce using rule 48 (comparador -> DIFFERENT .)
    LPAREN          reduce using rule 48 (comparador -> DIFFERENT .)
    VARIABLE        reduce using rule 48 (comparador -> DIFFERENT .)
    STRING          reduce using rule 48 (comparador -> DIFFERENT .)
    STRINGCC        reduce using rule 48 (comparador -> DIFFERENT .)
    NOTLOGICAL      reduce using rule 48 (comparador -> DIFFERENT .)
    TRUE            reduce using rule 48 (comparador -> DIFFERENT .)
    FALSE           reduce using rule 48 (comparador -> DIFFERENT .)


state 120

    (49) comparador -> GREATEREQUAL .

    FLOAT           reduce using rule 49 (comparador -> GREATEREQUAL .)
    NUMBER          reduce using rule 49 (comparador -> GREATEREQUAL .)
    LPAREN          reduce using rule 49 (comparador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 49 (comparador -> GREATEREQUAL .)
    STRING          reduce using rule 49 (comparador -> GREATEREQUAL .)
    STRINGCC        reduce using rule 49 (comparador -> GREATEREQUAL .)
    NOTLOGICAL      reduce using rule 49 (comparador -> GREATEREQUAL .)
    TRUE            reduce using rule 49 (comparador -> GREATEREQUAL .)
    FALSE           reduce using rule 49 (comparador -> GREATEREQUAL .)


state 121

    (50) comparador -> LESSEQUAL .

    FLOAT           reduce using rule 50 (comparador -> LESSEQUAL .)
    NUMBER          reduce using rule 50 (comparador -> LESSEQUAL .)
    LPAREN          reduce using rule 50 (comparador -> LESSEQUAL .)
    VARIABLE        reduce using rule 50 (comparador -> LESSEQUAL .)
    STRING          reduce using rule 50 (comparador -> LESSEQUAL .)
    STRINGCC        reduce using rule 50 (comparador -> LESSEQUAL .)
    NOTLOGICAL      reduce using rule 50 (comparador -> LESSEQUAL .)
    TRUE            reduce using rule 50 (comparador -> LESSEQUAL .)
    FALSE           reduce using rule 50 (comparador -> LESSEQUAL .)


state 122

    (51) comparador -> GREATERTHAN .

    FLOAT           reduce using rule 51 (comparador -> GREATERTHAN .)
    NUMBER          reduce using rule 51 (comparador -> GREATERTHAN .)
    LPAREN          reduce using rule 51 (comparador -> GREATERTHAN .)
    VARIABLE        reduce using rule 51 (comparador -> GREATERTHAN .)
    STRING          reduce using rule 51 (comparador -> GREATERTHAN .)
    STRINGCC        reduce using rule 51 (comparador -> GREATERTHAN .)
    NOTLOGICAL      reduce using rule 51 (comparador -> GREATERTHAN .)
    TRUE            reduce using rule 51 (comparador -> GREATERTHAN .)
    FALSE           reduce using rule 51 (comparador -> GREATERTHAN .)


state 123

    (52) comparador -> LESSTHAN .

    FLOAT           reduce using rule 52 (comparador -> LESSTHAN .)
    NUMBER          reduce using rule 52 (comparador -> LESSTHAN .)
    LPAREN          reduce using rule 52 (comparador -> LESSTHAN .)
    VARIABLE        reduce using rule 52 (comparador -> LESSTHAN .)
    STRING          reduce using rule 52 (comparador -> LESSTHAN .)
    STRINGCC        reduce using rule 52 (comparador -> LESSTHAN .)
    NOTLOGICAL      reduce using rule 52 (comparador -> LESSTHAN .)
    TRUE            reduce using rule 52 (comparador -> LESSTHAN .)
    FALSE           reduce using rule 52 (comparador -> LESSTHAN .)


state 124

    (53) comparador -> ANDlOGICAL .

    FLOAT           reduce using rule 53 (comparador -> ANDlOGICAL .)
    NUMBER          reduce using rule 53 (comparador -> ANDlOGICAL .)
    LPAREN          reduce using rule 53 (comparador -> ANDlOGICAL .)
    VARIABLE        reduce using rule 53 (comparador -> ANDlOGICAL .)
    STRING          reduce using rule 53 (comparador -> ANDlOGICAL .)
    STRINGCC        reduce using rule 53 (comparador -> ANDlOGICAL .)
    NOTLOGICAL      reduce using rule 53 (comparador -> ANDlOGICAL .)
    TRUE            reduce using rule 53 (comparador -> ANDlOGICAL .)
    FALSE           reduce using rule 53 (comparador -> ANDlOGICAL .)


state 125

    (54) comparador -> ORLOGICAL .

    FLOAT           reduce using rule 54 (comparador -> ORLOGICAL .)
    NUMBER          reduce using rule 54 (comparador -> ORLOGICAL .)
    LPAREN          reduce using rule 54 (comparador -> ORLOGICAL .)
    VARIABLE        reduce using rule 54 (comparador -> ORLOGICAL .)
    STRING          reduce using rule 54 (comparador -> ORLOGICAL .)
    STRINGCC        reduce using rule 54 (comparador -> ORLOGICAL .)
    NOTLOGICAL      reduce using rule 54 (comparador -> ORLOGICAL .)
    TRUE            reduce using rule 54 (comparador -> ORLOGICAL .)
    FALSE           reduce using rule 54 (comparador -> ORLOGICAL .)


state 126

    (42) elemento_logico -> elemento_string comparador . elemento_string
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    VARIABLE        shift and go to state 184

    elemento_string                shift and go to state 183

state 127

    (37) elemento_logico -> elemento_logico comparador . elemento_logico
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 65
    LPAREN          shift and go to state 133
    VARIABLE        shift and go to state 134
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_logico                shift and go to state 185
    elemento_logico_pri            shift and go to state 64
    elemento_numerico              shift and go to state 135
    elemento_string                shift and go to state 131

state 128

    (26) elemento_numerico -> LPAREN elemento_numerico . RPAREN
    (23) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (41) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (28) operador -> . PLUS
    (29) operador -> . MINUS
    (30) operador -> . DIVIDE
    (31) operador -> . EXPONENTIAL
    (32) operador -> . TIMES
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 186
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    DIVIDE          shift and go to state 113
    EXPONENTIAL     shift and go to state 114
    TIMES           shift and go to state 115
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    operador                       shift and go to state 109
    comparador                     shift and go to state 110

state 129

    (39) elemento_logico -> LPAREN elemento_logico . RPAREN
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 187
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 127

state 130

    (27) elemento_numerico -> VARIABLE .
    (40) elemento_logico -> VARIABLE .
    (35) elemento_string -> VARIABLE .

  ! reduce/reduce conflict for RPAREN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 27 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 27 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)

  ! RPAREN          [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]


state 131

    (42) elemento_logico -> elemento_string . comparador elemento_string
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 126

state 132

    (38) elemento_logico -> NOTLOGICAL elemento_logico .
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

  ! shift/reduce conflict for IDENTICAL resolved as shift
  ! shift/reduce conflict for NOTIDENTICAL resolved as shift
  ! shift/reduce conflict for EQUALSLOGICAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for ANDlOGICAL resolved as shift
  ! shift/reduce conflict for ORLOGICAL resolved as shift
    SEMICOLON       reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .)
    COMMA           reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .)
    POINT           reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .)
    RPAREN          reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .)
    RBRACKET        reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .)
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

  ! IDENTICAL       [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! NOTIDENTICAL    [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! EQUALSLOGICAL   [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! DIFFERENT       [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! GREATEREQUAL    [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! LESSEQUAL       [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! GREATERTHAN     [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! LESSTHAN        [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! ANDlOGICAL      [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! ORLOGICAL       [ reduce using rule 38 (elemento_logico -> NOTLOGICAL elemento_logico .) ]

    comparador                     shift and go to state 127

state 133

    (39) elemento_logico -> LPAREN . elemento_logico RPAREN
    (26) elemento_numerico -> LPAREN . elemento_numerico RPAREN
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 65
    LPAREN          shift and go to state 133
    VARIABLE        shift and go to state 134
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_logico                shift and go to state 129
    elemento_numerico              shift and go to state 188
    elemento_logico_pri            shift and go to state 64
    elemento_string                shift and go to state 131

state 134

    (40) elemento_logico -> VARIABLE .
    (27) elemento_numerico -> VARIABLE .
    (35) elemento_string -> VARIABLE .

  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
    SEMICOLON       reduce using rule 40 (elemento_logico -> VARIABLE .)
    COMMA           reduce using rule 40 (elemento_logico -> VARIABLE .)
    POINT           reduce using rule 40 (elemento_logico -> VARIABLE .)
    RBRACKET        reduce using rule 40 (elemento_logico -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 27 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 27 (elemento_numerico -> VARIABLE .)

  ! IDENTICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]


state 135

    (41) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (23) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL
    (28) operador -> . PLUS
    (29) operador -> . MINUS
    (30) operador -> . DIVIDE
    (31) operador -> . EXPONENTIAL
    (32) operador -> . TIMES

    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    DIVIDE          shift and go to state 113
    EXPONENTIAL     shift and go to state 114
    TIMES           shift and go to state 115

    comparador                     shift and go to state 110
    operador                       shift and go to state 109

state 136

    (83) funciones_ingreso_datos -> VAR_EXPORT LPAREN . param COMMA elemento_logico RPAREN
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 189
    elemento_logico                shift and go to state 81
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico_pri            shift and go to state 64

state 137

    (84) funciones_ingreso_datos -> READLINE LPAREN . RPAREN
    (85) funciones_ingreso_datos -> READLINE LPAREN . elemento_string RPAREN
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    RPAREN          shift and go to state 190
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    VARIABLE        shift and go to state 184

    elemento_string                shift and go to state 191

state 138

    (123) map -> NEW MAP . LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
    (124) map -> NEW MAP . LPAREN RPAREN

    LPAREN          shift and go to state 192


state 139

    (129) vector -> NEW VECTOR . LPAREN LBRACKET params RBRACKET RPAREN
    (130) vector -> NEW VECTOR . LPAREN RPAREN

    LPAREN          shift and go to state 193


state 140

    (138) set -> NEW SET . LPAREN LBRACKET params_unitype RBRACKET RPAREN
    (139) set -> NEW SET . LPAREN RPAREN

    LPAREN          shift and go to state 194


state 141

    (116) funcion_ejecucion -> FUNCTION_NAME LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 195


state 142

    (117) funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 196


state 143

    (59) params -> param .
    (60) params -> param . COMMA params

    RPAREN          reduce using rule 59 (params -> param .)
    SEMICOLON       reduce using rule 59 (params -> param .)
    RBRACKET        reduce using rule 59 (params -> param .)
    COMMA           shift and go to state 146


state 144

    (77) echo -> ECHO params SEMICOLON .

    VARIABLE        reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    VAR             reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    FUNCTION        reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    RETURN          reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    FUNCTION_NAME   reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    ECHO            reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    PRINT           reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    VAR_DUMP        reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    PRINT_R         reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    VAR_EXPORT      reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    IF              reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    WHILE           reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    $end            reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    RCURLY          reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    ENDIF           reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    ELSE            reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    ELSEIF          reduce using rule 77 (echo -> ECHO params SEMICOLON .)
    ENDWHILE        reduce using rule 77 (echo -> ECHO params SEMICOLON .)


state 145

    (78) echo -> ECHO params_points SEMICOLON .

    VARIABLE        reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    VAR             reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    FUNCTION        reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    RETURN          reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    FUNCTION_NAME   reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    ECHO            reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    PRINT           reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    VAR_DUMP        reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    PRINT_R         reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    VAR_EXPORT      reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    IF              reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    WHILE           reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    $end            reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    RCURLY          reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    ENDIF           reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    ELSE            reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    ELSEIF          reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)
    ENDWHILE        reduce using rule 78 (echo -> ECHO params_points SEMICOLON .)


state 146

    (60) params -> param COMMA . params
    (59) params -> . param
    (60) params -> . param COMMA params
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 143
    params                         shift and go to state 197
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 147

    (62) params_points -> param POINT . params_points
    (61) params_points -> . param
    (62) params_points -> . param POINT params_points
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 198
    params_points                  shift and go to state 199
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 148

    (79) print -> PRINT param SEMICOLON .

    VARIABLE        reduce using rule 79 (print -> PRINT param SEMICOLON .)
    VAR             reduce using rule 79 (print -> PRINT param SEMICOLON .)
    FUNCTION        reduce using rule 79 (print -> PRINT param SEMICOLON .)
    RETURN          reduce using rule 79 (print -> PRINT param SEMICOLON .)
    FUNCTION_NAME   reduce using rule 79 (print -> PRINT param SEMICOLON .)
    ECHO            reduce using rule 79 (print -> PRINT param SEMICOLON .)
    PRINT           reduce using rule 79 (print -> PRINT param SEMICOLON .)
    VAR_DUMP        reduce using rule 79 (print -> PRINT param SEMICOLON .)
    PRINT_R         reduce using rule 79 (print -> PRINT param SEMICOLON .)
    VAR_EXPORT      reduce using rule 79 (print -> PRINT param SEMICOLON .)
    IF              reduce using rule 79 (print -> PRINT param SEMICOLON .)
    WHILE           reduce using rule 79 (print -> PRINT param SEMICOLON .)
    $end            reduce using rule 79 (print -> PRINT param SEMICOLON .)
    RCURLY          reduce using rule 79 (print -> PRINT param SEMICOLON .)
    ENDIF           reduce using rule 79 (print -> PRINT param SEMICOLON .)
    ELSE            reduce using rule 79 (print -> PRINT param SEMICOLON .)
    ELSEIF          reduce using rule 79 (print -> PRINT param SEMICOLON .)
    ENDWHILE        reduce using rule 79 (print -> PRINT param SEMICOLON .)


state 149

    (81) var_dump -> VAR_DUMP LPAREN param . RPAREN SEMICOLON

    RPAREN          shift and go to state 200


state 150

    (145) key_map -> VAR_DUMP LPAREN VARIABLE . SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> VAR_DUMP LPAREN VARIABLE . SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> VAR_DUMP LPAREN VARIABLE . SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (149) find_vector -> VAR_DUMP LPAREN VARIABLE . SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (55) param -> VARIABLE .
    (35) elemento_string -> VARIABLE .
    (27) elemento_numerico -> VARIABLE .
    (40) elemento_logico -> VARIABLE .

  ! reduce/reduce conflict for RPAREN resolved using rule 35 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 27 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (elemento_numerico -> VARIABLE .)
    SIMPLEARROW     shift and go to state 201
    PLUS            reduce using rule 27 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 27 (elemento_numerico -> VARIABLE .)

  ! RPAREN          [ reduce using rule 55 (param -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 35 (elemento_string -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 40 (elemento_logico -> VARIABLE .) ]


state 151

    (80) print_r -> PRINT_R LPAREN param . RPAREN SEMICOLON

    RPAREN          shift and go to state 202


state 152

    (82) var_export -> VAR_EXPORT LPAREN param . RPAREN SEMICOLON

    RPAREN          shift and go to state 203


state 153

    (100) else_if -> else_if else_if .
    (100) else_if -> else_if . else_if
    (98) else_if -> . ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (99) else_if -> . ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (100) else_if -> . else_if else_if

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    VARIABLE        reduce using rule 100 (else_if -> else_if else_if .)
    VAR             reduce using rule 100 (else_if -> else_if else_if .)
    FUNCTION        reduce using rule 100 (else_if -> else_if else_if .)
    RETURN          reduce using rule 100 (else_if -> else_if else_if .)
    FUNCTION_NAME   reduce using rule 100 (else_if -> else_if else_if .)
    ECHO            reduce using rule 100 (else_if -> else_if else_if .)
    PRINT           reduce using rule 100 (else_if -> else_if else_if .)
    VAR_DUMP        reduce using rule 100 (else_if -> else_if else_if .)
    PRINT_R         reduce using rule 100 (else_if -> else_if else_if .)
    VAR_EXPORT      reduce using rule 100 (else_if -> else_if else_if .)
    IF              reduce using rule 100 (else_if -> else_if else_if .)
    WHILE           reduce using rule 100 (else_if -> else_if else_if .)
    $end            reduce using rule 100 (else_if -> else_if else_if .)
    RCURLY          reduce using rule 100 (else_if -> else_if else_if .)
    ENDIF           reduce using rule 100 (else_if -> else_if else_if .)
    ENDWHILE        reduce using rule 100 (else_if -> else_if else_if .)
    ELSEIF          shift and go to state 89
    ELSE            shift and go to state 204

  ! ELSE            [ reduce using rule 100 (else_if -> else_if else_if .) ]
  ! ELSEIF          [ reduce using rule 100 (else_if -> else_if else_if .) ]

    else_if                        shift and go to state 153

state 154

    (90) if_structures -> if else_if else .

    VARIABLE        reduce using rule 90 (if_structures -> if else_if else .)
    VAR             reduce using rule 90 (if_structures -> if else_if else .)
    FUNCTION        reduce using rule 90 (if_structures -> if else_if else .)
    RETURN          reduce using rule 90 (if_structures -> if else_if else .)
    FUNCTION_NAME   reduce using rule 90 (if_structures -> if else_if else .)
    ECHO            reduce using rule 90 (if_structures -> if else_if else .)
    PRINT           reduce using rule 90 (if_structures -> if else_if else .)
    VAR_DUMP        reduce using rule 90 (if_structures -> if else_if else .)
    PRINT_R         reduce using rule 90 (if_structures -> if else_if else .)
    VAR_EXPORT      reduce using rule 90 (if_structures -> if else_if else .)
    IF              reduce using rule 90 (if_structures -> if else_if else .)
    WHILE           reduce using rule 90 (if_structures -> if else_if else .)
    $end            reduce using rule 90 (if_structures -> if else_if else .)
    RCURLY          reduce using rule 90 (if_structures -> if else_if else .)
    ENDIF           reduce using rule 90 (if_structures -> if else_if else .)
    ELSE            reduce using rule 90 (if_structures -> if else_if else .)
    ELSEIF          reduce using rule 90 (if_structures -> if else_if else .)
    ENDWHILE        reduce using rule 90 (if_structures -> if else_if else .)


state 155

    (97) else -> ELSE LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 205
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 156

    (99) else_if -> ELSE IF . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    LPAREN          shift and go to state 206


state 157

    (98) else_if -> ELSEIF LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 65
    LPAREN          shift and go to state 133
    VARIABLE        shift and go to state 134
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_logico                shift and go to state 207
    elemento_logico_pri            shift and go to state 64
    elemento_numerico              shift and go to state 135
    elemento_string                shift and go to state 131

state 158

    (92) if_structures -> if_r ENDIF SEMICOLON .

    VARIABLE        reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    VAR             reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    FUNCTION        reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    RETURN          reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    FUNCTION_NAME   reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    ECHO            reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    PRINT           reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    VAR_DUMP        reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    PRINT_R         reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    VAR_EXPORT      reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    IF              reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    WHILE           reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    $end            reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    RCURLY          reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    ENDIF           reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    ELSE            reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    ELSEIF          reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)
    ENDWHILE        reduce using rule 92 (if_structures -> if_r ENDIF SEMICOLON .)


state 159

    (93) if_structures -> if_r else_r ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 208


state 160

    (104) elseif_r -> elseif_r elseif_r .
    (104) elseif_r -> elseif_r . elseif_r
    (103) elseif_r -> . ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (104) elseif_r -> . elseif_r elseif_r

  ! shift/reduce conflict for ELSEIF resolved as shift
    ENDIF           reduce using rule 104 (elseif_r -> elseif_r elseif_r .)
    ELSE            reduce using rule 104 (elseif_r -> elseif_r elseif_r .)
    ELSEIF          shift and go to state 94

  ! ELSEIF          [ reduce using rule 104 (elseif_r -> elseif_r elseif_r .) ]

    elseif_r                       shift and go to state 160

state 161

    (94) if_structures -> if_r elseif_r else_r . ENDIF SEMICOLON

    ENDIF           shift and go to state 209


state 162

    (95) if_structures -> if_r elseif_r ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 210


state 163

    (102) else_r -> ELSE DOUBLEPOINT . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 211
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 164

    (103) elseif_r -> ELSEIF LPAREN . elemento_logico RPAREN DOUBLEPOINT expresiones
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 65
    LPAREN          shift and go to state 133
    VARIABLE        shift and go to state 134
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_logico                shift and go to state 212
    elemento_logico_pri            shift and go to state 64
    elemento_numerico              shift and go to state 135
    elemento_string                shift and go to state 131

state 165

    (96) if -> IF LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (101) if_r -> IF LPAREN elemento_logico . RPAREN DOUBLEPOINT expresiones
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 213
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 127

state 166

    (106) while -> WHILE LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (107) while -> WHILE LPAREN elemento_logico . RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 214
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 127

state 167

    (13) var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .

    VARIABLE        reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    VAR             reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    FUNCTION        reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    RETURN          reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    FUNCTION_NAME   reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ECHO            reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    PRINT           reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    VAR_DUMP        reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    PRINT_R         reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    VAR_EXPORT      reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    IF              reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    WHILE           reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    $end            reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    RCURLY          reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ENDIF           reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ELSE            reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ELSEIF          reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ENDWHILE        reduce using rule 13 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)


state 168

    (109) funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN . variables_por_comma RPAREN funciones_cuerpo
    (118) variables_por_comma -> . VARIABLE
    (119) variables_por_comma -> . VARIABLE COMMA variables_por_comma

    VARIABLE        shift and go to state 178

    variables_por_comma            shift and go to state 215

state 169

    (21) var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .

    VARIABLE        reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    VAR             reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    FUNCTION        reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    FUNCTION_NAME   reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ECHO            reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    PRINT           reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    VAR_DUMP        reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    PRINT_R         reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    VAR_EXPORT      reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    IF              reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    $end            reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    RCURLY          reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ENDIF           reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ELSE            reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ELSEIF          reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ENDWHILE        reduce using rule 21 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)


state 170

    (22) var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .

    VARIABLE        reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    VAR             reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    FUNCTION        reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    RETURN          reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    FUNCTION_NAME   reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ECHO            reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    PRINT           reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    VAR_DUMP        reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    PRINT_R         reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    VAR_EXPORT      reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    IF              reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    $end            reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    RCURLY          reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ENDIF           reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ELSE            reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ELSEIF          reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ENDWHILE        reduce using rule 22 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)


state 171

    (156) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN . param RPAREN SEMICOLON
    (157) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN . params RPAREN SEMICOLON
    (158) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN . LBRACKET params RBRACKET RPAREN SEMICOLON
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (59) params -> . param
    (60) params -> . param COMMA params
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    LBRACKET        shift and go to state 218
    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 216
    params                         shift and go to state 217
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 172

    (150) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN . param RPAREN SEMICOLON
    (151) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN . params RPAREN SEMICOLON
    (152) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN . LBRACKET params RBRACKET RPAREN SEMICOLON
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (59) params -> . param
    (60) params -> . param COMMA params
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    LBRACKET        shift and go to state 221
    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 219
    params                         shift and go to state 220
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 173

    (110) funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION . LPAREN variables_por_comma RPAREN funciones_cuerpo

    LPAREN          shift and go to state 222


state 174

    (113) funciones_cuerpo -> LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 223


state 175

    (114) funciones_cuerpo -> LCURLY RCURLY .

    VARIABLE        reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    VAR             reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    FUNCTION        reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    RETURN          reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    FUNCTION_NAME   reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    ECHO            reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    PRINT           reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    VAR_DUMP        reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    PRINT_R         reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    VAR_EXPORT      reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    IF              reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    WHILE           reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    $end            reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    RCURLY          reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    ENDIF           reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    ELSE            reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    ELSEIF          reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)
    ENDWHILE        reduce using rule 114 (funciones_cuerpo -> LCURLY RCURLY .)


state 176

    (111) funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN variables_por_comma . RPAREN

    RPAREN          shift and go to state 224


state 177

    (112) funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN RPAREN .

    LCURLY          reduce using rule 112 (funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN RPAREN .)


state 178

    (118) variables_por_comma -> VARIABLE .
    (119) variables_por_comma -> VARIABLE . COMMA variables_por_comma

    RPAREN          reduce using rule 118 (variables_por_comma -> VARIABLE .)
    COMMA           shift and go to state 225


state 179

    (23) elemento_numerico -> elemento_numerico operador elemento_numerico .
    (23) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (28) operador -> . PLUS
    (29) operador -> . MINUS
    (30) operador -> . DIVIDE
    (31) operador -> . EXPONENTIAL
    (32) operador -> . TIMES

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENTIAL resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
    IDENTICAL       reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    NOTIDENTICAL    reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    EQUALSLOGICAL   reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    DIFFERENT       reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    GREATEREQUAL    reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    LESSEQUAL       reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    GREATERTHAN     reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    LESSTHAN        reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    ANDlOGICAL      reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    ORLOGICAL       reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    SEMICOLON       reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    COMMA           reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    POINT           reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    RPAREN          reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    RBRACKET        reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    DIVIDE          shift and go to state 113
    EXPONENTIAL     shift and go to state 114
    TIMES           shift and go to state 115

  ! PLUS            [ reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! MINUS           [ reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! DIVIDE          [ reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! EXPONENTIAL     [ reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! TIMES           [ reduce using rule 23 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]

    operador                       shift and go to state 109

state 180

    (26) elemento_numerico -> LPAREN . elemento_numerico RPAREN
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE

    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 180
    VARIABLE        shift and go to state 181

    elemento_numerico              shift and go to state 226

state 181

    (27) elemento_numerico -> VARIABLE .

    PLUS            reduce using rule 27 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 27 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 27 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 27 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    SEMICOLON       reduce using rule 27 (elemento_numerico -> VARIABLE .)
    COMMA           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    POINT           reduce using rule 27 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 27 (elemento_numerico -> VARIABLE .)
    RBRACKET        reduce using rule 27 (elemento_numerico -> VARIABLE .)


state 182

    (41) elemento_logico -> elemento_numerico comparador elemento_numerico .
    (23) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (28) operador -> . PLUS
    (29) operador -> . MINUS
    (30) operador -> . DIVIDE
    (31) operador -> . EXPONENTIAL
    (32) operador -> . TIMES

    IDENTICAL       reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    NOTIDENTICAL    reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    EQUALSLOGICAL   reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    DIFFERENT       reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    GREATEREQUAL    reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    LESSEQUAL       reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    GREATERTHAN     reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    LESSTHAN        reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    ANDlOGICAL      reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    ORLOGICAL       reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    SEMICOLON       reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    COMMA           reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    POINT           reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    RPAREN          reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    RBRACKET        reduce using rule 41 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    DIVIDE          shift and go to state 113
    EXPONENTIAL     shift and go to state 114
    TIMES           shift and go to state 115

    operador                       shift and go to state 109

state 183

    (42) elemento_logico -> elemento_string comparador elemento_string .

    IDENTICAL       reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    NOTIDENTICAL    reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    EQUALSLOGICAL   reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    DIFFERENT       reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    GREATEREQUAL    reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    LESSEQUAL       reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    GREATERTHAN     reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    LESSTHAN        reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    ANDlOGICAL      reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    ORLOGICAL       reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    SEMICOLON       reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    COMMA           reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    POINT           reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    RPAREN          reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)
    RBRACKET        reduce using rule 42 (elemento_logico -> elemento_string comparador elemento_string .)


state 184

    (35) elemento_string -> VARIABLE .

    IDENTICAL       reduce using rule 35 (elemento_string -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 35 (elemento_string -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 35 (elemento_string -> VARIABLE .)
    DIFFERENT       reduce using rule 35 (elemento_string -> VARIABLE .)
    GREATEREQUAL    reduce using rule 35 (elemento_string -> VARIABLE .)
    LESSEQUAL       reduce using rule 35 (elemento_string -> VARIABLE .)
    GREATERTHAN     reduce using rule 35 (elemento_string -> VARIABLE .)
    LESSTHAN        reduce using rule 35 (elemento_string -> VARIABLE .)
    ANDlOGICAL      reduce using rule 35 (elemento_string -> VARIABLE .)
    ORLOGICAL       reduce using rule 35 (elemento_string -> VARIABLE .)
    SEMICOLON       reduce using rule 35 (elemento_string -> VARIABLE .)
    COMMA           reduce using rule 35 (elemento_string -> VARIABLE .)
    POINT           reduce using rule 35 (elemento_string -> VARIABLE .)
    RPAREN          reduce using rule 35 (elemento_string -> VARIABLE .)
    RBRACKET        reduce using rule 35 (elemento_string -> VARIABLE .)
    ARROW           reduce using rule 35 (elemento_string -> VARIABLE .)


state 185

    (37) elemento_logico -> elemento_logico comparador elemento_logico .
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

  ! shift/reduce conflict for IDENTICAL resolved as shift
  ! shift/reduce conflict for NOTIDENTICAL resolved as shift
  ! shift/reduce conflict for EQUALSLOGICAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for ANDlOGICAL resolved as shift
  ! shift/reduce conflict for ORLOGICAL resolved as shift
    SEMICOLON       reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .)
    COMMA           reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .)
    POINT           reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .)
    RPAREN          reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .)
    RBRACKET        reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .)
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

  ! IDENTICAL       [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! NOTIDENTICAL    [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! EQUALSLOGICAL   [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! DIFFERENT       [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! GREATEREQUAL    [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! LESSEQUAL       [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! GREATERTHAN     [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! LESSTHAN        [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! ANDlOGICAL      [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! ORLOGICAL       [ reduce using rule 37 (elemento_logico -> elemento_logico comparador elemento_logico .) ]

    comparador                     shift and go to state 127

state 186

    (26) elemento_numerico -> LPAREN elemento_numerico RPAREN .

    PLUS            reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    MINUS           reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    DIVIDE          reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    EXPONENTIAL     reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    TIMES           reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    IDENTICAL       reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    NOTIDENTICAL    reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    EQUALSLOGICAL   reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    DIFFERENT       reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    GREATEREQUAL    reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    LESSEQUAL       reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    GREATERTHAN     reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    LESSTHAN        reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    ANDlOGICAL      reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    ORLOGICAL       reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    SEMICOLON       reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    COMMA           reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    POINT           reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    RPAREN          reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    RBRACKET        reduce using rule 26 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)


state 187

    (39) elemento_logico -> LPAREN elemento_logico RPAREN .

    IDENTICAL       reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    NOTIDENTICAL    reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    EQUALSLOGICAL   reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    DIFFERENT       reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    GREATEREQUAL    reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    LESSEQUAL       reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    GREATERTHAN     reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    LESSTHAN        reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    ANDlOGICAL      reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    ORLOGICAL       reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    SEMICOLON       reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    COMMA           reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    POINT           reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    RPAREN          reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    RBRACKET        reduce using rule 39 (elemento_logico -> LPAREN elemento_logico RPAREN .)


state 188

    (26) elemento_numerico -> LPAREN elemento_numerico . RPAREN
    (41) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (23) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL
    (28) operador -> . PLUS
    (29) operador -> . MINUS
    (30) operador -> . DIVIDE
    (31) operador -> . EXPONENTIAL
    (32) operador -> . TIMES

    RPAREN          shift and go to state 186
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    DIVIDE          shift and go to state 113
    EXPONENTIAL     shift and go to state 114
    TIMES           shift and go to state 115

    comparador                     shift and go to state 110
    operador                       shift and go to state 109

state 189

    (83) funciones_ingreso_datos -> VAR_EXPORT LPAREN param . COMMA elemento_logico RPAREN

    COMMA           shift and go to state 227


state 190

    (84) funciones_ingreso_datos -> READLINE LPAREN RPAREN .

    SEMICOLON       reduce using rule 84 (funciones_ingreso_datos -> READLINE LPAREN RPAREN .)


state 191

    (85) funciones_ingreso_datos -> READLINE LPAREN elemento_string . RPAREN

    RPAREN          shift and go to state 228


state 192

    (123) map -> NEW MAP LPAREN . LBRACKET todos_clave_valor RBRACKET RPAREN
    (124) map -> NEW MAP LPAREN . RPAREN

    LBRACKET        shift and go to state 229
    RPAREN          shift and go to state 230


state 193

    (129) vector -> NEW VECTOR LPAREN . LBRACKET params RBRACKET RPAREN
    (130) vector -> NEW VECTOR LPAREN . RPAREN

    LBRACKET        shift and go to state 231
    RPAREN          shift and go to state 232


state 194

    (138) set -> NEW SET LPAREN . LBRACKET params_unitype RBRACKET RPAREN
    (139) set -> NEW SET LPAREN . RPAREN

    LBRACKET        shift and go to state 233
    RPAREN          shift and go to state 234


state 195

    (116) funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 235


state 196

    (117) funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    RCURLY          reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    ENDIF           reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 117 (funcion_ejecucion -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)


state 197

    (60) params -> param COMMA params .

    SEMICOLON       reduce using rule 60 (params -> param COMMA params .)
    RPAREN          reduce using rule 60 (params -> param COMMA params .)
    RBRACKET        reduce using rule 60 (params -> param COMMA params .)


state 198

    (61) params_points -> param .
    (62) params_points -> param . POINT params_points

    SEMICOLON       reduce using rule 61 (params_points -> param .)
    POINT           shift and go to state 147


state 199

    (62) params_points -> param POINT params_points .

    SEMICOLON       reduce using rule 62 (params_points -> param POINT params_points .)


state 200

    (81) var_dump -> VAR_DUMP LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 236


state 201

    (145) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW . KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW . DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW . UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (149) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW . FIND LPAREN param RPAREN RPAREN SEMICOLON

    KEYS            shift and go to state 237
    DIFF            shift and go to state 238
    UNION           shift and go to state 239
    FIND            shift and go to state 240


state 202

    (80) print_r -> PRINT_R LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 241


state 203

    (82) var_export -> VAR_EXPORT LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 242


state 204

    (99) else_if -> ELSE . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    IF              shift and go to state 156


state 205

    (97) else -> ELSE LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 243


state 206

    (99) else_if -> ELSE IF LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 65
    LPAREN          shift and go to state 133
    VARIABLE        shift and go to state 134
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_logico                shift and go to state 244
    elemento_logico_pri            shift and go to state 64
    elemento_numerico              shift and go to state 135
    elemento_string                shift and go to state 131

state 207

    (98) else_if -> ELSEIF LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 245
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 127

state 208

    (93) if_structures -> if_r else_r ENDIF SEMICOLON .

    VARIABLE        reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    VAR             reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    FUNCTION        reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    RETURN          reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    FUNCTION_NAME   reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ECHO            reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    PRINT           reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    VAR_DUMP        reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    PRINT_R         reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    VAR_EXPORT      reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    IF              reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    WHILE           reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    $end            reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    RCURLY          reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ENDIF           reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ELSE            reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ELSEIF          reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ENDWHILE        reduce using rule 93 (if_structures -> if_r else_r ENDIF SEMICOLON .)


state 209

    (94) if_structures -> if_r elseif_r else_r ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 246


state 210

    (95) if_structures -> if_r elseif_r ENDIF SEMICOLON .

    VARIABLE        reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    VAR             reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    FUNCTION        reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    RETURN          reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    FUNCTION_NAME   reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ECHO            reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    PRINT           reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    VAR_DUMP        reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    PRINT_R         reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    VAR_EXPORT      reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    IF              reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    WHILE           reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    $end            reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    RCURLY          reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ENDIF           reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ELSE            reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ELSEIF          reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ENDWHILE        reduce using rule 95 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)


state 211

    (102) else_r -> ELSE DOUBLEPOINT expresiones .

    ENDIF           reduce using rule 102 (else_r -> ELSE DOUBLEPOINT expresiones .)


state 212

    (103) elseif_r -> ELSEIF LPAREN elemento_logico . RPAREN DOUBLEPOINT expresiones
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 247
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 127

state 213

    (96) if -> IF LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY
    (101) if_r -> IF LPAREN elemento_logico RPAREN . DOUBLEPOINT expresiones

    LCURLY          shift and go to state 248
    DOUBLEPOINT     shift and go to state 249


state 214

    (106) while -> WHILE LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY
    (107) while -> WHILE LPAREN elemento_logico RPAREN . DOUBLEPOINT expresiones ENDWHILE SEMICOLON

    LCURLY          shift and go to state 250
    DOUBLEPOINT     shift and go to state 251


state 215

    (109) funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma . RPAREN funciones_cuerpo

    RPAREN          shift and go to state 252


state 216

    (156) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param . RPAREN SEMICOLON
    (59) params -> param .
    (60) params -> param . COMMA params

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 253
    COMMA           shift and go to state 146

  ! RPAREN          [ reduce using rule 59 (params -> param .) ]


state 217

    (157) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 254


state 218

    (158) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET . params RBRACKET RPAREN SEMICOLON
    (59) params -> . param
    (60) params -> . param COMMA params
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 255
    param                          shift and go to state 143
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 219

    (150) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param . RPAREN SEMICOLON
    (59) params -> param .
    (60) params -> param . COMMA params

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 256
    COMMA           shift and go to state 146

  ! RPAREN          [ reduce using rule 59 (params -> param .) ]


state 220

    (151) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 257


state 221

    (152) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET . params RBRACKET RPAREN SEMICOLON
    (59) params -> . param
    (60) params -> . param COMMA params
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 258
    param                          shift and go to state 143
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 222

    (110) funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN . variables_por_comma RPAREN funciones_cuerpo
    (118) variables_por_comma -> . VARIABLE
    (119) variables_por_comma -> . VARIABLE COMMA variables_por_comma

    VARIABLE        shift and go to state 178

    variables_por_comma            shift and go to state 259

state 223

    (113) funciones_cuerpo -> LCURLY expresiones RCURLY .

    VARIABLE        reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    VAR             reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    FUNCTION        reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    RETURN          reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    FUNCTION_NAME   reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    IF              reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    $end            reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    ELSE            reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 113 (funciones_cuerpo -> LCURLY expresiones RCURLY .)


state 224

    (111) funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN variables_por_comma RPAREN .

    LCURLY          reduce using rule 111 (funcion_cabecera_declaracion -> FUNCTION_NAME LPAREN variables_por_comma RPAREN .)


state 225

    (119) variables_por_comma -> VARIABLE COMMA . variables_por_comma
    (118) variables_por_comma -> . VARIABLE
    (119) variables_por_comma -> . VARIABLE COMMA variables_por_comma

    VARIABLE        shift and go to state 178

    variables_por_comma            shift and go to state 260

state 226

    (26) elemento_numerico -> LPAREN elemento_numerico . RPAREN
    (23) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (28) operador -> . PLUS
    (29) operador -> . MINUS
    (30) operador -> . DIVIDE
    (31) operador -> . EXPONENTIAL
    (32) operador -> . TIMES

    RPAREN          shift and go to state 186
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    DIVIDE          shift and go to state 113
    EXPONENTIAL     shift and go to state 114
    TIMES           shift and go to state 115

    operador                       shift and go to state 109

state 227

    (83) funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA . elemento_logico RPAREN
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 65
    LPAREN          shift and go to state 133
    VARIABLE        shift and go to state 134
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63

    elemento_logico                shift and go to state 261
    elemento_logico_pri            shift and go to state 64
    elemento_numerico              shift and go to state 135
    elemento_string                shift and go to state 131

state 228

    (85) funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN .

    SEMICOLON       reduce using rule 85 (funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN .)


state 229

    (123) map -> NEW MAP LPAREN LBRACKET . todos_clave_valor RBRACKET RPAREN
    (127) todos_clave_valor -> . clave_valor
    (128) todos_clave_valor -> . clave_valor COMMA todos_clave_valor
    (125) clave_valor -> . elemento_string ARROW param
    (126) clave_valor -> . NUMBER ARROW param
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NUMBER          shift and go to state 265
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    VARIABLE        shift and go to state 184

    todos_clave_valor              shift and go to state 262
    clave_valor                    shift and go to state 263
    elemento_string                shift and go to state 264

state 230

    (124) map -> NEW MAP LPAREN RPAREN .

    SEMICOLON       reduce using rule 124 (map -> NEW MAP LPAREN RPAREN .)


state 231

    (129) vector -> NEW VECTOR LPAREN LBRACKET . params RBRACKET RPAREN
    (59) params -> . param
    (60) params -> . param COMMA params
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 266
    param                          shift and go to state 143
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 232

    (130) vector -> NEW VECTOR LPAREN RPAREN .

    SEMICOLON       reduce using rule 130 (vector -> NEW VECTOR LPAREN RPAREN .)


state 233

    (138) set -> NEW SET LPAREN LBRACKET . params_unitype RBRACKET RPAREN
    (67) params_unitype -> . param
    (68) params_unitype -> . param COMMA params
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params_unitype                 shift and go to state 267
    param                          shift and go to state 268
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 234

    (139) set -> NEW SET LPAREN RPAREN .

    SEMICOLON       reduce using rule 139 (set -> NEW SET LPAREN RPAREN .)


state 235

    (116) funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .

    VARIABLE        reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    ECHO            reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    PRINT           reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    RCURLY          reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    ENDIF           reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 116 (funcion_ejecucion -> FUNCTION_NAME LPAREN params RPAREN SEMICOLON .)


state 236

    (81) var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    RETURN          reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 81 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)


state 237

    (145) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS . LPAREN RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 269


state 238

    (146) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF . LPAREN VARIABLE RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 270


state 239

    (155) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION . LPAREN VARIABLE RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 271


state 240

    (149) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND . LPAREN param RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 272


state 241

    (80) print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    RETURN          reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 80 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)


state 242

    (82) var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 82 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)


state 243

    (97) else -> ELSE LCURLY expresiones RCURLY .

    VARIABLE        reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    VAR             reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    FUNCTION        reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    RETURN          reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    FUNCTION_NAME   reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    IF              reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    $end            reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    ELSE            reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 97 (else -> ELSE LCURLY expresiones RCURLY .)


state 244

    (99) else_if -> ELSE IF LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 273
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 127

state 245

    (98) else_if -> ELSEIF LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY

    LCURLY          shift and go to state 274


state 246

    (94) if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .

    VARIABLE        reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    VAR             reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    FUNCTION        reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    RETURN          reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    FUNCTION_NAME   reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ECHO            reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    PRINT           reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    VAR_DUMP        reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    PRINT_R         reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    VAR_EXPORT      reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    IF              reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    WHILE           reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    $end            reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    RCURLY          reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ENDIF           reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ELSE            reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ELSEIF          reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ENDWHILE        reduce using rule 94 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)


state 247

    (103) elseif_r -> ELSEIF LPAREN elemento_logico RPAREN . DOUBLEPOINT expresiones

    DOUBLEPOINT     shift and go to state 275


state 248

    (96) if -> IF LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 276
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 249

    (101) if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 277
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 250

    (106) while -> WHILE LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 278
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 251

    (107) while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT . expresiones ENDWHILE SEMICOLON
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 279
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 252

    (109) funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN . funciones_cuerpo
    (113) funciones_cuerpo -> . LCURLY expresiones RCURLY
    (114) funciones_cuerpo -> . LCURLY RCURLY

    LCURLY          shift and go to state 106

    funciones_cuerpo               shift and go to state 280

state 253

    (156) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 281


state 254

    (157) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 282


state 255

    (158) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params . RBRACKET RPAREN SEMICOLON

    RBRACKET        shift and go to state 283


state 256

    (150) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 284


state 257

    (151) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 285


state 258

    (152) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params . RBRACKET RPAREN SEMICOLON

    RBRACKET        shift and go to state 286


state 259

    (110) funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma . RPAREN funciones_cuerpo

    RPAREN          shift and go to state 287


state 260

    (119) variables_por_comma -> VARIABLE COMMA variables_por_comma .

    RPAREN          reduce using rule 119 (variables_por_comma -> VARIABLE COMMA variables_por_comma .)


state 261

    (83) funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico . RPAREN
    (37) elemento_logico -> elemento_logico . comparador elemento_logico
    (45) comparador -> . IDENTICAL
    (46) comparador -> . NOTIDENTICAL
    (47) comparador -> . EQUALSLOGICAL
    (48) comparador -> . DIFFERENT
    (49) comparador -> . GREATEREQUAL
    (50) comparador -> . LESSEQUAL
    (51) comparador -> . GREATERTHAN
    (52) comparador -> . LESSTHAN
    (53) comparador -> . ANDlOGICAL
    (54) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 288
    IDENTICAL       shift and go to state 116
    NOTIDENTICAL    shift and go to state 117
    EQUALSLOGICAL   shift and go to state 118
    DIFFERENT       shift and go to state 119
    GREATEREQUAL    shift and go to state 120
    LESSEQUAL       shift and go to state 121
    GREATERTHAN     shift and go to state 122
    LESSTHAN        shift and go to state 123
    ANDlOGICAL      shift and go to state 124
    ORLOGICAL       shift and go to state 125

    comparador                     shift and go to state 127

state 262

    (123) map -> NEW MAP LPAREN LBRACKET todos_clave_valor . RBRACKET RPAREN

    RBRACKET        shift and go to state 289


state 263

    (127) todos_clave_valor -> clave_valor .
    (128) todos_clave_valor -> clave_valor . COMMA todos_clave_valor

    RBRACKET        reduce using rule 127 (todos_clave_valor -> clave_valor .)
    COMMA           shift and go to state 290


state 264

    (125) clave_valor -> elemento_string . ARROW param

    ARROW           shift and go to state 291


state 265

    (126) clave_valor -> NUMBER . ARROW param

    ARROW           shift and go to state 292


state 266

    (129) vector -> NEW VECTOR LPAREN LBRACKET params . RBRACKET RPAREN

    RBRACKET        shift and go to state 293


state 267

    (138) set -> NEW SET LPAREN LBRACKET params_unitype . RBRACKET RPAREN

    RBRACKET        shift and go to state 294


state 268

    (67) params_unitype -> param .
    (68) params_unitype -> param . COMMA params

    RBRACKET        reduce using rule 67 (params_unitype -> param .)
    COMMA           shift and go to state 295


state 269

    (145) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN . RPAREN RPAREN SEMICOLON

    RPAREN          shift and go to state 296


state 270

    (146) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN . VARIABLE RPAREN RPAREN SEMICOLON

    VARIABLE        shift and go to state 297


state 271

    (155) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN . VARIABLE RPAREN RPAREN SEMICOLON

    VARIABLE        shift and go to state 298


state 272

    (149) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN . param RPAREN RPAREN SEMICOLON
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 299
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 273

    (99) else_if -> ELSE IF LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY

    LCURLY          shift and go to state 300


state 274

    (98) else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 301
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 275

    (103) elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 302
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 276

    (96) if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 303


state 277

    (101) if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .

    ENDIF           reduce using rule 101 (if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)
    ELSE            reduce using rule 101 (if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)
    ELSEIF          reduce using rule 101 (if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)


state 278

    (106) while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 304


state 279

    (107) while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones . ENDWHILE SEMICOLON

    ENDWHILE        shift and go to state 305


state 280

    (109) funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .

    VARIABLE        reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    VAR             reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    FUNCTION        reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    RETURN          reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    FUNCTION_NAME   reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ECHO            reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    PRINT           reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    VAR_DUMP        reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    PRINT_R         reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    VAR_EXPORT      reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    IF              reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    WHILE           reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    $end            reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    RCURLY          reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ENDIF           reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ELSE            reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ELSEIF          reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ENDWHILE        reduce using rule 109 (funcion_declaracion -> VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)


state 281

    (156) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    RETURN          reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 156 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)


state 282

    (157) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .

    VARIABLE        reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ECHO            reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    PRINT           reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    RCURLY          reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ENDIF           reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 157 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)


state 283

    (158) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET . RPAREN SEMICOLON

    RPAREN          shift and go to state 306


state 284

    (150) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    RETURN          reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 150 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)


state 285

    (151) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .

    VARIABLE        reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ECHO            reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    PRINT           reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    RCURLY          reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ENDIF           reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 151 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)


state 286

    (152) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET . RPAREN SEMICOLON

    RPAREN          shift and go to state 307


state 287

    (110) funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN . funciones_cuerpo
    (113) funciones_cuerpo -> . LCURLY expresiones RCURLY
    (114) funciones_cuerpo -> . LCURLY RCURLY

    LCURLY          shift and go to state 106

    funciones_cuerpo               shift and go to state 308

state 288

    (83) funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN .

    SEMICOLON       reduce using rule 83 (funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN .)


state 289

    (123) map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET . RPAREN

    RPAREN          shift and go to state 309


state 290

    (128) todos_clave_valor -> clave_valor COMMA . todos_clave_valor
    (127) todos_clave_valor -> . clave_valor
    (128) todos_clave_valor -> . clave_valor COMMA todos_clave_valor
    (125) clave_valor -> . elemento_string ARROW param
    (126) clave_valor -> . NUMBER ARROW param
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE

    NUMBER          shift and go to state 265
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    VARIABLE        shift and go to state 184

    clave_valor                    shift and go to state 263
    todos_clave_valor              shift and go to state 310
    elemento_string                shift and go to state 264

state 291

    (125) clave_valor -> elemento_string ARROW . param
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    elemento_string                shift and go to state 79
    param                          shift and go to state 311
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 292

    (126) clave_valor -> NUMBER ARROW . param
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 312
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 293

    (129) vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET . RPAREN

    RPAREN          shift and go to state 313


state 294

    (138) set -> NEW SET LPAREN LBRACKET params_unitype RBRACKET . RPAREN

    RPAREN          shift and go to state 314


state 295

    (68) params_unitype -> param COMMA . params
    (59) params -> . param
    (60) params -> . param COMMA params
    (55) param -> . VARIABLE
    (56) param -> . elemento_string
    (57) param -> . elemento_numerico
    (58) param -> . elemento_logico
    (33) elemento_string -> . STRING
    (34) elemento_string -> . STRINGCC
    (35) elemento_string -> . VARIABLE
    (23) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (24) elemento_numerico -> . FLOAT
    (25) elemento_numerico -> . NUMBER
    (26) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (27) elemento_numerico -> . VARIABLE
    (36) elemento_logico -> . elemento_logico_pri
    (37) elemento_logico -> . elemento_logico comparador elemento_logico
    (38) elemento_logico -> . NOTLOGICAL elemento_logico
    (39) elemento_logico -> . LPAREN elemento_logico RPAREN
    (40) elemento_logico -> . VARIABLE
    (41) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (42) elemento_logico -> . elemento_string comparador elemento_string
    (43) elemento_logico_pri -> . TRUE
    (44) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 78
    STRING          shift and go to state 62
    STRINGCC        shift and go to state 63
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 60
    LPAREN          shift and go to state 61
    NOTLOGICAL      shift and go to state 65
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    param                          shift and go to state 143
    params                         shift and go to state 315
    elemento_string                shift and go to state 79
    elemento_numerico              shift and go to state 80
    elemento_logico                shift and go to state 81
    elemento_logico_pri            shift and go to state 64

state 296

    (145) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 316


state 297

    (146) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE . RPAREN RPAREN SEMICOLON

    RPAREN          shift and go to state 317


state 298

    (155) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE . RPAREN RPAREN SEMICOLON

    RPAREN          shift and go to state 318


state 299

    (149) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param . RPAREN RPAREN SEMICOLON

    RPAREN          shift and go to state 319


state 300

    (99) else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (9) expresion -> . funcion_declaracion
    (10) expresion -> . return
    (11) expresion -> . funcion_ejecucion
    (13) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (14) var_asignar -> . VARIABLE EQUALS funcion_ejecucion
    (12) var_declarar -> . VAR var_asignar
    (72) expresiones_de_salida -> . echo
    (73) expresiones_de_salida -> . print
    (74) expresiones_de_salida -> . var_dump
    (75) expresiones_de_salida -> . print_r
    (76) expresiones_de_salida -> . var_export
    (86) estructuras_de_control -> . if_structures
    (87) estructuras_de_control -> . estructuras_while
    (21) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (22) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (140) funciones_datos_estructurados -> . funciones_map
    (141) funciones_datos_estructurados -> . funciones_set
    (142) funciones_datos_estructurados -> . funciones_vector
    (108) funcion_declaracion -> . FUNCTION funcion_cabecera_declaracion funciones_cuerpo
    (109) funcion_declaracion -> . VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (110) funcion_declaracion -> . VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo
    (115) return -> . RETURN var_asignar_contenido SEMICOLON
    (116) funcion_ejecucion -> . FUNCTION_NAME LPAREN params RPAREN SEMICOLON
    (117) funcion_ejecucion -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (77) echo -> . ECHO params SEMICOLON
    (78) echo -> . ECHO params_points SEMICOLON
    (79) print -> . PRINT param SEMICOLON
    (81) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (80) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (82) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (88) if_structures -> . if
    (89) if_structures -> . if else
    (90) if_structures -> . if else_if else
    (91) if_structures -> . if else_if
    (92) if_structures -> . if_r ENDIF SEMICOLON
    (93) if_structures -> . if_r else_r ENDIF SEMICOLON
    (94) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (95) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (105) estructuras_while -> . while
    (143) funciones_map -> . key_map
    (144) funciones_map -> . diff_map
    (153) funciones_set -> . union_set
    (154) funciones_set -> . remove_set
    (147) funciones_vector -> . find_vector
    (148) funciones_vector -> . push_vector
    (96) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (101) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (106) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (107) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (145) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (146) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (155) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (156) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (157) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (158) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (149) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (150) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (151) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (152) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 12
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION_NAME   shift and go to state 26
    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VAR_DUMP        shift and go to state 29
    PRINT_R         shift and go to state 30
    VAR_EXPORT      shift and go to state 31
    IF              shift and go to state 41
    WHILE           shift and go to state 42

    expresiones                    shift and go to state 320
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    funcion_declaracion            shift and go to state 9
    return                         shift and go to state 10
    funcion_ejecucion              shift and go to state 11
    echo                           shift and go to state 14
    print                          shift and go to state 15
    var_dump                       shift and go to state 16
    print_r                        shift and go to state 17
    var_export                     shift and go to state 18
    if_structures                  shift and go to state 19
    estructuras_while              shift and go to state 20
    funciones_map                  shift and go to state 21
    funciones_set                  shift and go to state 22
    funciones_vector               shift and go to state 23
    if                             shift and go to state 32
    if_r                           shift and go to state 33
    while                          shift and go to state 34
    key_map                        shift and go to state 35
    diff_map                       shift and go to state 36
    union_set                      shift and go to state 37
    remove_set                     shift and go to state 38
    find_vector                    shift and go to state 39
    push_vector                    shift and go to state 40

state 301

    (98) else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 321


state 302

    (103) elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .

    ENDIF           reduce using rule 103 (elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)
    ELSE            reduce using rule 103 (elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)
    ELSEIF          reduce using rule 103 (elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)


state 303

    (96) if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    ELSE            reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FUNCTION        reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RETURN          reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FUNCTION_NAME   reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 96 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 304

    (106) while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    VARIABLE        reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FUNCTION        reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RETURN          reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FUNCTION_NAME   reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSE            reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 106 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 305

    (107) while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE . SEMICOLON

    SEMICOLON       shift and go to state 322


state 306

    (158) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 323


state 307

    (152) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 324


state 308

    (110) funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .

    VARIABLE        reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    VAR             reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    FUNCTION        reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    RETURN          reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    FUNCTION_NAME   reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ECHO            reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    PRINT           reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    VAR_DUMP        reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    PRINT_R         reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    VAR_EXPORT      reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    IF              reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    WHILE           reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    $end            reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    RCURLY          reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ENDIF           reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ELSE            reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ELSEIF          reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)
    ENDWHILE        reduce using rule 110 (funcion_declaracion -> VAR VARIABLE EQUALS FUNCTION LPAREN variables_por_comma RPAREN funciones_cuerpo .)


state 309

    (123) map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN .

    SEMICOLON       reduce using rule 123 (map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN .)


state 310

    (128) todos_clave_valor -> clave_valor COMMA todos_clave_valor .

    RBRACKET        reduce using rule 128 (todos_clave_valor -> clave_valor COMMA todos_clave_valor .)


state 311

    (125) clave_valor -> elemento_string ARROW param .

    COMMA           reduce using rule 125 (clave_valor -> elemento_string ARROW param .)
    RBRACKET        reduce using rule 125 (clave_valor -> elemento_string ARROW param .)


state 312

    (126) clave_valor -> NUMBER ARROW param .

    COMMA           reduce using rule 126 (clave_valor -> NUMBER ARROW param .)
    RBRACKET        reduce using rule 126 (clave_valor -> NUMBER ARROW param .)


state 313

    (129) vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN .

    SEMICOLON       reduce using rule 129 (vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN .)


state 314

    (138) set -> NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN .

    SEMICOLON       reduce using rule 138 (set -> NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN .)


state 315

    (68) params_unitype -> param COMMA params .

    RBRACKET        reduce using rule 68 (params_unitype -> param COMMA params .)


state 316

    (145) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 325


state 317

    (146) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 326


state 318

    (155) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 327


state 319

    (149) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 328


state 320

    (99) else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 329


state 321

    (98) else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    ELSE            reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FUNCTION        reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RETURN          reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FUNCTION_NAME   reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 98 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 322

    (107) while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .

    VARIABLE        reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    VAR             reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    FUNCTION        reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    RETURN          reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    FUNCTION_NAME   reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ECHO            reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    PRINT           reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    VAR_DUMP        reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    PRINT_R         reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    VAR_EXPORT      reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    IF              reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    WHILE           reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    $end            reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    RCURLY          reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ENDIF           reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ELSE            reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ELSEIF          reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ENDWHILE        reduce using rule 107 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)


state 323

    (158) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .

    VARIABLE        reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR             reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    RETURN          reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ECHO            reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    PRINT           reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    IF              reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    WHILE           reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    $end            reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    RCURLY          reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ENDIF           reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ELSE            reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 158 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)


state 324

    (152) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .

    VARIABLE        reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR             reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    RETURN          reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ECHO            reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    PRINT           reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    IF              reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    WHILE           reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    $end            reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    RCURLY          reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ENDIF           reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ELSE            reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 152 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)


state 325

    (145) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    RCURLY          reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ENDIF           reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 145 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)


state 326

    (146) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 330


state 327

    (155) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 331


state 328

    (149) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 332


state 329

    (99) else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    ELSE            reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FUNCTION        reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RETURN          reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FUNCTION_NAME   reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 99 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 330

    (146) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    RCURLY          reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ENDIF           reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 146 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)


state 331

    (155) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    RCURLY          reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ENDIF           reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 155 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)


state 332

    (149) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    RCURLY          reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ENDIF           reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 149 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 32 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 32 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 87 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 87 resolved as shift
WARNING: shift/reduce conflict for IDENTICAL in state 132 resolved as shift
WARNING: shift/reduce conflict for NOTIDENTICAL in state 132 resolved as shift
WARNING: shift/reduce conflict for EQUALSLOGICAL in state 132 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 132 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 132 resolved as shift
WARNING: shift/reduce conflict for ANDlOGICAL in state 132 resolved as shift
WARNING: shift/reduce conflict for ORLOGICAL in state 132 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 153 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 153 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 160 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 179 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 179 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 179 resolved as shift
WARNING: shift/reduce conflict for EXPONENTIAL in state 179 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 179 resolved as shift
WARNING: shift/reduce conflict for IDENTICAL in state 185 resolved as shift
WARNING: shift/reduce conflict for NOTIDENTICAL in state 185 resolved as shift
WARNING: shift/reduce conflict for EQUALSLOGICAL in state 185 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 185 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 185 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 185 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 185 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 185 resolved as shift
WARNING: shift/reduce conflict for ANDlOGICAL in state 185 resolved as shift
WARNING: shift/reduce conflict for ORLOGICAL in state 185 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 216 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 219 resolved as shift
WARNING: reduce/reduce conflict in state 53 resolved using rule (var_asignar_contenido -> VARIABLE)
WARNING: rejected rule (elemento_numerico -> VARIABLE) in state 53
WARNING: reduce/reduce conflict in state 53 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 53
WARNING: reduce/reduce conflict in state 53 resolved using rule (var_asignar_contenido -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 53
WARNING: reduce/reduce conflict in state 53 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 53
WARNING: reduce/reduce conflict in state 53 resolved using rule (var_asignar_contenido -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 53
WARNING: reduce/reduce conflict in state 77 resolved using rule (params -> param)
WARNING: rejected rule (params_points -> param) in state 77
WARNING: reduce/reduce conflict in state 78 resolved using rule (elemento_string -> VARIABLE)
WARNING: rejected rule (param -> VARIABLE) in state 78
WARNING: reduce/reduce conflict in state 78 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 78
WARNING: reduce/reduce conflict in state 78 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 78
WARNING: reduce/reduce conflict in state 130 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 130
WARNING: reduce/reduce conflict in state 130 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 130
WARNING: reduce/reduce conflict in state 134 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 134
WARNING: reduce/reduce conflict in state 134 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 134
WARNING: reduce/reduce conflict in state 150 resolved using rule (elemento_string -> VARIABLE)
WARNING: rejected rule (param -> VARIABLE) in state 150
WARNING: reduce/reduce conflict in state 150 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 150
WARNING: reduce/reduce conflict in state 150 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 150
WARNING: Rule (param -> VARIABLE) is never reduced
