Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AS
    BREAK
    CASE
    CATCH
    CLASS
    DO
    ENDFOR
    ENDFOREACH
    ENDSWITCH
    EXTENDS
    FINAL
    FOR
    FOREACH
    FUNCTION
    GLOBAL
    ID
    IMPLEMENTS
    INTERFACE
    OR
    PHPEND
    PHPSTART
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    STATIC
    SWITCH
    THROW
    XOR

Grammar

Rule 0     S' -> expresiones
Rule 1     expresiones -> expresion
Rule 2     expresiones -> expresion expresiones
Rule 3     expresion -> var_asignar
Rule 4     expresion -> var_declarar
Rule 5     expresion -> expresiones_de_salida
Rule 6     expresion -> estructuras_de_control
Rule 7     expresion -> var_plusminus
Rule 8     expresion -> funciones_datos_estructurados
Rule 9     var_declarar -> VAR var_asignar
Rule 10    var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON
Rule 11    var_asignar_contenido -> VARIABLE
Rule 12    var_asignar_contenido -> elemento_numerico
Rule 13    var_asignar_contenido -> elemento_string
Rule 14    var_asignar_contenido -> elemento_logico
Rule 15    var_asignar_contenido -> datos_estructurados
Rule 16    var_asignar_contenido -> funciones_ingreso_datos
Rule 17    var_plusminus -> VARIABLE PLUS PLUS SEMICOLON
Rule 18    var_plusminus -> VARIABLE MINUS MINUS SEMICOLON
Rule 19    elemento_numerico -> elemento_numerico operador elemento_numerico
Rule 20    elemento_numerico -> FLOAT
Rule 21    elemento_numerico -> NUMBER
Rule 22    elemento_numerico -> LPAREN elemento_numerico RPAREN
Rule 23    elemento_numerico -> VARIABLE
Rule 24    operador -> PLUS
Rule 25    operador -> MINUS
Rule 26    operador -> DIVIDE
Rule 27    operador -> EXPONENTIAL
Rule 28    operador -> TIMES
Rule 29    elemento_string -> STRING
Rule 30    elemento_string -> STRINGCC
Rule 31    elemento_string -> VARIABLE
Rule 32    elemento_logico -> elemento_logico_pri
Rule 33    elemento_logico -> elemento_logico comparador elemento_logico
Rule 34    elemento_logico -> NOTLOGICAL elemento_logico
Rule 35    elemento_logico -> LPAREN elemento_logico RPAREN
Rule 36    elemento_logico -> VARIABLE
Rule 37    elemento_logico -> elemento_numerico comparador elemento_numerico
Rule 38    elemento_logico -> elemento_string comparador elemento_string
Rule 39    elemento_logico_pri -> TRUE
Rule 40    elemento_logico_pri -> FALSE
Rule 41    comparador -> IDENTICAL
Rule 42    comparador -> NOTIDENTICAL
Rule 43    comparador -> EQUALSLOGICAL
Rule 44    comparador -> DIFFERENT
Rule 45    comparador -> GREATEREQUAL
Rule 46    comparador -> LESSEQUAL
Rule 47    comparador -> GREATERTHAN
Rule 48    comparador -> LESSTHAN
Rule 49    comparador -> ANDlOGICAL
Rule 50    comparador -> ORLOGICAL
Rule 51    param -> VARIABLE
Rule 52    param -> elemento_string
Rule 53    param -> elemento_numerico
Rule 54    param -> elemento_logico
Rule 55    params -> param
Rule 56    params -> param COMMA params
Rule 57    params_points -> param
Rule 58    params_points -> param POINT params_points
Rule 59    param_unictype -> VARIABLE
Rule 60    param_unictype -> elemento_string
Rule 61    param_unictype -> elemento_numerico
Rule 62    param_unictype -> elemento_logico
Rule 63    params_unitype -> param
Rule 64    params_unitype -> param COMMA params
Rule 65    optional_params -> param
Rule 66    optional_params -> 
Rule 67    optional_params -> param COMMA optional_params
Rule 68    expresiones_de_salida -> echo
Rule 69    expresiones_de_salida -> print
Rule 70    expresiones_de_salida -> var_dump
Rule 71    expresiones_de_salida -> print_r
Rule 72    expresiones_de_salida -> var_export
Rule 73    echo -> ECHO params SEMICOLON
Rule 74    echo -> ECHO params_points SEMICOLON
Rule 75    print -> PRINT param SEMICOLON
Rule 76    print_r -> PRINT_R LPAREN param RPAREN SEMICOLON
Rule 77    var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON
Rule 78    var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON
Rule 79    funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN
Rule 80    funciones_ingreso_datos -> READLINE LPAREN RPAREN
Rule 81    funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN
Rule 82    estructuras_de_control -> if_structures
Rule 83    estructuras_de_control -> estructuras_while
Rule 84    if_structures -> if
Rule 85    if_structures -> if else
Rule 86    if_structures -> if else_if else
Rule 87    if_structures -> if else_if
Rule 88    if_structures -> if_r ENDIF SEMICOLON
Rule 89    if_structures -> if_r else_r ENDIF SEMICOLON
Rule 90    if_structures -> if_r elseif_r else_r ENDIF SEMICOLON
Rule 91    if_structures -> if_r elseif_r ENDIF SEMICOLON
Rule 92    if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 93    else -> ELSE LCURLY expresiones RCURLY
Rule 94    else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 95    else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 96    else_if -> else_if else_if
Rule 97    if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
Rule 98    else_r -> ELSE DOUBLEPOINT expresiones
Rule 99    elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
Rule 100   elseif_r -> elseif_r elseif_r
Rule 101   estructuras_while -> while
Rule 102   while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 103   while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
Rule 104   datos_estructurados -> map
Rule 105   datos_estructurados -> vector
Rule 106   datos_estructurados -> set
Rule 107   map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
Rule 108   map -> NEW MAP LPAREN RPAREN
Rule 109   clave_valor -> elemento_string ARROW param
Rule 110   clave_valor -> NUMBER ARROW param
Rule 111   todos_clave_valor -> clave_valor
Rule 112   todos_clave_valor -> clave_valor COMMA todos_clave_valor
Rule 113   vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN
Rule 114   vector -> NEW VECTOR LPAREN RPAREN
Rule 115   datos -> FLOAT
Rule 116   datos -> NUMBER
Rule 117   datos -> STRING
Rule 118   datos -> STRINGCC
Rule 119   datos -> elemento_logico_pri
Rule 120   llenar -> datos
Rule 121   llenar -> datos COMMA llenar
Rule 122   set -> NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN
Rule 123   set -> NEW SET LPAREN RPAREN
Rule 124   funciones_datos_estructurados -> funciones_map
Rule 125   funciones_datos_estructurados -> funciones_set
Rule 126   funciones_datos_estructurados -> funciones_vector
Rule 127   funciones_map -> key_map
Rule 128   funciones_map -> diff_map
Rule 129   key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
Rule 130   diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
Rule 131   funciones_vector -> find_vector
Rule 132   funciones_vector -> push_vector
Rule 133   find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
Rule 134   push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
Rule 135   push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
Rule 136   push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
Rule 137   funciones_set -> union_set
Rule 138   funciones_set -> remove_set
Rule 139   union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
Rule 140   remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
Rule 141   remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
Rule 142   remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

Terminals, with rules where they appear

                     : 66
AND                  : 
ANDlOGICAL           : 49
ARROW                : 109 110
AS                   : 
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
COMMA                : 56 64 67 79 112 121
DIFF                 : 130
DIFFERENT            : 44
DIVIDE               : 26
DO                   : 
DOUBLEPOINT          : 97 98 99 103
ECHO                 : 73 74
ELSE                 : 93 95 98
ELSEIF               : 94 99
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 88 89 90 91
ENDSWITCH            : 
ENDWHILE             : 103
EQUALS               : 10
EQUALSLOGICAL        : 43
EXPONENTIAL          : 27
EXTENDS              : 
FALSE                : 40
FINAL                : 
FIND                 : 133
FLOAT                : 20 115
FOR                  : 
FOREACH              : 
FUNCTION             : 
GLOBAL               : 
GREATEREQUAL         : 45
GREATERTHAN          : 47
ID                   : 
IDENTICAL            : 41
IF                   : 92 95 97
IMPLEMENTS           : 
INTERFACE            : 
KEYS                 : 129
LBRACKET             : 107 113 122 136 142
LCURLY               : 92 93 94 95 102
LESSEQUAL            : 46
LESSTHAN             : 48
LPAREN               : 22 35 76 77 78 79 80 81 92 94 95 97 99 102 103 107 108 113 114 122 123 129 129 130 130 133 133 134 135 136 139 139 140 141 142
MAP                  : 107 108
MINUS                : 18 18 25
NEW                  : 107 108 113 114 122 123
NOTIDENTICAL         : 42
NOTLOGICAL           : 34
NUMBER               : 21 110 116
OR                   : 
ORLOGICAL            : 50
PHPEND               : 
PHPSTART             : 
PLUS                 : 17 17 24
POINT                : 58
PRINT                : 75
PRINT_R              : 76
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 134 135 136
RBRACKET             : 107 113 122 136 142
RCURLY               : 92 93 94 95 102
READLINE             : 80 81
REMOVE               : 140 141 142
RETURN               : 
RPAREN               : 22 35 76 77 78 79 80 81 92 94 95 97 99 102 103 107 108 113 114 122 123 129 129 130 130 133 133 134 135 136 139 139 140 141 142
SEMICOLON            : 10 17 18 73 74 75 76 77 78 88 89 90 91 103 129 130 133 134 135 136 139 140 141 142
SET                  : 122 123
SIMPLEARROW          : 129 130 133 134 135 136 139 140 141 142
STATIC               : 
STRING               : 29 117
STRINGCC             : 30 118
SWITCH               : 
THROW                : 
TIMES                : 28
TRUE                 : 39
UNION                : 139
VAR                  : 9
VARIABLE             : 10 11 17 18 23 31 36 51 59 129 130 130 133 134 135 136 139 139 140 141 142
VAR_DUMP             : 77 129 130 133 139
VAR_EXPORT           : 78 79
VECTOR               : 113 114
WHILE                : 102 103
XOR                  : 
error                : 

Nonterminals, with rules where they appear

clave_valor          : 111 112
comparador           : 33 37 38
datos                : 120 121
datos_estructurados  : 15
diff_map             : 128
echo                 : 68
elemento_logico      : 14 33 33 34 35 54 62 79 92 94 95 97 99 102 103
elemento_logico_pri  : 32 119
elemento_numerico    : 12 19 19 22 37 37 53 61
elemento_string      : 13 38 38 52 60 81 109
else                 : 85 86
else_if              : 86 87 96 96
else_r               : 89 90
elseif_r             : 90 91 100 100
estructuras_de_control : 6
estructuras_while    : 83
expresion            : 1 2
expresiones          : 2 92 93 94 95 97 98 99 102 103 0
expresiones_de_salida : 5
find_vector          : 131
funciones_datos_estructurados : 8
funciones_ingreso_datos : 16
funciones_map        : 124
funciones_set        : 125
funciones_vector     : 126
if                   : 84 85 86 87
if_r                 : 88 89 90 91
if_structures        : 82
key_map              : 127
llenar               : 121
map                  : 104
operador             : 19
optional_params      : 67
param                : 55 56 57 58 63 64 65 67 75 76 77 78 79 109 110 133 134 140
param_unictype       : 
params               : 56 64 73 113 135 136 141 142
params_points        : 58 74
params_unitype       : 122
print                : 69
print_r              : 71
push_vector          : 132
remove_set           : 138
set                  : 106
todos_clave_valor    : 107 112
union_set            : 137
var_asignar          : 3 9
var_asignar_contenido : 10
var_declarar         : 4
var_dump             : 70
var_export           : 72
var_plusminus        : 7
vector               : 105
while                : 101

Parsing method: LALR

state 0

    (0) S' -> . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 1
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 1

    (0) S' -> expresiones .



state 2

    (1) expresiones -> expresion .
    (2) expresiones -> expresion . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    $end            reduce using rule 1 (expresiones -> expresion .)
    RCURLY          reduce using rule 1 (expresiones -> expresion .)
    ENDIF           reduce using rule 1 (expresiones -> expresion .)
    ELSE            reduce using rule 1 (expresiones -> expresion .)
    ELSEIF          reduce using rule 1 (expresiones -> expresion .)
    ENDWHILE        reduce using rule 1 (expresiones -> expresion .)
    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresion                      shift and go to state 2
    expresiones                    shift and go to state 37
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 3

    (3) expresion -> var_asignar .

    VARIABLE        reduce using rule 3 (expresion -> var_asignar .)
    VAR             reduce using rule 3 (expresion -> var_asignar .)
    ECHO            reduce using rule 3 (expresion -> var_asignar .)
    PRINT           reduce using rule 3 (expresion -> var_asignar .)
    VAR_DUMP        reduce using rule 3 (expresion -> var_asignar .)
    PRINT_R         reduce using rule 3 (expresion -> var_asignar .)
    VAR_EXPORT      reduce using rule 3 (expresion -> var_asignar .)
    IF              reduce using rule 3 (expresion -> var_asignar .)
    WHILE           reduce using rule 3 (expresion -> var_asignar .)
    $end            reduce using rule 3 (expresion -> var_asignar .)
    RCURLY          reduce using rule 3 (expresion -> var_asignar .)
    ENDIF           reduce using rule 3 (expresion -> var_asignar .)
    ELSE            reduce using rule 3 (expresion -> var_asignar .)
    ELSEIF          reduce using rule 3 (expresion -> var_asignar .)
    ENDWHILE        reduce using rule 3 (expresion -> var_asignar .)


state 4

    (4) expresion -> var_declarar .

    VARIABLE        reduce using rule 4 (expresion -> var_declarar .)
    VAR             reduce using rule 4 (expresion -> var_declarar .)
    ECHO            reduce using rule 4 (expresion -> var_declarar .)
    PRINT           reduce using rule 4 (expresion -> var_declarar .)
    VAR_DUMP        reduce using rule 4 (expresion -> var_declarar .)
    PRINT_R         reduce using rule 4 (expresion -> var_declarar .)
    VAR_EXPORT      reduce using rule 4 (expresion -> var_declarar .)
    IF              reduce using rule 4 (expresion -> var_declarar .)
    WHILE           reduce using rule 4 (expresion -> var_declarar .)
    $end            reduce using rule 4 (expresion -> var_declarar .)
    RCURLY          reduce using rule 4 (expresion -> var_declarar .)
    ENDIF           reduce using rule 4 (expresion -> var_declarar .)
    ELSE            reduce using rule 4 (expresion -> var_declarar .)
    ELSEIF          reduce using rule 4 (expresion -> var_declarar .)
    ENDWHILE        reduce using rule 4 (expresion -> var_declarar .)


state 5

    (5) expresion -> expresiones_de_salida .

    VARIABLE        reduce using rule 5 (expresion -> expresiones_de_salida .)
    VAR             reduce using rule 5 (expresion -> expresiones_de_salida .)
    ECHO            reduce using rule 5 (expresion -> expresiones_de_salida .)
    PRINT           reduce using rule 5 (expresion -> expresiones_de_salida .)
    VAR_DUMP        reduce using rule 5 (expresion -> expresiones_de_salida .)
    PRINT_R         reduce using rule 5 (expresion -> expresiones_de_salida .)
    VAR_EXPORT      reduce using rule 5 (expresion -> expresiones_de_salida .)
    IF              reduce using rule 5 (expresion -> expresiones_de_salida .)
    WHILE           reduce using rule 5 (expresion -> expresiones_de_salida .)
    $end            reduce using rule 5 (expresion -> expresiones_de_salida .)
    RCURLY          reduce using rule 5 (expresion -> expresiones_de_salida .)
    ENDIF           reduce using rule 5 (expresion -> expresiones_de_salida .)
    ELSE            reduce using rule 5 (expresion -> expresiones_de_salida .)
    ELSEIF          reduce using rule 5 (expresion -> expresiones_de_salida .)
    ENDWHILE        reduce using rule 5 (expresion -> expresiones_de_salida .)


state 6

    (6) expresion -> estructuras_de_control .

    VARIABLE        reduce using rule 6 (expresion -> estructuras_de_control .)
    VAR             reduce using rule 6 (expresion -> estructuras_de_control .)
    ECHO            reduce using rule 6 (expresion -> estructuras_de_control .)
    PRINT           reduce using rule 6 (expresion -> estructuras_de_control .)
    VAR_DUMP        reduce using rule 6 (expresion -> estructuras_de_control .)
    PRINT_R         reduce using rule 6 (expresion -> estructuras_de_control .)
    VAR_EXPORT      reduce using rule 6 (expresion -> estructuras_de_control .)
    IF              reduce using rule 6 (expresion -> estructuras_de_control .)
    WHILE           reduce using rule 6 (expresion -> estructuras_de_control .)
    $end            reduce using rule 6 (expresion -> estructuras_de_control .)
    RCURLY          reduce using rule 6 (expresion -> estructuras_de_control .)
    ENDIF           reduce using rule 6 (expresion -> estructuras_de_control .)
    ELSE            reduce using rule 6 (expresion -> estructuras_de_control .)
    ELSEIF          reduce using rule 6 (expresion -> estructuras_de_control .)
    ENDWHILE        reduce using rule 6 (expresion -> estructuras_de_control .)


state 7

    (7) expresion -> var_plusminus .

    VARIABLE        reduce using rule 7 (expresion -> var_plusminus .)
    VAR             reduce using rule 7 (expresion -> var_plusminus .)
    ECHO            reduce using rule 7 (expresion -> var_plusminus .)
    PRINT           reduce using rule 7 (expresion -> var_plusminus .)
    VAR_DUMP        reduce using rule 7 (expresion -> var_plusminus .)
    PRINT_R         reduce using rule 7 (expresion -> var_plusminus .)
    VAR_EXPORT      reduce using rule 7 (expresion -> var_plusminus .)
    IF              reduce using rule 7 (expresion -> var_plusminus .)
    WHILE           reduce using rule 7 (expresion -> var_plusminus .)
    $end            reduce using rule 7 (expresion -> var_plusminus .)
    RCURLY          reduce using rule 7 (expresion -> var_plusminus .)
    ENDIF           reduce using rule 7 (expresion -> var_plusminus .)
    ELSE            reduce using rule 7 (expresion -> var_plusminus .)
    ELSEIF          reduce using rule 7 (expresion -> var_plusminus .)
    ENDWHILE        reduce using rule 7 (expresion -> var_plusminus .)


state 8

    (8) expresion -> funciones_datos_estructurados .

    VARIABLE        reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    VAR             reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ECHO            reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    PRINT           reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    VAR_DUMP        reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    PRINT_R         reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    VAR_EXPORT      reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    IF              reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    WHILE           reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    $end            reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    RCURLY          reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ENDIF           reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ELSE            reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ELSEIF          reduce using rule 8 (expresion -> funciones_datos_estructurados .)
    ENDWHILE        reduce using rule 8 (expresion -> funciones_datos_estructurados .)


state 9

    (10) var_asignar -> VARIABLE . EQUALS var_asignar_contenido SEMICOLON
    (17) var_plusminus -> VARIABLE . PLUS PLUS SEMICOLON
    (18) var_plusminus -> VARIABLE . MINUS MINUS SEMICOLON
    (140) remove_set -> VARIABLE . SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> VARIABLE . SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> VARIABLE . SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (134) push_vector -> VARIABLE . SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> VARIABLE . SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> VARIABLE . SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    EQUALS          shift and go to state 38
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    SIMPLEARROW     shift and go to state 41


state 10

    (9) var_declarar -> VAR . var_asignar
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON

    VARIABLE        shift and go to state 43

    var_asignar                    shift and go to state 42

state 11

    (68) expresiones_de_salida -> echo .

    VARIABLE        reduce using rule 68 (expresiones_de_salida -> echo .)
    VAR             reduce using rule 68 (expresiones_de_salida -> echo .)
    ECHO            reduce using rule 68 (expresiones_de_salida -> echo .)
    PRINT           reduce using rule 68 (expresiones_de_salida -> echo .)
    VAR_DUMP        reduce using rule 68 (expresiones_de_salida -> echo .)
    PRINT_R         reduce using rule 68 (expresiones_de_salida -> echo .)
    VAR_EXPORT      reduce using rule 68 (expresiones_de_salida -> echo .)
    IF              reduce using rule 68 (expresiones_de_salida -> echo .)
    WHILE           reduce using rule 68 (expresiones_de_salida -> echo .)
    $end            reduce using rule 68 (expresiones_de_salida -> echo .)
    RCURLY          reduce using rule 68 (expresiones_de_salida -> echo .)
    ENDIF           reduce using rule 68 (expresiones_de_salida -> echo .)
    ELSE            reduce using rule 68 (expresiones_de_salida -> echo .)
    ELSEIF          reduce using rule 68 (expresiones_de_salida -> echo .)
    ENDWHILE        reduce using rule 68 (expresiones_de_salida -> echo .)


state 12

    (69) expresiones_de_salida -> print .

    VARIABLE        reduce using rule 69 (expresiones_de_salida -> print .)
    VAR             reduce using rule 69 (expresiones_de_salida -> print .)
    ECHO            reduce using rule 69 (expresiones_de_salida -> print .)
    PRINT           reduce using rule 69 (expresiones_de_salida -> print .)
    VAR_DUMP        reduce using rule 69 (expresiones_de_salida -> print .)
    PRINT_R         reduce using rule 69 (expresiones_de_salida -> print .)
    VAR_EXPORT      reduce using rule 69 (expresiones_de_salida -> print .)
    IF              reduce using rule 69 (expresiones_de_salida -> print .)
    WHILE           reduce using rule 69 (expresiones_de_salida -> print .)
    $end            reduce using rule 69 (expresiones_de_salida -> print .)
    RCURLY          reduce using rule 69 (expresiones_de_salida -> print .)
    ENDIF           reduce using rule 69 (expresiones_de_salida -> print .)
    ELSE            reduce using rule 69 (expresiones_de_salida -> print .)
    ELSEIF          reduce using rule 69 (expresiones_de_salida -> print .)
    ENDWHILE        reduce using rule 69 (expresiones_de_salida -> print .)


state 13

    (70) expresiones_de_salida -> var_dump .

    VARIABLE        reduce using rule 70 (expresiones_de_salida -> var_dump .)
    VAR             reduce using rule 70 (expresiones_de_salida -> var_dump .)
    ECHO            reduce using rule 70 (expresiones_de_salida -> var_dump .)
    PRINT           reduce using rule 70 (expresiones_de_salida -> var_dump .)
    VAR_DUMP        reduce using rule 70 (expresiones_de_salida -> var_dump .)
    PRINT_R         reduce using rule 70 (expresiones_de_salida -> var_dump .)
    VAR_EXPORT      reduce using rule 70 (expresiones_de_salida -> var_dump .)
    IF              reduce using rule 70 (expresiones_de_salida -> var_dump .)
    WHILE           reduce using rule 70 (expresiones_de_salida -> var_dump .)
    $end            reduce using rule 70 (expresiones_de_salida -> var_dump .)
    RCURLY          reduce using rule 70 (expresiones_de_salida -> var_dump .)
    ENDIF           reduce using rule 70 (expresiones_de_salida -> var_dump .)
    ELSE            reduce using rule 70 (expresiones_de_salida -> var_dump .)
    ELSEIF          reduce using rule 70 (expresiones_de_salida -> var_dump .)
    ENDWHILE        reduce using rule 70 (expresiones_de_salida -> var_dump .)


state 14

    (71) expresiones_de_salida -> print_r .

    VARIABLE        reduce using rule 71 (expresiones_de_salida -> print_r .)
    VAR             reduce using rule 71 (expresiones_de_salida -> print_r .)
    ECHO            reduce using rule 71 (expresiones_de_salida -> print_r .)
    PRINT           reduce using rule 71 (expresiones_de_salida -> print_r .)
    VAR_DUMP        reduce using rule 71 (expresiones_de_salida -> print_r .)
    PRINT_R         reduce using rule 71 (expresiones_de_salida -> print_r .)
    VAR_EXPORT      reduce using rule 71 (expresiones_de_salida -> print_r .)
    IF              reduce using rule 71 (expresiones_de_salida -> print_r .)
    WHILE           reduce using rule 71 (expresiones_de_salida -> print_r .)
    $end            reduce using rule 71 (expresiones_de_salida -> print_r .)
    RCURLY          reduce using rule 71 (expresiones_de_salida -> print_r .)
    ENDIF           reduce using rule 71 (expresiones_de_salida -> print_r .)
    ELSE            reduce using rule 71 (expresiones_de_salida -> print_r .)
    ELSEIF          reduce using rule 71 (expresiones_de_salida -> print_r .)
    ENDWHILE        reduce using rule 71 (expresiones_de_salida -> print_r .)


state 15

    (72) expresiones_de_salida -> var_export .

    VARIABLE        reduce using rule 72 (expresiones_de_salida -> var_export .)
    VAR             reduce using rule 72 (expresiones_de_salida -> var_export .)
    ECHO            reduce using rule 72 (expresiones_de_salida -> var_export .)
    PRINT           reduce using rule 72 (expresiones_de_salida -> var_export .)
    VAR_DUMP        reduce using rule 72 (expresiones_de_salida -> var_export .)
    PRINT_R         reduce using rule 72 (expresiones_de_salida -> var_export .)
    VAR_EXPORT      reduce using rule 72 (expresiones_de_salida -> var_export .)
    IF              reduce using rule 72 (expresiones_de_salida -> var_export .)
    WHILE           reduce using rule 72 (expresiones_de_salida -> var_export .)
    $end            reduce using rule 72 (expresiones_de_salida -> var_export .)
    RCURLY          reduce using rule 72 (expresiones_de_salida -> var_export .)
    ENDIF           reduce using rule 72 (expresiones_de_salida -> var_export .)
    ELSE            reduce using rule 72 (expresiones_de_salida -> var_export .)
    ELSEIF          reduce using rule 72 (expresiones_de_salida -> var_export .)
    ENDWHILE        reduce using rule 72 (expresiones_de_salida -> var_export .)


state 16

    (82) estructuras_de_control -> if_structures .

    VARIABLE        reduce using rule 82 (estructuras_de_control -> if_structures .)
    VAR             reduce using rule 82 (estructuras_de_control -> if_structures .)
    ECHO            reduce using rule 82 (estructuras_de_control -> if_structures .)
    PRINT           reduce using rule 82 (estructuras_de_control -> if_structures .)
    VAR_DUMP        reduce using rule 82 (estructuras_de_control -> if_structures .)
    PRINT_R         reduce using rule 82 (estructuras_de_control -> if_structures .)
    VAR_EXPORT      reduce using rule 82 (estructuras_de_control -> if_structures .)
    IF              reduce using rule 82 (estructuras_de_control -> if_structures .)
    WHILE           reduce using rule 82 (estructuras_de_control -> if_structures .)
    $end            reduce using rule 82 (estructuras_de_control -> if_structures .)
    RCURLY          reduce using rule 82 (estructuras_de_control -> if_structures .)
    ENDIF           reduce using rule 82 (estructuras_de_control -> if_structures .)
    ELSE            reduce using rule 82 (estructuras_de_control -> if_structures .)
    ELSEIF          reduce using rule 82 (estructuras_de_control -> if_structures .)
    ENDWHILE        reduce using rule 82 (estructuras_de_control -> if_structures .)


state 17

    (83) estructuras_de_control -> estructuras_while .

    VARIABLE        reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    VAR             reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    ECHO            reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    PRINT           reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    VAR_DUMP        reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    PRINT_R         reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    VAR_EXPORT      reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    IF              reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    WHILE           reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    $end            reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    RCURLY          reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    ENDIF           reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    ELSE            reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    ELSEIF          reduce using rule 83 (estructuras_de_control -> estructuras_while .)
    ENDWHILE        reduce using rule 83 (estructuras_de_control -> estructuras_while .)


state 18

    (124) funciones_datos_estructurados -> funciones_map .

    VARIABLE        reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    VAR             reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    ECHO            reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    PRINT           reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    VAR_DUMP        reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    PRINT_R         reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    VAR_EXPORT      reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    IF              reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    WHILE           reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    $end            reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    RCURLY          reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    ENDIF           reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    ELSE            reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    ELSEIF          reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)
    ENDWHILE        reduce using rule 124 (funciones_datos_estructurados -> funciones_map .)


state 19

    (125) funciones_datos_estructurados -> funciones_set .

    VARIABLE        reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    VAR             reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    ECHO            reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    PRINT           reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    VAR_DUMP        reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    PRINT_R         reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    VAR_EXPORT      reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    IF              reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    WHILE           reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    $end            reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    RCURLY          reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    ENDIF           reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    ELSE            reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    ELSEIF          reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)
    ENDWHILE        reduce using rule 125 (funciones_datos_estructurados -> funciones_set .)


state 20

    (126) funciones_datos_estructurados -> funciones_vector .

    VARIABLE        reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    VAR             reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    ECHO            reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    PRINT           reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    VAR_DUMP        reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    PRINT_R         reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    VAR_EXPORT      reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    IF              reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    WHILE           reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    $end            reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    RCURLY          reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    ENDIF           reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    ELSE            reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    ELSEIF          reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)
    ENDWHILE        reduce using rule 126 (funciones_datos_estructurados -> funciones_vector .)


state 21

    (73) echo -> ECHO . params SEMICOLON
    (74) echo -> ECHO . params_points SEMICOLON
    (55) params -> . param
    (56) params -> . param COMMA params
    (57) params_points -> . param
    (58) params_points -> . param POINT params_points
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    params                         shift and go to state 44
    params_points                  shift and go to state 45
    param                          shift and go to state 46
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 22

    (75) print -> PRINT . param SEMICOLON
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 60
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 23

    (77) var_dump -> VAR_DUMP . LPAREN param RPAREN SEMICOLON
    (129) key_map -> VAR_DUMP . LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> VAR_DUMP . LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> VAR_DUMP . LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (133) find_vector -> VAR_DUMP . LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 61


state 24

    (76) print_r -> PRINT_R . LPAREN param RPAREN SEMICOLON

    LPAREN          shift and go to state 62


state 25

    (78) var_export -> VAR_EXPORT . LPAREN param RPAREN SEMICOLON

    LPAREN          shift and go to state 63


state 26

    (84) if_structures -> if .
    (85) if_structures -> if . else
    (86) if_structures -> if . else_if else
    (87) if_structures -> if . else_if
    (93) else -> . ELSE LCURLY expresiones RCURLY
    (94) else_if -> . ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (95) else_if -> . ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (96) else_if -> . else_if else_if

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    VARIABLE        reduce using rule 84 (if_structures -> if .)
    VAR             reduce using rule 84 (if_structures -> if .)
    ECHO            reduce using rule 84 (if_structures -> if .)
    PRINT           reduce using rule 84 (if_structures -> if .)
    VAR_DUMP        reduce using rule 84 (if_structures -> if .)
    PRINT_R         reduce using rule 84 (if_structures -> if .)
    VAR_EXPORT      reduce using rule 84 (if_structures -> if .)
    IF              reduce using rule 84 (if_structures -> if .)
    WHILE           reduce using rule 84 (if_structures -> if .)
    $end            reduce using rule 84 (if_structures -> if .)
    RCURLY          reduce using rule 84 (if_structures -> if .)
    ENDIF           reduce using rule 84 (if_structures -> if .)
    ENDWHILE        reduce using rule 84 (if_structures -> if .)
    ELSE            shift and go to state 66
    ELSEIF          shift and go to state 67

  ! ELSE            [ reduce using rule 84 (if_structures -> if .) ]
  ! ELSEIF          [ reduce using rule 84 (if_structures -> if .) ]

    else                           shift and go to state 64
    else_if                        shift and go to state 65

state 27

    (88) if_structures -> if_r . ENDIF SEMICOLON
    (89) if_structures -> if_r . else_r ENDIF SEMICOLON
    (90) if_structures -> if_r . elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> if_r . elseif_r ENDIF SEMICOLON
    (98) else_r -> . ELSE DOUBLEPOINT expresiones
    (99) elseif_r -> . ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (100) elseif_r -> . elseif_r elseif_r

    ENDIF           shift and go to state 68
    ELSE            shift and go to state 71
    ELSEIF          shift and go to state 72

    else_r                         shift and go to state 69
    elseif_r                       shift and go to state 70

state 28

    (101) estructuras_while -> while .

    VARIABLE        reduce using rule 101 (estructuras_while -> while .)
    VAR             reduce using rule 101 (estructuras_while -> while .)
    ECHO            reduce using rule 101 (estructuras_while -> while .)
    PRINT           reduce using rule 101 (estructuras_while -> while .)
    VAR_DUMP        reduce using rule 101 (estructuras_while -> while .)
    PRINT_R         reduce using rule 101 (estructuras_while -> while .)
    VAR_EXPORT      reduce using rule 101 (estructuras_while -> while .)
    IF              reduce using rule 101 (estructuras_while -> while .)
    WHILE           reduce using rule 101 (estructuras_while -> while .)
    $end            reduce using rule 101 (estructuras_while -> while .)
    RCURLY          reduce using rule 101 (estructuras_while -> while .)
    ENDIF           reduce using rule 101 (estructuras_while -> while .)
    ELSE            reduce using rule 101 (estructuras_while -> while .)
    ELSEIF          reduce using rule 101 (estructuras_while -> while .)
    ENDWHILE        reduce using rule 101 (estructuras_while -> while .)


state 29

    (127) funciones_map -> key_map .

    VARIABLE        reduce using rule 127 (funciones_map -> key_map .)
    VAR             reduce using rule 127 (funciones_map -> key_map .)
    ECHO            reduce using rule 127 (funciones_map -> key_map .)
    PRINT           reduce using rule 127 (funciones_map -> key_map .)
    VAR_DUMP        reduce using rule 127 (funciones_map -> key_map .)
    PRINT_R         reduce using rule 127 (funciones_map -> key_map .)
    VAR_EXPORT      reduce using rule 127 (funciones_map -> key_map .)
    IF              reduce using rule 127 (funciones_map -> key_map .)
    WHILE           reduce using rule 127 (funciones_map -> key_map .)
    $end            reduce using rule 127 (funciones_map -> key_map .)
    RCURLY          reduce using rule 127 (funciones_map -> key_map .)
    ENDIF           reduce using rule 127 (funciones_map -> key_map .)
    ELSE            reduce using rule 127 (funciones_map -> key_map .)
    ELSEIF          reduce using rule 127 (funciones_map -> key_map .)
    ENDWHILE        reduce using rule 127 (funciones_map -> key_map .)


state 30

    (128) funciones_map -> diff_map .

    VARIABLE        reduce using rule 128 (funciones_map -> diff_map .)
    VAR             reduce using rule 128 (funciones_map -> diff_map .)
    ECHO            reduce using rule 128 (funciones_map -> diff_map .)
    PRINT           reduce using rule 128 (funciones_map -> diff_map .)
    VAR_DUMP        reduce using rule 128 (funciones_map -> diff_map .)
    PRINT_R         reduce using rule 128 (funciones_map -> diff_map .)
    VAR_EXPORT      reduce using rule 128 (funciones_map -> diff_map .)
    IF              reduce using rule 128 (funciones_map -> diff_map .)
    WHILE           reduce using rule 128 (funciones_map -> diff_map .)
    $end            reduce using rule 128 (funciones_map -> diff_map .)
    RCURLY          reduce using rule 128 (funciones_map -> diff_map .)
    ENDIF           reduce using rule 128 (funciones_map -> diff_map .)
    ELSE            reduce using rule 128 (funciones_map -> diff_map .)
    ELSEIF          reduce using rule 128 (funciones_map -> diff_map .)
    ENDWHILE        reduce using rule 128 (funciones_map -> diff_map .)


state 31

    (137) funciones_set -> union_set .

    VARIABLE        reduce using rule 137 (funciones_set -> union_set .)
    VAR             reduce using rule 137 (funciones_set -> union_set .)
    ECHO            reduce using rule 137 (funciones_set -> union_set .)
    PRINT           reduce using rule 137 (funciones_set -> union_set .)
    VAR_DUMP        reduce using rule 137 (funciones_set -> union_set .)
    PRINT_R         reduce using rule 137 (funciones_set -> union_set .)
    VAR_EXPORT      reduce using rule 137 (funciones_set -> union_set .)
    IF              reduce using rule 137 (funciones_set -> union_set .)
    WHILE           reduce using rule 137 (funciones_set -> union_set .)
    $end            reduce using rule 137 (funciones_set -> union_set .)
    RCURLY          reduce using rule 137 (funciones_set -> union_set .)
    ENDIF           reduce using rule 137 (funciones_set -> union_set .)
    ELSE            reduce using rule 137 (funciones_set -> union_set .)
    ELSEIF          reduce using rule 137 (funciones_set -> union_set .)
    ENDWHILE        reduce using rule 137 (funciones_set -> union_set .)


state 32

    (138) funciones_set -> remove_set .

    VARIABLE        reduce using rule 138 (funciones_set -> remove_set .)
    VAR             reduce using rule 138 (funciones_set -> remove_set .)
    ECHO            reduce using rule 138 (funciones_set -> remove_set .)
    PRINT           reduce using rule 138 (funciones_set -> remove_set .)
    VAR_DUMP        reduce using rule 138 (funciones_set -> remove_set .)
    PRINT_R         reduce using rule 138 (funciones_set -> remove_set .)
    VAR_EXPORT      reduce using rule 138 (funciones_set -> remove_set .)
    IF              reduce using rule 138 (funciones_set -> remove_set .)
    WHILE           reduce using rule 138 (funciones_set -> remove_set .)
    $end            reduce using rule 138 (funciones_set -> remove_set .)
    RCURLY          reduce using rule 138 (funciones_set -> remove_set .)
    ENDIF           reduce using rule 138 (funciones_set -> remove_set .)
    ELSE            reduce using rule 138 (funciones_set -> remove_set .)
    ELSEIF          reduce using rule 138 (funciones_set -> remove_set .)
    ENDWHILE        reduce using rule 138 (funciones_set -> remove_set .)


state 33

    (131) funciones_vector -> find_vector .

    VARIABLE        reduce using rule 131 (funciones_vector -> find_vector .)
    VAR             reduce using rule 131 (funciones_vector -> find_vector .)
    ECHO            reduce using rule 131 (funciones_vector -> find_vector .)
    PRINT           reduce using rule 131 (funciones_vector -> find_vector .)
    VAR_DUMP        reduce using rule 131 (funciones_vector -> find_vector .)
    PRINT_R         reduce using rule 131 (funciones_vector -> find_vector .)
    VAR_EXPORT      reduce using rule 131 (funciones_vector -> find_vector .)
    IF              reduce using rule 131 (funciones_vector -> find_vector .)
    WHILE           reduce using rule 131 (funciones_vector -> find_vector .)
    $end            reduce using rule 131 (funciones_vector -> find_vector .)
    RCURLY          reduce using rule 131 (funciones_vector -> find_vector .)
    ENDIF           reduce using rule 131 (funciones_vector -> find_vector .)
    ELSE            reduce using rule 131 (funciones_vector -> find_vector .)
    ELSEIF          reduce using rule 131 (funciones_vector -> find_vector .)
    ENDWHILE        reduce using rule 131 (funciones_vector -> find_vector .)


state 34

    (132) funciones_vector -> push_vector .

    VARIABLE        reduce using rule 132 (funciones_vector -> push_vector .)
    VAR             reduce using rule 132 (funciones_vector -> push_vector .)
    ECHO            reduce using rule 132 (funciones_vector -> push_vector .)
    PRINT           reduce using rule 132 (funciones_vector -> push_vector .)
    VAR_DUMP        reduce using rule 132 (funciones_vector -> push_vector .)
    PRINT_R         reduce using rule 132 (funciones_vector -> push_vector .)
    VAR_EXPORT      reduce using rule 132 (funciones_vector -> push_vector .)
    IF              reduce using rule 132 (funciones_vector -> push_vector .)
    WHILE           reduce using rule 132 (funciones_vector -> push_vector .)
    $end            reduce using rule 132 (funciones_vector -> push_vector .)
    RCURLY          reduce using rule 132 (funciones_vector -> push_vector .)
    ENDIF           reduce using rule 132 (funciones_vector -> push_vector .)
    ELSE            reduce using rule 132 (funciones_vector -> push_vector .)
    ELSEIF          reduce using rule 132 (funciones_vector -> push_vector .)
    ENDWHILE        reduce using rule 132 (funciones_vector -> push_vector .)


state 35

    (92) if -> IF . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> IF . LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones

    LPAREN          shift and go to state 73


state 36

    (102) while -> WHILE . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> WHILE . LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON

    LPAREN          shift and go to state 74


state 37

    (2) expresiones -> expresion expresiones .

    $end            reduce using rule 2 (expresiones -> expresion expresiones .)
    RCURLY          reduce using rule 2 (expresiones -> expresion expresiones .)
    ENDIF           reduce using rule 2 (expresiones -> expresion expresiones .)
    ELSE            reduce using rule 2 (expresiones -> expresion expresiones .)
    ELSEIF          reduce using rule 2 (expresiones -> expresion expresiones .)
    ENDWHILE        reduce using rule 2 (expresiones -> expresion expresiones .)


state 38

    (10) var_asignar -> VARIABLE EQUALS . var_asignar_contenido SEMICOLON
    (11) var_asignar_contenido -> . VARIABLE
    (12) var_asignar_contenido -> . elemento_numerico
    (13) var_asignar_contenido -> . elemento_string
    (14) var_asignar_contenido -> . elemento_logico
    (15) var_asignar_contenido -> . datos_estructurados
    (16) var_asignar_contenido -> . funciones_ingreso_datos
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (104) datos_estructurados -> . map
    (105) datos_estructurados -> . vector
    (106) datos_estructurados -> . set
    (79) funciones_ingreso_datos -> . VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN
    (80) funciones_ingreso_datos -> . READLINE LPAREN RPAREN
    (81) funciones_ingreso_datos -> . READLINE LPAREN elemento_string RPAREN
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (107) map -> . NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
    (108) map -> . NEW MAP LPAREN RPAREN
    (113) vector -> . NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN
    (114) vector -> . NEW VECTOR LPAREN RPAREN
    (122) set -> . NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN
    (123) set -> . NEW SET LPAREN RPAREN

    VARIABLE        shift and go to state 75
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    NOTLOGICAL      shift and go to state 57
    VAR_EXPORT      shift and go to state 85
    READLINE        shift and go to state 86
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    NEW             shift and go to state 87

    var_asignar_contenido          shift and go to state 76
    elemento_numerico              shift and go to state 77
    elemento_string                shift and go to state 78
    elemento_logico                shift and go to state 79
    datos_estructurados            shift and go to state 80
    funciones_ingreso_datos        shift and go to state 81
    elemento_logico_pri            shift and go to state 56
    map                            shift and go to state 82
    vector                         shift and go to state 83
    set                            shift and go to state 84

state 39

    (17) var_plusminus -> VARIABLE PLUS . PLUS SEMICOLON

    PLUS            shift and go to state 88


state 40

    (18) var_plusminus -> VARIABLE MINUS . MINUS SEMICOLON

    MINUS           shift and go to state 89


state 41

    (140) remove_set -> VARIABLE SIMPLEARROW . REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> VARIABLE SIMPLEARROW . REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> VARIABLE SIMPLEARROW . REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (134) push_vector -> VARIABLE SIMPLEARROW . PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> VARIABLE SIMPLEARROW . PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> VARIABLE SIMPLEARROW . PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    REMOVE          shift and go to state 90
    PUSH            shift and go to state 91


state 42

    (9) var_declarar -> VAR var_asignar .

    VARIABLE        reduce using rule 9 (var_declarar -> VAR var_asignar .)
    VAR             reduce using rule 9 (var_declarar -> VAR var_asignar .)
    ECHO            reduce using rule 9 (var_declarar -> VAR var_asignar .)
    PRINT           reduce using rule 9 (var_declarar -> VAR var_asignar .)
    VAR_DUMP        reduce using rule 9 (var_declarar -> VAR var_asignar .)
    PRINT_R         reduce using rule 9 (var_declarar -> VAR var_asignar .)
    VAR_EXPORT      reduce using rule 9 (var_declarar -> VAR var_asignar .)
    IF              reduce using rule 9 (var_declarar -> VAR var_asignar .)
    WHILE           reduce using rule 9 (var_declarar -> VAR var_asignar .)
    $end            reduce using rule 9 (var_declarar -> VAR var_asignar .)
    RCURLY          reduce using rule 9 (var_declarar -> VAR var_asignar .)
    ENDIF           reduce using rule 9 (var_declarar -> VAR var_asignar .)
    ELSE            reduce using rule 9 (var_declarar -> VAR var_asignar .)
    ELSEIF          reduce using rule 9 (var_declarar -> VAR var_asignar .)
    ENDWHILE        reduce using rule 9 (var_declarar -> VAR var_asignar .)


state 43

    (10) var_asignar -> VARIABLE . EQUALS var_asignar_contenido SEMICOLON

    EQUALS          shift and go to state 38


state 44

    (73) echo -> ECHO params . SEMICOLON

    SEMICOLON       shift and go to state 92


state 45

    (74) echo -> ECHO params_points . SEMICOLON

    SEMICOLON       shift and go to state 93


state 46

    (55) params -> param .
    (56) params -> param . COMMA params
    (57) params_points -> param .
    (58) params_points -> param . POINT params_points

  ! reduce/reduce conflict for SEMICOLON resolved using rule 55 (params -> param .)
    SEMICOLON       reduce using rule 55 (params -> param .)
    COMMA           shift and go to state 94
    POINT           shift and go to state 95

  ! SEMICOLON       [ reduce using rule 57 (params_points -> param .) ]


state 47

    (51) param -> VARIABLE .
    (31) elemento_string -> VARIABLE .
    (23) elemento_numerico -> VARIABLE .
    (36) elemento_logico -> VARIABLE .

  ! reduce/reduce conflict for COMMA resolved using rule 31 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for POINT resolved using rule 31 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 31 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 31 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 31 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for POINT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for POINT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 23 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 23 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    COMMA           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    POINT           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    SEMICOLON       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 23 (elemento_numerico -> VARIABLE .)
    RBRACKET        reduce using rule 23 (elemento_numerico -> VARIABLE .)

  ! COMMA           [ reduce using rule 51 (param -> VARIABLE .) ]
  ! POINT           [ reduce using rule 51 (param -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 51 (param -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 51 (param -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 51 (param -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! POINT           [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! POINT           [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]


state 48

    (52) param -> elemento_string .
    (38) elemento_logico -> elemento_string . comparador elemento_string
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    COMMA           reduce using rule 52 (param -> elemento_string .)
    POINT           reduce using rule 52 (param -> elemento_string .)
    SEMICOLON       reduce using rule 52 (param -> elemento_string .)
    RPAREN          reduce using rule 52 (param -> elemento_string .)
    RBRACKET        reduce using rule 52 (param -> elemento_string .)
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 96

state 49

    (53) param -> elemento_numerico .
    (19) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (37) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (24) operador -> . PLUS
    (25) operador -> . MINUS
    (26) operador -> . DIVIDE
    (27) operador -> . EXPONENTIAL
    (28) operador -> . TIMES
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    COMMA           reduce using rule 53 (param -> elemento_numerico .)
    POINT           reduce using rule 53 (param -> elemento_numerico .)
    SEMICOLON       reduce using rule 53 (param -> elemento_numerico .)
    RPAREN          reduce using rule 53 (param -> elemento_numerico .)
    RBRACKET        reduce using rule 53 (param -> elemento_numerico .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    EXPONENTIAL     shift and go to state 112
    TIMES           shift and go to state 113
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    operador                       shift and go to state 107
    comparador                     shift and go to state 108

state 50

    (54) param -> elemento_logico .
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    COMMA           reduce using rule 54 (param -> elemento_logico .)
    POINT           reduce using rule 54 (param -> elemento_logico .)
    SEMICOLON       reduce using rule 54 (param -> elemento_logico .)
    RPAREN          reduce using rule 54 (param -> elemento_logico .)
    RBRACKET        reduce using rule 54 (param -> elemento_logico .)
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 114

state 51

    (29) elemento_string -> STRING .

    IDENTICAL       reduce using rule 29 (elemento_string -> STRING .)
    NOTIDENTICAL    reduce using rule 29 (elemento_string -> STRING .)
    EQUALSLOGICAL   reduce using rule 29 (elemento_string -> STRING .)
    DIFFERENT       reduce using rule 29 (elemento_string -> STRING .)
    GREATEREQUAL    reduce using rule 29 (elemento_string -> STRING .)
    LESSEQUAL       reduce using rule 29 (elemento_string -> STRING .)
    GREATERTHAN     reduce using rule 29 (elemento_string -> STRING .)
    LESSTHAN        reduce using rule 29 (elemento_string -> STRING .)
    ANDlOGICAL      reduce using rule 29 (elemento_string -> STRING .)
    ORLOGICAL       reduce using rule 29 (elemento_string -> STRING .)
    COMMA           reduce using rule 29 (elemento_string -> STRING .)
    POINT           reduce using rule 29 (elemento_string -> STRING .)
    SEMICOLON       reduce using rule 29 (elemento_string -> STRING .)
    RPAREN          reduce using rule 29 (elemento_string -> STRING .)
    RBRACKET        reduce using rule 29 (elemento_string -> STRING .)
    ARROW           reduce using rule 29 (elemento_string -> STRING .)


state 52

    (30) elemento_string -> STRINGCC .

    IDENTICAL       reduce using rule 30 (elemento_string -> STRINGCC .)
    NOTIDENTICAL    reduce using rule 30 (elemento_string -> STRINGCC .)
    EQUALSLOGICAL   reduce using rule 30 (elemento_string -> STRINGCC .)
    DIFFERENT       reduce using rule 30 (elemento_string -> STRINGCC .)
    GREATEREQUAL    reduce using rule 30 (elemento_string -> STRINGCC .)
    LESSEQUAL       reduce using rule 30 (elemento_string -> STRINGCC .)
    GREATERTHAN     reduce using rule 30 (elemento_string -> STRINGCC .)
    LESSTHAN        reduce using rule 30 (elemento_string -> STRINGCC .)
    ANDlOGICAL      reduce using rule 30 (elemento_string -> STRINGCC .)
    ORLOGICAL       reduce using rule 30 (elemento_string -> STRINGCC .)
    COMMA           reduce using rule 30 (elemento_string -> STRINGCC .)
    POINT           reduce using rule 30 (elemento_string -> STRINGCC .)
    SEMICOLON       reduce using rule 30 (elemento_string -> STRINGCC .)
    RPAREN          reduce using rule 30 (elemento_string -> STRINGCC .)
    RBRACKET        reduce using rule 30 (elemento_string -> STRINGCC .)
    ARROW           reduce using rule 30 (elemento_string -> STRINGCC .)


state 53

    (20) elemento_numerico -> FLOAT .

    PLUS            reduce using rule 20 (elemento_numerico -> FLOAT .)
    MINUS           reduce using rule 20 (elemento_numerico -> FLOAT .)
    DIVIDE          reduce using rule 20 (elemento_numerico -> FLOAT .)
    EXPONENTIAL     reduce using rule 20 (elemento_numerico -> FLOAT .)
    TIMES           reduce using rule 20 (elemento_numerico -> FLOAT .)
    IDENTICAL       reduce using rule 20 (elemento_numerico -> FLOAT .)
    NOTIDENTICAL    reduce using rule 20 (elemento_numerico -> FLOAT .)
    EQUALSLOGICAL   reduce using rule 20 (elemento_numerico -> FLOAT .)
    DIFFERENT       reduce using rule 20 (elemento_numerico -> FLOAT .)
    GREATEREQUAL    reduce using rule 20 (elemento_numerico -> FLOAT .)
    LESSEQUAL       reduce using rule 20 (elemento_numerico -> FLOAT .)
    GREATERTHAN     reduce using rule 20 (elemento_numerico -> FLOAT .)
    LESSTHAN        reduce using rule 20 (elemento_numerico -> FLOAT .)
    ANDlOGICAL      reduce using rule 20 (elemento_numerico -> FLOAT .)
    ORLOGICAL       reduce using rule 20 (elemento_numerico -> FLOAT .)
    COMMA           reduce using rule 20 (elemento_numerico -> FLOAT .)
    POINT           reduce using rule 20 (elemento_numerico -> FLOAT .)
    SEMICOLON       reduce using rule 20 (elemento_numerico -> FLOAT .)
    RPAREN          reduce using rule 20 (elemento_numerico -> FLOAT .)
    RBRACKET        reduce using rule 20 (elemento_numerico -> FLOAT .)


state 54

    (21) elemento_numerico -> NUMBER .

    PLUS            reduce using rule 21 (elemento_numerico -> NUMBER .)
    MINUS           reduce using rule 21 (elemento_numerico -> NUMBER .)
    DIVIDE          reduce using rule 21 (elemento_numerico -> NUMBER .)
    EXPONENTIAL     reduce using rule 21 (elemento_numerico -> NUMBER .)
    TIMES           reduce using rule 21 (elemento_numerico -> NUMBER .)
    IDENTICAL       reduce using rule 21 (elemento_numerico -> NUMBER .)
    NOTIDENTICAL    reduce using rule 21 (elemento_numerico -> NUMBER .)
    EQUALSLOGICAL   reduce using rule 21 (elemento_numerico -> NUMBER .)
    DIFFERENT       reduce using rule 21 (elemento_numerico -> NUMBER .)
    GREATEREQUAL    reduce using rule 21 (elemento_numerico -> NUMBER .)
    LESSEQUAL       reduce using rule 21 (elemento_numerico -> NUMBER .)
    GREATERTHAN     reduce using rule 21 (elemento_numerico -> NUMBER .)
    LESSTHAN        reduce using rule 21 (elemento_numerico -> NUMBER .)
    ANDlOGICAL      reduce using rule 21 (elemento_numerico -> NUMBER .)
    ORLOGICAL       reduce using rule 21 (elemento_numerico -> NUMBER .)
    COMMA           reduce using rule 21 (elemento_numerico -> NUMBER .)
    POINT           reduce using rule 21 (elemento_numerico -> NUMBER .)
    SEMICOLON       reduce using rule 21 (elemento_numerico -> NUMBER .)
    RPAREN          reduce using rule 21 (elemento_numerico -> NUMBER .)
    RBRACKET        reduce using rule 21 (elemento_numerico -> NUMBER .)


state 55

    (22) elemento_numerico -> LPAREN . elemento_numerico RPAREN
    (35) elemento_logico -> LPAREN . elemento_logico RPAREN
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    VARIABLE        shift and go to state 117
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_numerico              shift and go to state 115
    elemento_logico                shift and go to state 116
    elemento_logico_pri            shift and go to state 56
    elemento_string                shift and go to state 118

state 56

    (32) elemento_logico -> elemento_logico_pri .

    IDENTICAL       reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    NOTIDENTICAL    reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    EQUALSLOGICAL   reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    DIFFERENT       reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    GREATEREQUAL    reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    LESSEQUAL       reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    GREATERTHAN     reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    LESSTHAN        reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    ANDlOGICAL      reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    ORLOGICAL       reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    COMMA           reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    POINT           reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    SEMICOLON       reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    RPAREN          reduce using rule 32 (elemento_logico -> elemento_logico_pri .)
    RBRACKET        reduce using rule 32 (elemento_logico -> elemento_logico_pri .)


state 57

    (34) elemento_logico -> NOTLOGICAL . elemento_logico
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 57
    LPAREN          shift and go to state 120
    VARIABLE        shift and go to state 121
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_logico                shift and go to state 119
    elemento_logico_pri            shift and go to state 56
    elemento_numerico              shift and go to state 122
    elemento_string                shift and go to state 118

state 58

    (39) elemento_logico_pri -> TRUE .

    IDENTICAL       reduce using rule 39 (elemento_logico_pri -> TRUE .)
    NOTIDENTICAL    reduce using rule 39 (elemento_logico_pri -> TRUE .)
    EQUALSLOGICAL   reduce using rule 39 (elemento_logico_pri -> TRUE .)
    DIFFERENT       reduce using rule 39 (elemento_logico_pri -> TRUE .)
    GREATEREQUAL    reduce using rule 39 (elemento_logico_pri -> TRUE .)
    LESSEQUAL       reduce using rule 39 (elemento_logico_pri -> TRUE .)
    GREATERTHAN     reduce using rule 39 (elemento_logico_pri -> TRUE .)
    LESSTHAN        reduce using rule 39 (elemento_logico_pri -> TRUE .)
    ANDlOGICAL      reduce using rule 39 (elemento_logico_pri -> TRUE .)
    ORLOGICAL       reduce using rule 39 (elemento_logico_pri -> TRUE .)
    COMMA           reduce using rule 39 (elemento_logico_pri -> TRUE .)
    POINT           reduce using rule 39 (elemento_logico_pri -> TRUE .)
    SEMICOLON       reduce using rule 39 (elemento_logico_pri -> TRUE .)
    RPAREN          reduce using rule 39 (elemento_logico_pri -> TRUE .)
    RBRACKET        reduce using rule 39 (elemento_logico_pri -> TRUE .)


state 59

    (40) elemento_logico_pri -> FALSE .

    IDENTICAL       reduce using rule 40 (elemento_logico_pri -> FALSE .)
    NOTIDENTICAL    reduce using rule 40 (elemento_logico_pri -> FALSE .)
    EQUALSLOGICAL   reduce using rule 40 (elemento_logico_pri -> FALSE .)
    DIFFERENT       reduce using rule 40 (elemento_logico_pri -> FALSE .)
    GREATEREQUAL    reduce using rule 40 (elemento_logico_pri -> FALSE .)
    LESSEQUAL       reduce using rule 40 (elemento_logico_pri -> FALSE .)
    GREATERTHAN     reduce using rule 40 (elemento_logico_pri -> FALSE .)
    LESSTHAN        reduce using rule 40 (elemento_logico_pri -> FALSE .)
    ANDlOGICAL      reduce using rule 40 (elemento_logico_pri -> FALSE .)
    ORLOGICAL       reduce using rule 40 (elemento_logico_pri -> FALSE .)
    COMMA           reduce using rule 40 (elemento_logico_pri -> FALSE .)
    POINT           reduce using rule 40 (elemento_logico_pri -> FALSE .)
    SEMICOLON       reduce using rule 40 (elemento_logico_pri -> FALSE .)
    RPAREN          reduce using rule 40 (elemento_logico_pri -> FALSE .)
    RBRACKET        reduce using rule 40 (elemento_logico_pri -> FALSE .)


state 60

    (75) print -> PRINT param . SEMICOLON

    SEMICOLON       shift and go to state 123


state 61

    (77) var_dump -> VAR_DUMP LPAREN . param RPAREN SEMICOLON
    (129) key_map -> VAR_DUMP LPAREN . VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> VAR_DUMP LPAREN . VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> VAR_DUMP LPAREN . VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (133) find_vector -> VAR_DUMP LPAREN . VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 125
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 124
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 62

    (76) print_r -> PRINT_R LPAREN . param RPAREN SEMICOLON
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 126
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 63

    (78) var_export -> VAR_EXPORT LPAREN . param RPAREN SEMICOLON
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 127
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 64

    (85) if_structures -> if else .

    VARIABLE        reduce using rule 85 (if_structures -> if else .)
    VAR             reduce using rule 85 (if_structures -> if else .)
    ECHO            reduce using rule 85 (if_structures -> if else .)
    PRINT           reduce using rule 85 (if_structures -> if else .)
    VAR_DUMP        reduce using rule 85 (if_structures -> if else .)
    PRINT_R         reduce using rule 85 (if_structures -> if else .)
    VAR_EXPORT      reduce using rule 85 (if_structures -> if else .)
    IF              reduce using rule 85 (if_structures -> if else .)
    WHILE           reduce using rule 85 (if_structures -> if else .)
    $end            reduce using rule 85 (if_structures -> if else .)
    RCURLY          reduce using rule 85 (if_structures -> if else .)
    ENDIF           reduce using rule 85 (if_structures -> if else .)
    ELSE            reduce using rule 85 (if_structures -> if else .)
    ELSEIF          reduce using rule 85 (if_structures -> if else .)
    ENDWHILE        reduce using rule 85 (if_structures -> if else .)


state 65

    (86) if_structures -> if else_if . else
    (87) if_structures -> if else_if .
    (96) else_if -> else_if . else_if
    (93) else -> . ELSE LCURLY expresiones RCURLY
    (94) else_if -> . ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (95) else_if -> . ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (96) else_if -> . else_if else_if

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    VARIABLE        reduce using rule 87 (if_structures -> if else_if .)
    VAR             reduce using rule 87 (if_structures -> if else_if .)
    ECHO            reduce using rule 87 (if_structures -> if else_if .)
    PRINT           reduce using rule 87 (if_structures -> if else_if .)
    VAR_DUMP        reduce using rule 87 (if_structures -> if else_if .)
    PRINT_R         reduce using rule 87 (if_structures -> if else_if .)
    VAR_EXPORT      reduce using rule 87 (if_structures -> if else_if .)
    IF              reduce using rule 87 (if_structures -> if else_if .)
    WHILE           reduce using rule 87 (if_structures -> if else_if .)
    $end            reduce using rule 87 (if_structures -> if else_if .)
    RCURLY          reduce using rule 87 (if_structures -> if else_if .)
    ENDIF           reduce using rule 87 (if_structures -> if else_if .)
    ENDWHILE        reduce using rule 87 (if_structures -> if else_if .)
    ELSE            shift and go to state 66
    ELSEIF          shift and go to state 67

  ! ELSE            [ reduce using rule 87 (if_structures -> if else_if .) ]
  ! ELSEIF          [ reduce using rule 87 (if_structures -> if else_if .) ]

    else_if                        shift and go to state 128
    else                           shift and go to state 129

state 66

    (93) else -> ELSE . LCURLY expresiones RCURLY
    (95) else_if -> ELSE . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    LCURLY          shift and go to state 130
    IF              shift and go to state 131


state 67

    (94) else_if -> ELSEIF . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    LPAREN          shift and go to state 132


state 68

    (88) if_structures -> if_r ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 133


state 69

    (89) if_structures -> if_r else_r . ENDIF SEMICOLON

    ENDIF           shift and go to state 134


state 70

    (90) if_structures -> if_r elseif_r . else_r ENDIF SEMICOLON
    (91) if_structures -> if_r elseif_r . ENDIF SEMICOLON
    (100) elseif_r -> elseif_r . elseif_r
    (98) else_r -> . ELSE DOUBLEPOINT expresiones
    (99) elseif_r -> . ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (100) elseif_r -> . elseif_r elseif_r

    ENDIF           shift and go to state 137
    ELSE            shift and go to state 71
    ELSEIF          shift and go to state 72

    elseif_r                       shift and go to state 135
    else_r                         shift and go to state 136

state 71

    (98) else_r -> ELSE . DOUBLEPOINT expresiones

    DOUBLEPOINT     shift and go to state 138


state 72

    (99) elseif_r -> ELSEIF . LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones

    LPAREN          shift and go to state 139


state 73

    (92) if -> IF LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> IF LPAREN . elemento_logico RPAREN DOUBLEPOINT expresiones
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 57
    LPAREN          shift and go to state 120
    VARIABLE        shift and go to state 121
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_logico                shift and go to state 140
    elemento_logico_pri            shift and go to state 56
    elemento_numerico              shift and go to state 122
    elemento_string                shift and go to state 118

state 74

    (102) while -> WHILE LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> WHILE LPAREN . elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 57
    LPAREN          shift and go to state 120
    VARIABLE        shift and go to state 121
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_logico                shift and go to state 141
    elemento_logico_pri            shift and go to state 56
    elemento_numerico              shift and go to state 122
    elemento_string                shift and go to state 118

state 75

    (11) var_asignar_contenido -> VARIABLE .
    (23) elemento_numerico -> VARIABLE .
    (31) elemento_string -> VARIABLE .
    (36) elemento_logico -> VARIABLE .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 11 (var_asignar_contenido -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 11 (var_asignar_contenido -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 11 (var_asignar_contenido -> VARIABLE .)
    SEMICOLON       reduce using rule 11 (var_asignar_contenido -> VARIABLE .)
    PLUS            reduce using rule 23 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)

  ! SEMICOLON       [ reduce using rule 23 (elemento_numerico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]


state 76

    (10) var_asignar -> VARIABLE EQUALS var_asignar_contenido . SEMICOLON

    SEMICOLON       shift and go to state 142


state 77

    (12) var_asignar_contenido -> elemento_numerico .
    (19) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (37) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (24) operador -> . PLUS
    (25) operador -> . MINUS
    (26) operador -> . DIVIDE
    (27) operador -> . EXPONENTIAL
    (28) operador -> . TIMES
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    SEMICOLON       reduce using rule 12 (var_asignar_contenido -> elemento_numerico .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    EXPONENTIAL     shift and go to state 112
    TIMES           shift and go to state 113
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    operador                       shift and go to state 107
    comparador                     shift and go to state 108

state 78

    (13) var_asignar_contenido -> elemento_string .
    (38) elemento_logico -> elemento_string . comparador elemento_string
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    SEMICOLON       reduce using rule 13 (var_asignar_contenido -> elemento_string .)
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 96

state 79

    (14) var_asignar_contenido -> elemento_logico .
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    SEMICOLON       reduce using rule 14 (var_asignar_contenido -> elemento_logico .)
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 114

state 80

    (15) var_asignar_contenido -> datos_estructurados .

    SEMICOLON       reduce using rule 15 (var_asignar_contenido -> datos_estructurados .)


state 81

    (16) var_asignar_contenido -> funciones_ingreso_datos .

    SEMICOLON       reduce using rule 16 (var_asignar_contenido -> funciones_ingreso_datos .)


state 82

    (104) datos_estructurados -> map .

    SEMICOLON       reduce using rule 104 (datos_estructurados -> map .)


state 83

    (105) datos_estructurados -> vector .

    SEMICOLON       reduce using rule 105 (datos_estructurados -> vector .)


state 84

    (106) datos_estructurados -> set .

    SEMICOLON       reduce using rule 106 (datos_estructurados -> set .)


state 85

    (79) funciones_ingreso_datos -> VAR_EXPORT . LPAREN param COMMA elemento_logico RPAREN

    LPAREN          shift and go to state 143


state 86

    (80) funciones_ingreso_datos -> READLINE . LPAREN RPAREN
    (81) funciones_ingreso_datos -> READLINE . LPAREN elemento_string RPAREN

    LPAREN          shift and go to state 144


state 87

    (107) map -> NEW . MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
    (108) map -> NEW . MAP LPAREN RPAREN
    (113) vector -> NEW . VECTOR LPAREN LBRACKET params RBRACKET RPAREN
    (114) vector -> NEW . VECTOR LPAREN RPAREN
    (122) set -> NEW . SET LPAREN LBRACKET params_unitype RBRACKET RPAREN
    (123) set -> NEW . SET LPAREN RPAREN

    MAP             shift and go to state 145
    VECTOR          shift and go to state 146
    SET             shift and go to state 147


state 88

    (17) var_plusminus -> VARIABLE PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 148


state 89

    (18) var_plusminus -> VARIABLE MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 149


state 90

    (140) remove_set -> VARIABLE SIMPLEARROW REMOVE . LPAREN param RPAREN SEMICOLON
    (141) remove_set -> VARIABLE SIMPLEARROW REMOVE . LPAREN params RPAREN SEMICOLON
    (142) remove_set -> VARIABLE SIMPLEARROW REMOVE . LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    LPAREN          shift and go to state 150


state 91

    (134) push_vector -> VARIABLE SIMPLEARROW PUSH . LPAREN param RPAREN SEMICOLON
    (135) push_vector -> VARIABLE SIMPLEARROW PUSH . LPAREN params RPAREN SEMICOLON
    (136) push_vector -> VARIABLE SIMPLEARROW PUSH . LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    LPAREN          shift and go to state 151


state 92

    (73) echo -> ECHO params SEMICOLON .

    VARIABLE        reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    VAR             reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    ECHO            reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    PRINT           reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    VAR_DUMP        reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    PRINT_R         reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    VAR_EXPORT      reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    IF              reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    WHILE           reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    $end            reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    RCURLY          reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    ENDIF           reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    ELSE            reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    ELSEIF          reduce using rule 73 (echo -> ECHO params SEMICOLON .)
    ENDWHILE        reduce using rule 73 (echo -> ECHO params SEMICOLON .)


state 93

    (74) echo -> ECHO params_points SEMICOLON .

    VARIABLE        reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    VAR             reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    ECHO            reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    PRINT           reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    VAR_DUMP        reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    PRINT_R         reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    VAR_EXPORT      reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    IF              reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    WHILE           reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    $end            reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    RCURLY          reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    ENDIF           reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    ELSE            reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    ELSEIF          reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)
    ENDWHILE        reduce using rule 74 (echo -> ECHO params_points SEMICOLON .)


state 94

    (56) params -> param COMMA . params
    (55) params -> . param
    (56) params -> . param COMMA params
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 152
    params                         shift and go to state 153
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 95

    (58) params_points -> param POINT . params_points
    (57) params_points -> . param
    (58) params_points -> . param POINT params_points
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 154
    params_points                  shift and go to state 155
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 96

    (38) elemento_logico -> elemento_string comparador . elemento_string
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    VARIABLE        shift and go to state 157

    elemento_string                shift and go to state 156

state 97

    (41) comparador -> IDENTICAL .

    STRING          reduce using rule 41 (comparador -> IDENTICAL .)
    STRINGCC        reduce using rule 41 (comparador -> IDENTICAL .)
    VARIABLE        reduce using rule 41 (comparador -> IDENTICAL .)
    FLOAT           reduce using rule 41 (comparador -> IDENTICAL .)
    NUMBER          reduce using rule 41 (comparador -> IDENTICAL .)
    LPAREN          reduce using rule 41 (comparador -> IDENTICAL .)
    NOTLOGICAL      reduce using rule 41 (comparador -> IDENTICAL .)
    TRUE            reduce using rule 41 (comparador -> IDENTICAL .)
    FALSE           reduce using rule 41 (comparador -> IDENTICAL .)


state 98

    (42) comparador -> NOTIDENTICAL .

    STRING          reduce using rule 42 (comparador -> NOTIDENTICAL .)
    STRINGCC        reduce using rule 42 (comparador -> NOTIDENTICAL .)
    VARIABLE        reduce using rule 42 (comparador -> NOTIDENTICAL .)
    FLOAT           reduce using rule 42 (comparador -> NOTIDENTICAL .)
    NUMBER          reduce using rule 42 (comparador -> NOTIDENTICAL .)
    LPAREN          reduce using rule 42 (comparador -> NOTIDENTICAL .)
    NOTLOGICAL      reduce using rule 42 (comparador -> NOTIDENTICAL .)
    TRUE            reduce using rule 42 (comparador -> NOTIDENTICAL .)
    FALSE           reduce using rule 42 (comparador -> NOTIDENTICAL .)


state 99

    (43) comparador -> EQUALSLOGICAL .

    STRING          reduce using rule 43 (comparador -> EQUALSLOGICAL .)
    STRINGCC        reduce using rule 43 (comparador -> EQUALSLOGICAL .)
    VARIABLE        reduce using rule 43 (comparador -> EQUALSLOGICAL .)
    FLOAT           reduce using rule 43 (comparador -> EQUALSLOGICAL .)
    NUMBER          reduce using rule 43 (comparador -> EQUALSLOGICAL .)
    LPAREN          reduce using rule 43 (comparador -> EQUALSLOGICAL .)
    NOTLOGICAL      reduce using rule 43 (comparador -> EQUALSLOGICAL .)
    TRUE            reduce using rule 43 (comparador -> EQUALSLOGICAL .)
    FALSE           reduce using rule 43 (comparador -> EQUALSLOGICAL .)


state 100

    (44) comparador -> DIFFERENT .

    STRING          reduce using rule 44 (comparador -> DIFFERENT .)
    STRINGCC        reduce using rule 44 (comparador -> DIFFERENT .)
    VARIABLE        reduce using rule 44 (comparador -> DIFFERENT .)
    FLOAT           reduce using rule 44 (comparador -> DIFFERENT .)
    NUMBER          reduce using rule 44 (comparador -> DIFFERENT .)
    LPAREN          reduce using rule 44 (comparador -> DIFFERENT .)
    NOTLOGICAL      reduce using rule 44 (comparador -> DIFFERENT .)
    TRUE            reduce using rule 44 (comparador -> DIFFERENT .)
    FALSE           reduce using rule 44 (comparador -> DIFFERENT .)


state 101

    (45) comparador -> GREATEREQUAL .

    STRING          reduce using rule 45 (comparador -> GREATEREQUAL .)
    STRINGCC        reduce using rule 45 (comparador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 45 (comparador -> GREATEREQUAL .)
    FLOAT           reduce using rule 45 (comparador -> GREATEREQUAL .)
    NUMBER          reduce using rule 45 (comparador -> GREATEREQUAL .)
    LPAREN          reduce using rule 45 (comparador -> GREATEREQUAL .)
    NOTLOGICAL      reduce using rule 45 (comparador -> GREATEREQUAL .)
    TRUE            reduce using rule 45 (comparador -> GREATEREQUAL .)
    FALSE           reduce using rule 45 (comparador -> GREATEREQUAL .)


state 102

    (46) comparador -> LESSEQUAL .

    STRING          reduce using rule 46 (comparador -> LESSEQUAL .)
    STRINGCC        reduce using rule 46 (comparador -> LESSEQUAL .)
    VARIABLE        reduce using rule 46 (comparador -> LESSEQUAL .)
    FLOAT           reduce using rule 46 (comparador -> LESSEQUAL .)
    NUMBER          reduce using rule 46 (comparador -> LESSEQUAL .)
    LPAREN          reduce using rule 46 (comparador -> LESSEQUAL .)
    NOTLOGICAL      reduce using rule 46 (comparador -> LESSEQUAL .)
    TRUE            reduce using rule 46 (comparador -> LESSEQUAL .)
    FALSE           reduce using rule 46 (comparador -> LESSEQUAL .)


state 103

    (47) comparador -> GREATERTHAN .

    STRING          reduce using rule 47 (comparador -> GREATERTHAN .)
    STRINGCC        reduce using rule 47 (comparador -> GREATERTHAN .)
    VARIABLE        reduce using rule 47 (comparador -> GREATERTHAN .)
    FLOAT           reduce using rule 47 (comparador -> GREATERTHAN .)
    NUMBER          reduce using rule 47 (comparador -> GREATERTHAN .)
    LPAREN          reduce using rule 47 (comparador -> GREATERTHAN .)
    NOTLOGICAL      reduce using rule 47 (comparador -> GREATERTHAN .)
    TRUE            reduce using rule 47 (comparador -> GREATERTHAN .)
    FALSE           reduce using rule 47 (comparador -> GREATERTHAN .)


state 104

    (48) comparador -> LESSTHAN .

    STRING          reduce using rule 48 (comparador -> LESSTHAN .)
    STRINGCC        reduce using rule 48 (comparador -> LESSTHAN .)
    VARIABLE        reduce using rule 48 (comparador -> LESSTHAN .)
    FLOAT           reduce using rule 48 (comparador -> LESSTHAN .)
    NUMBER          reduce using rule 48 (comparador -> LESSTHAN .)
    LPAREN          reduce using rule 48 (comparador -> LESSTHAN .)
    NOTLOGICAL      reduce using rule 48 (comparador -> LESSTHAN .)
    TRUE            reduce using rule 48 (comparador -> LESSTHAN .)
    FALSE           reduce using rule 48 (comparador -> LESSTHAN .)


state 105

    (49) comparador -> ANDlOGICAL .

    STRING          reduce using rule 49 (comparador -> ANDlOGICAL .)
    STRINGCC        reduce using rule 49 (comparador -> ANDlOGICAL .)
    VARIABLE        reduce using rule 49 (comparador -> ANDlOGICAL .)
    FLOAT           reduce using rule 49 (comparador -> ANDlOGICAL .)
    NUMBER          reduce using rule 49 (comparador -> ANDlOGICAL .)
    LPAREN          reduce using rule 49 (comparador -> ANDlOGICAL .)
    NOTLOGICAL      reduce using rule 49 (comparador -> ANDlOGICAL .)
    TRUE            reduce using rule 49 (comparador -> ANDlOGICAL .)
    FALSE           reduce using rule 49 (comparador -> ANDlOGICAL .)


state 106

    (50) comparador -> ORLOGICAL .

    STRING          reduce using rule 50 (comparador -> ORLOGICAL .)
    STRINGCC        reduce using rule 50 (comparador -> ORLOGICAL .)
    VARIABLE        reduce using rule 50 (comparador -> ORLOGICAL .)
    FLOAT           reduce using rule 50 (comparador -> ORLOGICAL .)
    NUMBER          reduce using rule 50 (comparador -> ORLOGICAL .)
    LPAREN          reduce using rule 50 (comparador -> ORLOGICAL .)
    NOTLOGICAL      reduce using rule 50 (comparador -> ORLOGICAL .)
    TRUE            reduce using rule 50 (comparador -> ORLOGICAL .)
    FALSE           reduce using rule 50 (comparador -> ORLOGICAL .)


state 107

    (19) elemento_numerico -> elemento_numerico operador . elemento_numerico
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE

    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 159
    VARIABLE        shift and go to state 160

    elemento_numerico              shift and go to state 158

state 108

    (37) elemento_logico -> elemento_numerico comparador . elemento_numerico
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE

    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 159
    VARIABLE        shift and go to state 160

    elemento_numerico              shift and go to state 161

state 109

    (24) operador -> PLUS .

    FLOAT           reduce using rule 24 (operador -> PLUS .)
    NUMBER          reduce using rule 24 (operador -> PLUS .)
    LPAREN          reduce using rule 24 (operador -> PLUS .)
    VARIABLE        reduce using rule 24 (operador -> PLUS .)


state 110

    (25) operador -> MINUS .

    FLOAT           reduce using rule 25 (operador -> MINUS .)
    NUMBER          reduce using rule 25 (operador -> MINUS .)
    LPAREN          reduce using rule 25 (operador -> MINUS .)
    VARIABLE        reduce using rule 25 (operador -> MINUS .)


state 111

    (26) operador -> DIVIDE .

    FLOAT           reduce using rule 26 (operador -> DIVIDE .)
    NUMBER          reduce using rule 26 (operador -> DIVIDE .)
    LPAREN          reduce using rule 26 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 26 (operador -> DIVIDE .)


state 112

    (27) operador -> EXPONENTIAL .

    FLOAT           reduce using rule 27 (operador -> EXPONENTIAL .)
    NUMBER          reduce using rule 27 (operador -> EXPONENTIAL .)
    LPAREN          reduce using rule 27 (operador -> EXPONENTIAL .)
    VARIABLE        reduce using rule 27 (operador -> EXPONENTIAL .)


state 113

    (28) operador -> TIMES .

    FLOAT           reduce using rule 28 (operador -> TIMES .)
    NUMBER          reduce using rule 28 (operador -> TIMES .)
    LPAREN          reduce using rule 28 (operador -> TIMES .)
    VARIABLE        reduce using rule 28 (operador -> TIMES .)


state 114

    (33) elemento_logico -> elemento_logico comparador . elemento_logico
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 57
    LPAREN          shift and go to state 120
    VARIABLE        shift and go to state 121
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_logico                shift and go to state 162
    elemento_logico_pri            shift and go to state 56
    elemento_numerico              shift and go to state 122
    elemento_string                shift and go to state 118

state 115

    (22) elemento_numerico -> LPAREN elemento_numerico . RPAREN
    (19) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (37) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (24) operador -> . PLUS
    (25) operador -> . MINUS
    (26) operador -> . DIVIDE
    (27) operador -> . EXPONENTIAL
    (28) operador -> . TIMES
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 163
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    EXPONENTIAL     shift and go to state 112
    TIMES           shift and go to state 113
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    operador                       shift and go to state 107
    comparador                     shift and go to state 108

state 116

    (35) elemento_logico -> LPAREN elemento_logico . RPAREN
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 164
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 114

state 117

    (23) elemento_numerico -> VARIABLE .
    (36) elemento_logico -> VARIABLE .
    (31) elemento_string -> VARIABLE .

  ! reduce/reduce conflict for RPAREN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 23 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 23 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)

  ! RPAREN          [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]


state 118

    (38) elemento_logico -> elemento_string . comparador elemento_string
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 96

state 119

    (34) elemento_logico -> NOTLOGICAL elemento_logico .
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

  ! shift/reduce conflict for IDENTICAL resolved as shift
  ! shift/reduce conflict for NOTIDENTICAL resolved as shift
  ! shift/reduce conflict for EQUALSLOGICAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for ANDlOGICAL resolved as shift
  ! shift/reduce conflict for ORLOGICAL resolved as shift
    COMMA           reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .)
    POINT           reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .)
    SEMICOLON       reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .)
    RPAREN          reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .)
    RBRACKET        reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .)
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

  ! IDENTICAL       [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! NOTIDENTICAL    [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! EQUALSLOGICAL   [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! DIFFERENT       [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! GREATEREQUAL    [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! LESSEQUAL       [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! GREATERTHAN     [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! LESSTHAN        [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! ANDlOGICAL      [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! ORLOGICAL       [ reduce using rule 34 (elemento_logico -> NOTLOGICAL elemento_logico .) ]

    comparador                     shift and go to state 114

state 120

    (35) elemento_logico -> LPAREN . elemento_logico RPAREN
    (22) elemento_numerico -> LPAREN . elemento_numerico RPAREN
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 57
    LPAREN          shift and go to state 120
    VARIABLE        shift and go to state 121
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_logico                shift and go to state 116
    elemento_numerico              shift and go to state 165
    elemento_logico_pri            shift and go to state 56
    elemento_string                shift and go to state 118

state 121

    (36) elemento_logico -> VARIABLE .
    (23) elemento_numerico -> VARIABLE .
    (31) elemento_string -> VARIABLE .

  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
    COMMA           reduce using rule 36 (elemento_logico -> VARIABLE .)
    POINT           reduce using rule 36 (elemento_logico -> VARIABLE .)
    SEMICOLON       reduce using rule 36 (elemento_logico -> VARIABLE .)
    RBRACKET        reduce using rule 36 (elemento_logico -> VARIABLE .)
    IDENTICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 23 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 23 (elemento_numerico -> VARIABLE .)

  ! IDENTICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]


state 122

    (37) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (19) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL
    (24) operador -> . PLUS
    (25) operador -> . MINUS
    (26) operador -> . DIVIDE
    (27) operador -> . EXPONENTIAL
    (28) operador -> . TIMES

    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    EXPONENTIAL     shift and go to state 112
    TIMES           shift and go to state 113

    comparador                     shift and go to state 108
    operador                       shift and go to state 107

state 123

    (75) print -> PRINT param SEMICOLON .

    VARIABLE        reduce using rule 75 (print -> PRINT param SEMICOLON .)
    VAR             reduce using rule 75 (print -> PRINT param SEMICOLON .)
    ECHO            reduce using rule 75 (print -> PRINT param SEMICOLON .)
    PRINT           reduce using rule 75 (print -> PRINT param SEMICOLON .)
    VAR_DUMP        reduce using rule 75 (print -> PRINT param SEMICOLON .)
    PRINT_R         reduce using rule 75 (print -> PRINT param SEMICOLON .)
    VAR_EXPORT      reduce using rule 75 (print -> PRINT param SEMICOLON .)
    IF              reduce using rule 75 (print -> PRINT param SEMICOLON .)
    WHILE           reduce using rule 75 (print -> PRINT param SEMICOLON .)
    $end            reduce using rule 75 (print -> PRINT param SEMICOLON .)
    RCURLY          reduce using rule 75 (print -> PRINT param SEMICOLON .)
    ENDIF           reduce using rule 75 (print -> PRINT param SEMICOLON .)
    ELSE            reduce using rule 75 (print -> PRINT param SEMICOLON .)
    ELSEIF          reduce using rule 75 (print -> PRINT param SEMICOLON .)
    ENDWHILE        reduce using rule 75 (print -> PRINT param SEMICOLON .)


state 124

    (77) var_dump -> VAR_DUMP LPAREN param . RPAREN SEMICOLON

    RPAREN          shift and go to state 166


state 125

    (129) key_map -> VAR_DUMP LPAREN VARIABLE . SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> VAR_DUMP LPAREN VARIABLE . SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> VAR_DUMP LPAREN VARIABLE . SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (133) find_vector -> VAR_DUMP LPAREN VARIABLE . SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (51) param -> VARIABLE .
    (31) elemento_string -> VARIABLE .
    (23) elemento_numerico -> VARIABLE .
    (36) elemento_logico -> VARIABLE .

  ! reduce/reduce conflict for RPAREN resolved using rule 31 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 23 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 23 (elemento_numerico -> VARIABLE .)
    SIMPLEARROW     shift and go to state 167
    PLUS            reduce using rule 23 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 23 (elemento_numerico -> VARIABLE .)

  ! RPAREN          [ reduce using rule 51 (param -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 31 (elemento_string -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 36 (elemento_logico -> VARIABLE .) ]


state 126

    (76) print_r -> PRINT_R LPAREN param . RPAREN SEMICOLON

    RPAREN          shift and go to state 168


state 127

    (78) var_export -> VAR_EXPORT LPAREN param . RPAREN SEMICOLON

    RPAREN          shift and go to state 169


state 128

    (96) else_if -> else_if else_if .
    (96) else_if -> else_if . else_if
    (94) else_if -> . ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (95) else_if -> . ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (96) else_if -> . else_if else_if

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    VARIABLE        reduce using rule 96 (else_if -> else_if else_if .)
    VAR             reduce using rule 96 (else_if -> else_if else_if .)
    ECHO            reduce using rule 96 (else_if -> else_if else_if .)
    PRINT           reduce using rule 96 (else_if -> else_if else_if .)
    VAR_DUMP        reduce using rule 96 (else_if -> else_if else_if .)
    PRINT_R         reduce using rule 96 (else_if -> else_if else_if .)
    VAR_EXPORT      reduce using rule 96 (else_if -> else_if else_if .)
    IF              reduce using rule 96 (else_if -> else_if else_if .)
    WHILE           reduce using rule 96 (else_if -> else_if else_if .)
    $end            reduce using rule 96 (else_if -> else_if else_if .)
    RCURLY          reduce using rule 96 (else_if -> else_if else_if .)
    ENDIF           reduce using rule 96 (else_if -> else_if else_if .)
    ENDWHILE        reduce using rule 96 (else_if -> else_if else_if .)
    ELSEIF          shift and go to state 67
    ELSE            shift and go to state 170

  ! ELSE            [ reduce using rule 96 (else_if -> else_if else_if .) ]
  ! ELSEIF          [ reduce using rule 96 (else_if -> else_if else_if .) ]

    else_if                        shift and go to state 128

state 129

    (86) if_structures -> if else_if else .

    VARIABLE        reduce using rule 86 (if_structures -> if else_if else .)
    VAR             reduce using rule 86 (if_structures -> if else_if else .)
    ECHO            reduce using rule 86 (if_structures -> if else_if else .)
    PRINT           reduce using rule 86 (if_structures -> if else_if else .)
    VAR_DUMP        reduce using rule 86 (if_structures -> if else_if else .)
    PRINT_R         reduce using rule 86 (if_structures -> if else_if else .)
    VAR_EXPORT      reduce using rule 86 (if_structures -> if else_if else .)
    IF              reduce using rule 86 (if_structures -> if else_if else .)
    WHILE           reduce using rule 86 (if_structures -> if else_if else .)
    $end            reduce using rule 86 (if_structures -> if else_if else .)
    RCURLY          reduce using rule 86 (if_structures -> if else_if else .)
    ENDIF           reduce using rule 86 (if_structures -> if else_if else .)
    ELSE            reduce using rule 86 (if_structures -> if else_if else .)
    ELSEIF          reduce using rule 86 (if_structures -> if else_if else .)
    ENDWHILE        reduce using rule 86 (if_structures -> if else_if else .)


state 130

    (93) else -> ELSE LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 171
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 131

    (95) else_if -> ELSE IF . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    LPAREN          shift and go to state 172


state 132

    (94) else_if -> ELSEIF LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 57
    LPAREN          shift and go to state 120
    VARIABLE        shift and go to state 121
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_logico                shift and go to state 173
    elemento_logico_pri            shift and go to state 56
    elemento_numerico              shift and go to state 122
    elemento_string                shift and go to state 118

state 133

    (88) if_structures -> if_r ENDIF SEMICOLON .

    VARIABLE        reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    VAR             reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    ECHO            reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    PRINT           reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    VAR_DUMP        reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    PRINT_R         reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    VAR_EXPORT      reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    IF              reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    WHILE           reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    $end            reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    RCURLY          reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    ENDIF           reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    ELSE            reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    ELSEIF          reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)
    ENDWHILE        reduce using rule 88 (if_structures -> if_r ENDIF SEMICOLON .)


state 134

    (89) if_structures -> if_r else_r ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 174


state 135

    (100) elseif_r -> elseif_r elseif_r .
    (100) elseif_r -> elseif_r . elseif_r
    (99) elseif_r -> . ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (100) elseif_r -> . elseif_r elseif_r

  ! shift/reduce conflict for ELSEIF resolved as shift
    ENDIF           reduce using rule 100 (elseif_r -> elseif_r elseif_r .)
    ELSE            reduce using rule 100 (elseif_r -> elseif_r elseif_r .)
    ELSEIF          shift and go to state 72

  ! ELSEIF          [ reduce using rule 100 (elseif_r -> elseif_r elseif_r .) ]

    elseif_r                       shift and go to state 135

state 136

    (90) if_structures -> if_r elseif_r else_r . ENDIF SEMICOLON

    ENDIF           shift and go to state 175


state 137

    (91) if_structures -> if_r elseif_r ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 176


state 138

    (98) else_r -> ELSE DOUBLEPOINT . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 177
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 139

    (99) elseif_r -> ELSEIF LPAREN . elemento_logico RPAREN DOUBLEPOINT expresiones
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 57
    LPAREN          shift and go to state 120
    VARIABLE        shift and go to state 121
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_logico                shift and go to state 178
    elemento_logico_pri            shift and go to state 56
    elemento_numerico              shift and go to state 122
    elemento_string                shift and go to state 118

state 140

    (92) if -> IF LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (97) if_r -> IF LPAREN elemento_logico . RPAREN DOUBLEPOINT expresiones
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 179
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 114

state 141

    (102) while -> WHILE LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (103) while -> WHILE LPAREN elemento_logico . RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 180
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 114

state 142

    (10) var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .

    VARIABLE        reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    VAR             reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ECHO            reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    PRINT           reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    VAR_DUMP        reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    PRINT_R         reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    VAR_EXPORT      reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    IF              reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    WHILE           reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    $end            reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    RCURLY          reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ENDIF           reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ELSE            reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ELSEIF          reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)
    ENDWHILE        reduce using rule 10 (var_asignar -> VARIABLE EQUALS var_asignar_contenido SEMICOLON .)


state 143

    (79) funciones_ingreso_datos -> VAR_EXPORT LPAREN . param COMMA elemento_logico RPAREN
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 181
    elemento_logico                shift and go to state 50
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico_pri            shift and go to state 56

state 144

    (80) funciones_ingreso_datos -> READLINE LPAREN . RPAREN
    (81) funciones_ingreso_datos -> READLINE LPAREN . elemento_string RPAREN
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    RPAREN          shift and go to state 182
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    VARIABLE        shift and go to state 157

    elemento_string                shift and go to state 183

state 145

    (107) map -> NEW MAP . LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN
    (108) map -> NEW MAP . LPAREN RPAREN

    LPAREN          shift and go to state 184


state 146

    (113) vector -> NEW VECTOR . LPAREN LBRACKET params RBRACKET RPAREN
    (114) vector -> NEW VECTOR . LPAREN RPAREN

    LPAREN          shift and go to state 185


state 147

    (122) set -> NEW SET . LPAREN LBRACKET params_unitype RBRACKET RPAREN
    (123) set -> NEW SET . LPAREN RPAREN

    LPAREN          shift and go to state 186


state 148

    (17) var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .

    VARIABLE        reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    VAR             reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ECHO            reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    PRINT           reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    VAR_DUMP        reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    PRINT_R         reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    VAR_EXPORT      reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    IF              reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    $end            reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    RCURLY          reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ENDIF           reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ELSE            reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ELSEIF          reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)
    ENDWHILE        reduce using rule 17 (var_plusminus -> VARIABLE PLUS PLUS SEMICOLON .)


state 149

    (18) var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .

    VARIABLE        reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    VAR             reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ECHO            reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    PRINT           reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    VAR_DUMP        reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    PRINT_R         reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    VAR_EXPORT      reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    IF              reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    $end            reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    RCURLY          reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ENDIF           reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ELSE            reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ELSEIF          reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)
    ENDWHILE        reduce using rule 18 (var_plusminus -> VARIABLE MINUS MINUS SEMICOLON .)


state 150

    (140) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN . param RPAREN SEMICOLON
    (141) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN . params RPAREN SEMICOLON
    (142) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN . LBRACKET params RBRACKET RPAREN SEMICOLON
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (55) params -> . param
    (56) params -> . param COMMA params
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    LBRACKET        shift and go to state 189
    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 187
    params                         shift and go to state 188
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 151

    (134) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN . param RPAREN SEMICOLON
    (135) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN . params RPAREN SEMICOLON
    (136) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN . LBRACKET params RBRACKET RPAREN SEMICOLON
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (55) params -> . param
    (56) params -> . param COMMA params
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    LBRACKET        shift and go to state 192
    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 190
    params                         shift and go to state 191
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 152

    (55) params -> param .
    (56) params -> param . COMMA params

    SEMICOLON       reduce using rule 55 (params -> param .)
    RPAREN          reduce using rule 55 (params -> param .)
    RBRACKET        reduce using rule 55 (params -> param .)
    COMMA           shift and go to state 94


state 153

    (56) params -> param COMMA params .

    SEMICOLON       reduce using rule 56 (params -> param COMMA params .)
    RPAREN          reduce using rule 56 (params -> param COMMA params .)
    RBRACKET        reduce using rule 56 (params -> param COMMA params .)


state 154

    (57) params_points -> param .
    (58) params_points -> param . POINT params_points

    SEMICOLON       reduce using rule 57 (params_points -> param .)
    POINT           shift and go to state 95


state 155

    (58) params_points -> param POINT params_points .

    SEMICOLON       reduce using rule 58 (params_points -> param POINT params_points .)


state 156

    (38) elemento_logico -> elemento_string comparador elemento_string .

    IDENTICAL       reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    NOTIDENTICAL    reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    EQUALSLOGICAL   reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    DIFFERENT       reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    GREATEREQUAL    reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    LESSEQUAL       reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    GREATERTHAN     reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    LESSTHAN        reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    ANDlOGICAL      reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    ORLOGICAL       reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    COMMA           reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    POINT           reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    SEMICOLON       reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    RPAREN          reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)
    RBRACKET        reduce using rule 38 (elemento_logico -> elemento_string comparador elemento_string .)


state 157

    (31) elemento_string -> VARIABLE .

    IDENTICAL       reduce using rule 31 (elemento_string -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 31 (elemento_string -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 31 (elemento_string -> VARIABLE .)
    DIFFERENT       reduce using rule 31 (elemento_string -> VARIABLE .)
    GREATEREQUAL    reduce using rule 31 (elemento_string -> VARIABLE .)
    LESSEQUAL       reduce using rule 31 (elemento_string -> VARIABLE .)
    GREATERTHAN     reduce using rule 31 (elemento_string -> VARIABLE .)
    LESSTHAN        reduce using rule 31 (elemento_string -> VARIABLE .)
    ANDlOGICAL      reduce using rule 31 (elemento_string -> VARIABLE .)
    ORLOGICAL       reduce using rule 31 (elemento_string -> VARIABLE .)
    COMMA           reduce using rule 31 (elemento_string -> VARIABLE .)
    POINT           reduce using rule 31 (elemento_string -> VARIABLE .)
    SEMICOLON       reduce using rule 31 (elemento_string -> VARIABLE .)
    RPAREN          reduce using rule 31 (elemento_string -> VARIABLE .)
    RBRACKET        reduce using rule 31 (elemento_string -> VARIABLE .)
    ARROW           reduce using rule 31 (elemento_string -> VARIABLE .)


state 158

    (19) elemento_numerico -> elemento_numerico operador elemento_numerico .
    (19) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (24) operador -> . PLUS
    (25) operador -> . MINUS
    (26) operador -> . DIVIDE
    (27) operador -> . EXPONENTIAL
    (28) operador -> . TIMES

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENTIAL resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
    IDENTICAL       reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    NOTIDENTICAL    reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    EQUALSLOGICAL   reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    DIFFERENT       reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    GREATEREQUAL    reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    LESSEQUAL       reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    GREATERTHAN     reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    LESSTHAN        reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    ANDlOGICAL      reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    ORLOGICAL       reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    COMMA           reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    POINT           reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    SEMICOLON       reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    RPAREN          reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    RBRACKET        reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    EXPONENTIAL     shift and go to state 112
    TIMES           shift and go to state 113

  ! PLUS            [ reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! MINUS           [ reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! DIVIDE          [ reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! EXPONENTIAL     [ reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! TIMES           [ reduce using rule 19 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]

    operador                       shift and go to state 107

state 159

    (22) elemento_numerico -> LPAREN . elemento_numerico RPAREN
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE

    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 159
    VARIABLE        shift and go to state 160

    elemento_numerico              shift and go to state 193

state 160

    (23) elemento_numerico -> VARIABLE .

    PLUS            reduce using rule 23 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 23 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 23 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 23 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    COMMA           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    POINT           reduce using rule 23 (elemento_numerico -> VARIABLE .)
    SEMICOLON       reduce using rule 23 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 23 (elemento_numerico -> VARIABLE .)
    RBRACKET        reduce using rule 23 (elemento_numerico -> VARIABLE .)


state 161

    (37) elemento_logico -> elemento_numerico comparador elemento_numerico .
    (19) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (24) operador -> . PLUS
    (25) operador -> . MINUS
    (26) operador -> . DIVIDE
    (27) operador -> . EXPONENTIAL
    (28) operador -> . TIMES

    IDENTICAL       reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    NOTIDENTICAL    reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    EQUALSLOGICAL   reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    DIFFERENT       reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    GREATEREQUAL    reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    LESSEQUAL       reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    GREATERTHAN     reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    LESSTHAN        reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    ANDlOGICAL      reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    ORLOGICAL       reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    COMMA           reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    POINT           reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    SEMICOLON       reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    RPAREN          reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    RBRACKET        reduce using rule 37 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    EXPONENTIAL     shift and go to state 112
    TIMES           shift and go to state 113

    operador                       shift and go to state 107

state 162

    (33) elemento_logico -> elemento_logico comparador elemento_logico .
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

  ! shift/reduce conflict for IDENTICAL resolved as shift
  ! shift/reduce conflict for NOTIDENTICAL resolved as shift
  ! shift/reduce conflict for EQUALSLOGICAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for ANDlOGICAL resolved as shift
  ! shift/reduce conflict for ORLOGICAL resolved as shift
    COMMA           reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .)
    POINT           reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .)
    SEMICOLON       reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .)
    RPAREN          reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .)
    RBRACKET        reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .)
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

  ! IDENTICAL       [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! NOTIDENTICAL    [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! EQUALSLOGICAL   [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! DIFFERENT       [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! GREATEREQUAL    [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! LESSEQUAL       [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! GREATERTHAN     [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! LESSTHAN        [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! ANDlOGICAL      [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! ORLOGICAL       [ reduce using rule 33 (elemento_logico -> elemento_logico comparador elemento_logico .) ]

    comparador                     shift and go to state 114

state 163

    (22) elemento_numerico -> LPAREN elemento_numerico RPAREN .

    PLUS            reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    MINUS           reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    DIVIDE          reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    EXPONENTIAL     reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    TIMES           reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    IDENTICAL       reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    NOTIDENTICAL    reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    EQUALSLOGICAL   reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    DIFFERENT       reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    GREATEREQUAL    reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    LESSEQUAL       reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    GREATERTHAN     reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    LESSTHAN        reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    ANDlOGICAL      reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    ORLOGICAL       reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    COMMA           reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    POINT           reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    SEMICOLON       reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    RPAREN          reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    RBRACKET        reduce using rule 22 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)


state 164

    (35) elemento_logico -> LPAREN elemento_logico RPAREN .

    IDENTICAL       reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    NOTIDENTICAL    reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    EQUALSLOGICAL   reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    DIFFERENT       reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    GREATEREQUAL    reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    LESSEQUAL       reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    GREATERTHAN     reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    LESSTHAN        reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    ANDlOGICAL      reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    ORLOGICAL       reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    COMMA           reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    POINT           reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    SEMICOLON       reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    RPAREN          reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    RBRACKET        reduce using rule 35 (elemento_logico -> LPAREN elemento_logico RPAREN .)


state 165

    (22) elemento_numerico -> LPAREN elemento_numerico . RPAREN
    (37) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (19) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL
    (24) operador -> . PLUS
    (25) operador -> . MINUS
    (26) operador -> . DIVIDE
    (27) operador -> . EXPONENTIAL
    (28) operador -> . TIMES

    RPAREN          shift and go to state 163
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    EXPONENTIAL     shift and go to state 112
    TIMES           shift and go to state 113

    comparador                     shift and go to state 108
    operador                       shift and go to state 107

state 166

    (77) var_dump -> VAR_DUMP LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 194


state 167

    (129) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW . KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW . DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW . UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (133) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW . FIND LPAREN param RPAREN RPAREN SEMICOLON

    KEYS            shift and go to state 195
    DIFF            shift and go to state 196
    UNION           shift and go to state 197
    FIND            shift and go to state 198


state 168

    (76) print_r -> PRINT_R LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 199


state 169

    (78) var_export -> VAR_EXPORT LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 200


state 170

    (95) else_if -> ELSE . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    IF              shift and go to state 131


state 171

    (93) else -> ELSE LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 201


state 172

    (95) else_if -> ELSE IF LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 57
    LPAREN          shift and go to state 120
    VARIABLE        shift and go to state 121
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_logico                shift and go to state 202
    elemento_logico_pri            shift and go to state 56
    elemento_numerico              shift and go to state 122
    elemento_string                shift and go to state 118

state 173

    (94) else_if -> ELSEIF LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 203
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 114

state 174

    (89) if_structures -> if_r else_r ENDIF SEMICOLON .

    VARIABLE        reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    VAR             reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ECHO            reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    PRINT           reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    VAR_DUMP        reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    PRINT_R         reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    VAR_EXPORT      reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    IF              reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    WHILE           reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    $end            reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    RCURLY          reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ENDIF           reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ELSE            reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ELSEIF          reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)
    ENDWHILE        reduce using rule 89 (if_structures -> if_r else_r ENDIF SEMICOLON .)


state 175

    (90) if_structures -> if_r elseif_r else_r ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 204


state 176

    (91) if_structures -> if_r elseif_r ENDIF SEMICOLON .

    VARIABLE        reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    VAR             reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ECHO            reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    PRINT           reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    VAR_DUMP        reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    PRINT_R         reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    VAR_EXPORT      reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    IF              reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    WHILE           reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    $end            reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    RCURLY          reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ENDIF           reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ELSE            reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ELSEIF          reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)
    ENDWHILE        reduce using rule 91 (if_structures -> if_r elseif_r ENDIF SEMICOLON .)


state 177

    (98) else_r -> ELSE DOUBLEPOINT expresiones .

    ENDIF           reduce using rule 98 (else_r -> ELSE DOUBLEPOINT expresiones .)


state 178

    (99) elseif_r -> ELSEIF LPAREN elemento_logico . RPAREN DOUBLEPOINT expresiones
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 205
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 114

state 179

    (92) if -> IF LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY
    (97) if_r -> IF LPAREN elemento_logico RPAREN . DOUBLEPOINT expresiones

    LCURLY          shift and go to state 206
    DOUBLEPOINT     shift and go to state 207


state 180

    (102) while -> WHILE LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY
    (103) while -> WHILE LPAREN elemento_logico RPAREN . DOUBLEPOINT expresiones ENDWHILE SEMICOLON

    LCURLY          shift and go to state 208
    DOUBLEPOINT     shift and go to state 209


state 181

    (79) funciones_ingreso_datos -> VAR_EXPORT LPAREN param . COMMA elemento_logico RPAREN

    COMMA           shift and go to state 210


state 182

    (80) funciones_ingreso_datos -> READLINE LPAREN RPAREN .

    SEMICOLON       reduce using rule 80 (funciones_ingreso_datos -> READLINE LPAREN RPAREN .)


state 183

    (81) funciones_ingreso_datos -> READLINE LPAREN elemento_string . RPAREN

    RPAREN          shift and go to state 211


state 184

    (107) map -> NEW MAP LPAREN . LBRACKET todos_clave_valor RBRACKET RPAREN
    (108) map -> NEW MAP LPAREN . RPAREN

    LBRACKET        shift and go to state 212
    RPAREN          shift and go to state 213


state 185

    (113) vector -> NEW VECTOR LPAREN . LBRACKET params RBRACKET RPAREN
    (114) vector -> NEW VECTOR LPAREN . RPAREN

    LBRACKET        shift and go to state 214
    RPAREN          shift and go to state 215


state 186

    (122) set -> NEW SET LPAREN . LBRACKET params_unitype RBRACKET RPAREN
    (123) set -> NEW SET LPAREN . RPAREN

    LBRACKET        shift and go to state 216
    RPAREN          shift and go to state 217


state 187

    (140) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param . RPAREN SEMICOLON
    (55) params -> param .
    (56) params -> param . COMMA params

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 218
    COMMA           shift and go to state 94

  ! RPAREN          [ reduce using rule 55 (params -> param .) ]


state 188

    (141) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 219


state 189

    (142) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET . params RBRACKET RPAREN SEMICOLON
    (55) params -> . param
    (56) params -> . param COMMA params
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    params                         shift and go to state 220
    param                          shift and go to state 152
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 190

    (134) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param . RPAREN SEMICOLON
    (55) params -> param .
    (56) params -> param . COMMA params

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 221
    COMMA           shift and go to state 94

  ! RPAREN          [ reduce using rule 55 (params -> param .) ]


state 191

    (135) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 222


state 192

    (136) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET . params RBRACKET RPAREN SEMICOLON
    (55) params -> . param
    (56) params -> . param COMMA params
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    params                         shift and go to state 223
    param                          shift and go to state 152
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 193

    (22) elemento_numerico -> LPAREN elemento_numerico . RPAREN
    (19) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (24) operador -> . PLUS
    (25) operador -> . MINUS
    (26) operador -> . DIVIDE
    (27) operador -> . EXPONENTIAL
    (28) operador -> . TIMES

    RPAREN          shift and go to state 163
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    EXPONENTIAL     shift and go to state 112
    TIMES           shift and go to state 113

    operador                       shift and go to state 107

state 194

    (77) var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 77 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)


state 195

    (129) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS . LPAREN RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 224


state 196

    (130) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF . LPAREN VARIABLE RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 225


state 197

    (139) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION . LPAREN VARIABLE RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 226


state 198

    (133) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND . LPAREN param RPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 227


state 199

    (76) print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 76 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)


state 200

    (78) var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 78 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)


state 201

    (93) else -> ELSE LCURLY expresiones RCURLY .

    VARIABLE        reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    VAR             reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    IF              reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    $end            reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    ELSE            reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 93 (else -> ELSE LCURLY expresiones RCURLY .)


state 202

    (95) else_if -> ELSE IF LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 228
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 114

state 203

    (94) else_if -> ELSEIF LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY

    LCURLY          shift and go to state 229


state 204

    (90) if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .

    VARIABLE        reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    VAR             reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ECHO            reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    PRINT           reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    VAR_DUMP        reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    PRINT_R         reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    VAR_EXPORT      reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    IF              reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    WHILE           reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    $end            reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    RCURLY          reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ENDIF           reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ELSE            reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ELSEIF          reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)
    ENDWHILE        reduce using rule 90 (if_structures -> if_r elseif_r else_r ENDIF SEMICOLON .)


state 205

    (99) elseif_r -> ELSEIF LPAREN elemento_logico RPAREN . DOUBLEPOINT expresiones

    DOUBLEPOINT     shift and go to state 230


state 206

    (92) if -> IF LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 231
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 207

    (97) if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 232
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 208

    (102) while -> WHILE LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 233
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 209

    (103) while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT . expresiones ENDWHILE SEMICOLON
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 234
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 210

    (79) funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA . elemento_logico RPAREN
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NOTLOGICAL      shift and go to state 57
    LPAREN          shift and go to state 120
    VARIABLE        shift and go to state 121
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52

    elemento_logico                shift and go to state 235
    elemento_logico_pri            shift and go to state 56
    elemento_numerico              shift and go to state 122
    elemento_string                shift and go to state 118

state 211

    (81) funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN .

    SEMICOLON       reduce using rule 81 (funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN .)


state 212

    (107) map -> NEW MAP LPAREN LBRACKET . todos_clave_valor RBRACKET RPAREN
    (111) todos_clave_valor -> . clave_valor
    (112) todos_clave_valor -> . clave_valor COMMA todos_clave_valor
    (109) clave_valor -> . elemento_string ARROW param
    (110) clave_valor -> . NUMBER ARROW param
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NUMBER          shift and go to state 239
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    VARIABLE        shift and go to state 157

    todos_clave_valor              shift and go to state 236
    clave_valor                    shift and go to state 237
    elemento_string                shift and go to state 238

state 213

    (108) map -> NEW MAP LPAREN RPAREN .

    SEMICOLON       reduce using rule 108 (map -> NEW MAP LPAREN RPAREN .)


state 214

    (113) vector -> NEW VECTOR LPAREN LBRACKET . params RBRACKET RPAREN
    (55) params -> . param
    (56) params -> . param COMMA params
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    params                         shift and go to state 240
    param                          shift and go to state 152
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 215

    (114) vector -> NEW VECTOR LPAREN RPAREN .

    SEMICOLON       reduce using rule 114 (vector -> NEW VECTOR LPAREN RPAREN .)


state 216

    (122) set -> NEW SET LPAREN LBRACKET . params_unitype RBRACKET RPAREN
    (63) params_unitype -> . param
    (64) params_unitype -> . param COMMA params
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    params_unitype                 shift and go to state 241
    param                          shift and go to state 242
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 217

    (123) set -> NEW SET LPAREN RPAREN .

    SEMICOLON       reduce using rule 123 (set -> NEW SET LPAREN RPAREN .)


state 218

    (140) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 243


state 219

    (141) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 244


state 220

    (142) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params . RBRACKET RPAREN SEMICOLON

    RBRACKET        shift and go to state 245


state 221

    (134) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 246


state 222

    (135) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 247


state 223

    (136) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params . RBRACKET RPAREN SEMICOLON

    RBRACKET        shift and go to state 248


state 224

    (129) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN . RPAREN RPAREN SEMICOLON

    RPAREN          shift and go to state 249


state 225

    (130) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN . VARIABLE RPAREN RPAREN SEMICOLON

    VARIABLE        shift and go to state 250


state 226

    (139) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN . VARIABLE RPAREN RPAREN SEMICOLON

    VARIABLE        shift and go to state 251


state 227

    (133) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN . param RPAREN RPAREN SEMICOLON
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 252
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 228

    (95) else_if -> ELSE IF LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY

    LCURLY          shift and go to state 253


state 229

    (94) else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 254
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 230

    (99) elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 255
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 231

    (92) if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 256


state 232

    (97) if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .

    ENDIF           reduce using rule 97 (if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)
    ELSE            reduce using rule 97 (if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)
    ELSEIF          reduce using rule 97 (if_r -> IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)


state 233

    (102) while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 257


state 234

    (103) while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones . ENDWHILE SEMICOLON

    ENDWHILE        shift and go to state 258


state 235

    (79) funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico . RPAREN
    (33) elemento_logico -> elemento_logico . comparador elemento_logico
    (41) comparador -> . IDENTICAL
    (42) comparador -> . NOTIDENTICAL
    (43) comparador -> . EQUALSLOGICAL
    (44) comparador -> . DIFFERENT
    (45) comparador -> . GREATEREQUAL
    (46) comparador -> . LESSEQUAL
    (47) comparador -> . GREATERTHAN
    (48) comparador -> . LESSTHAN
    (49) comparador -> . ANDlOGICAL
    (50) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 259
    IDENTICAL       shift and go to state 97
    NOTIDENTICAL    shift and go to state 98
    EQUALSLOGICAL   shift and go to state 99
    DIFFERENT       shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATERTHAN     shift and go to state 103
    LESSTHAN        shift and go to state 104
    ANDlOGICAL      shift and go to state 105
    ORLOGICAL       shift and go to state 106

    comparador                     shift and go to state 114

state 236

    (107) map -> NEW MAP LPAREN LBRACKET todos_clave_valor . RBRACKET RPAREN

    RBRACKET        shift and go to state 260


state 237

    (111) todos_clave_valor -> clave_valor .
    (112) todos_clave_valor -> clave_valor . COMMA todos_clave_valor

    RBRACKET        reduce using rule 111 (todos_clave_valor -> clave_valor .)
    COMMA           shift and go to state 261


state 238

    (109) clave_valor -> elemento_string . ARROW param

    ARROW           shift and go to state 262


state 239

    (110) clave_valor -> NUMBER . ARROW param

    ARROW           shift and go to state 263


state 240

    (113) vector -> NEW VECTOR LPAREN LBRACKET params . RBRACKET RPAREN

    RBRACKET        shift and go to state 264


state 241

    (122) set -> NEW SET LPAREN LBRACKET params_unitype . RBRACKET RPAREN

    RBRACKET        shift and go to state 265


state 242

    (63) params_unitype -> param .
    (64) params_unitype -> param . COMMA params

    RBRACKET        reduce using rule 63 (params_unitype -> param .)
    COMMA           shift and go to state 266


state 243

    (140) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 140 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON .)


state 244

    (141) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .

    VARIABLE        reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ECHO            reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    PRINT           reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    RCURLY          reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ENDIF           reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 141 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON .)


state 245

    (142) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET . RPAREN SEMICOLON

    RPAREN          shift and go to state 267


state 246

    (134) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .

    VARIABLE        reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    WHILE           reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ENDIF           reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ELSE            reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 134 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON .)


state 247

    (135) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .

    VARIABLE        reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ECHO            reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    PRINT           reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    RCURLY          reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ENDIF           reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 135 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON .)


state 248

    (136) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET . RPAREN SEMICOLON

    RPAREN          shift and go to state 268


state 249

    (129) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 269


state 250

    (130) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE . RPAREN RPAREN SEMICOLON

    RPAREN          shift and go to state 270


state 251

    (139) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE . RPAREN RPAREN SEMICOLON

    RPAREN          shift and go to state 271


state 252

    (133) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param . RPAREN RPAREN SEMICOLON

    RPAREN          shift and go to state 272


state 253

    (95) else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . var_asignar
    (4) expresion -> . var_declarar
    (5) expresion -> . expresiones_de_salida
    (6) expresion -> . estructuras_de_control
    (7) expresion -> . var_plusminus
    (8) expresion -> . funciones_datos_estructurados
    (10) var_asignar -> . VARIABLE EQUALS var_asignar_contenido SEMICOLON
    (9) var_declarar -> . VAR var_asignar
    (68) expresiones_de_salida -> . echo
    (69) expresiones_de_salida -> . print
    (70) expresiones_de_salida -> . var_dump
    (71) expresiones_de_salida -> . print_r
    (72) expresiones_de_salida -> . var_export
    (82) estructuras_de_control -> . if_structures
    (83) estructuras_de_control -> . estructuras_while
    (17) var_plusminus -> . VARIABLE PLUS PLUS SEMICOLON
    (18) var_plusminus -> . VARIABLE MINUS MINUS SEMICOLON
    (124) funciones_datos_estructurados -> . funciones_map
    (125) funciones_datos_estructurados -> . funciones_set
    (126) funciones_datos_estructurados -> . funciones_vector
    (73) echo -> . ECHO params SEMICOLON
    (74) echo -> . ECHO params_points SEMICOLON
    (75) print -> . PRINT param SEMICOLON
    (77) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (76) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (78) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (84) if_structures -> . if
    (85) if_structures -> . if else
    (86) if_structures -> . if else_if else
    (87) if_structures -> . if else_if
    (88) if_structures -> . if_r ENDIF SEMICOLON
    (89) if_structures -> . if_r else_r ENDIF SEMICOLON
    (90) if_structures -> . if_r elseif_r else_r ENDIF SEMICOLON
    (91) if_structures -> . if_r elseif_r ENDIF SEMICOLON
    (101) estructuras_while -> . while
    (127) funciones_map -> . key_map
    (128) funciones_map -> . diff_map
    (137) funciones_set -> . union_set
    (138) funciones_set -> . remove_set
    (131) funciones_vector -> . find_vector
    (132) funciones_vector -> . push_vector
    (92) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (97) if_r -> . IF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones
    (102) while -> . WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (103) while -> . WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON
    (129) key_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON
    (130) diff_map -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (139) union_set -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON
    (140) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN param RPAREN SEMICOLON
    (141) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN params RPAREN SEMICOLON
    (142) remove_set -> . VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON
    (133) find_vector -> . VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON
    (134) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN param RPAREN SEMICOLON
    (135) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN params RPAREN SEMICOLON
    (136) push_vector -> . VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON

    VARIABLE        shift and go to state 9
    VAR             shift and go to state 10
    ECHO            shift and go to state 21
    PRINT           shift and go to state 22
    VAR_DUMP        shift and go to state 23
    PRINT_R         shift and go to state 24
    VAR_EXPORT      shift and go to state 25
    IF              shift and go to state 35
    WHILE           shift and go to state 36

    expresiones                    shift and go to state 273
    expresion                      shift and go to state 2
    var_asignar                    shift and go to state 3
    var_declarar                   shift and go to state 4
    expresiones_de_salida          shift and go to state 5
    estructuras_de_control         shift and go to state 6
    var_plusminus                  shift and go to state 7
    funciones_datos_estructurados  shift and go to state 8
    echo                           shift and go to state 11
    print                          shift and go to state 12
    var_dump                       shift and go to state 13
    print_r                        shift and go to state 14
    var_export                     shift and go to state 15
    if_structures                  shift and go to state 16
    estructuras_while              shift and go to state 17
    funciones_map                  shift and go to state 18
    funciones_set                  shift and go to state 19
    funciones_vector               shift and go to state 20
    if                             shift and go to state 26
    if_r                           shift and go to state 27
    while                          shift and go to state 28
    key_map                        shift and go to state 29
    diff_map                       shift and go to state 30
    union_set                      shift and go to state 31
    remove_set                     shift and go to state 32
    find_vector                    shift and go to state 33
    push_vector                    shift and go to state 34

state 254

    (94) else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 274


state 255

    (99) elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .

    ENDIF           reduce using rule 99 (elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)
    ELSE            reduce using rule 99 (elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)
    ELSEIF          reduce using rule 99 (elseif_r -> ELSEIF LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones .)


state 256

    (92) if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    ELSE            reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 92 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 257

    (102) while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    VARIABLE        reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSE            reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 102 (while -> WHILE LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 258

    (103) while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE . SEMICOLON

    SEMICOLON       shift and go to state 275


state 259

    (79) funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN .

    SEMICOLON       reduce using rule 79 (funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN .)


state 260

    (107) map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET . RPAREN

    RPAREN          shift and go to state 276


state 261

    (112) todos_clave_valor -> clave_valor COMMA . todos_clave_valor
    (111) todos_clave_valor -> . clave_valor
    (112) todos_clave_valor -> . clave_valor COMMA todos_clave_valor
    (109) clave_valor -> . elemento_string ARROW param
    (110) clave_valor -> . NUMBER ARROW param
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE

    NUMBER          shift and go to state 239
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    VARIABLE        shift and go to state 157

    clave_valor                    shift and go to state 237
    todos_clave_valor              shift and go to state 277
    elemento_string                shift and go to state 238

state 262

    (109) clave_valor -> elemento_string ARROW . param
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    elemento_string                shift and go to state 48
    param                          shift and go to state 278
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 263

    (110) clave_valor -> NUMBER ARROW . param
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 279
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 264

    (113) vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET . RPAREN

    RPAREN          shift and go to state 280


state 265

    (122) set -> NEW SET LPAREN LBRACKET params_unitype RBRACKET . RPAREN

    RPAREN          shift and go to state 281


state 266

    (64) params_unitype -> param COMMA . params
    (55) params -> . param
    (56) params -> . param COMMA params
    (51) param -> . VARIABLE
    (52) param -> . elemento_string
    (53) param -> . elemento_numerico
    (54) param -> . elemento_logico
    (29) elemento_string -> . STRING
    (30) elemento_string -> . STRINGCC
    (31) elemento_string -> . VARIABLE
    (19) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (20) elemento_numerico -> . FLOAT
    (21) elemento_numerico -> . NUMBER
    (22) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (23) elemento_numerico -> . VARIABLE
    (32) elemento_logico -> . elemento_logico_pri
    (33) elemento_logico -> . elemento_logico comparador elemento_logico
    (34) elemento_logico -> . NOTLOGICAL elemento_logico
    (35) elemento_logico -> . LPAREN elemento_logico RPAREN
    (36) elemento_logico -> . VARIABLE
    (37) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (38) elemento_logico -> . elemento_string comparador elemento_string
    (39) elemento_logico_pri -> . TRUE
    (40) elemento_logico_pri -> . FALSE

    VARIABLE        shift and go to state 47
    STRING          shift and go to state 51
    STRINGCC        shift and go to state 52
    FLOAT           shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55
    NOTLOGICAL      shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59

    param                          shift and go to state 152
    params                         shift and go to state 282
    elemento_string                shift and go to state 48
    elemento_numerico              shift and go to state 49
    elemento_logico                shift and go to state 50
    elemento_logico_pri            shift and go to state 56

state 267

    (142) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 283


state 268

    (136) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 284


state 269

    (129) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 285


state 270

    (130) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 286


state 271

    (139) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 287


state 272

    (133) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 288


state 273

    (95) else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 289


state 274

    (94) else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    ELSE            reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 94 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 275

    (103) while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .

    VARIABLE        reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    VAR             reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ECHO            reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    PRINT           reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    VAR_DUMP        reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    PRINT_R         reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    VAR_EXPORT      reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    IF              reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    WHILE           reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    $end            reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    RCURLY          reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ENDIF           reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ELSE            reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ELSEIF          reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)
    ENDWHILE        reduce using rule 103 (while -> WHILE LPAREN elemento_logico RPAREN DOUBLEPOINT expresiones ENDWHILE SEMICOLON .)


state 276

    (107) map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN .

    SEMICOLON       reduce using rule 107 (map -> NEW MAP LPAREN LBRACKET todos_clave_valor RBRACKET RPAREN .)


state 277

    (112) todos_clave_valor -> clave_valor COMMA todos_clave_valor .

    RBRACKET        reduce using rule 112 (todos_clave_valor -> clave_valor COMMA todos_clave_valor .)


state 278

    (109) clave_valor -> elemento_string ARROW param .

    COMMA           reduce using rule 109 (clave_valor -> elemento_string ARROW param .)
    RBRACKET        reduce using rule 109 (clave_valor -> elemento_string ARROW param .)


state 279

    (110) clave_valor -> NUMBER ARROW param .

    COMMA           reduce using rule 110 (clave_valor -> NUMBER ARROW param .)
    RBRACKET        reduce using rule 110 (clave_valor -> NUMBER ARROW param .)


state 280

    (113) vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN .

    SEMICOLON       reduce using rule 113 (vector -> NEW VECTOR LPAREN LBRACKET params RBRACKET RPAREN .)


state 281

    (122) set -> NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN .

    SEMICOLON       reduce using rule 122 (set -> NEW SET LPAREN LBRACKET params_unitype RBRACKET RPAREN .)


state 282

    (64) params_unitype -> param COMMA params .

    RBRACKET        reduce using rule 64 (params_unitype -> param COMMA params .)


state 283

    (142) remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .

    VARIABLE        reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR             reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ECHO            reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    PRINT           reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    IF              reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    WHILE           reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    $end            reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    RCURLY          reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ENDIF           reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ELSE            reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 142 (remove_set -> VARIABLE SIMPLEARROW REMOVE LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)


state 284

    (136) push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .

    VARIABLE        reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR             reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ECHO            reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    PRINT           reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    IF              reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    WHILE           reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    $end            reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    RCURLY          reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ENDIF           reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ELSE            reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 136 (push_vector -> VARIABLE SIMPLEARROW PUSH LPAREN LBRACKET params RBRACKET RPAREN SEMICOLON .)


state 285

    (129) key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    RCURLY          reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ENDIF           reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 129 (key_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW KEYS LPAREN RPAREN RPAREN SEMICOLON .)


state 286

    (130) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 290


state 287

    (139) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 291


state 288

    (133) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 292


state 289

    (95) else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    ELSE            reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    WHILE           reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDIF           reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ENDWHILE        reduce using rule 95 (else_if -> ELSE IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 290

    (130) diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    RCURLY          reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ENDIF           reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 130 (diff_map -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW DIFF LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)


state 291

    (139) union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    RCURLY          reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ENDIF           reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 139 (union_set -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW UNION LPAREN VARIABLE RPAREN RPAREN SEMICOLON .)


state 292

    (133) find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    RCURLY          reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ENDIF           reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ELSEIF          reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)
    ENDWHILE        reduce using rule 133 (find_vector -> VAR_DUMP LPAREN VARIABLE SIMPLEARROW FIND LPAREN param RPAREN RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 26 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 26 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for IDENTICAL in state 119 resolved as shift
WARNING: shift/reduce conflict for NOTIDENTICAL in state 119 resolved as shift
WARNING: shift/reduce conflict for EQUALSLOGICAL in state 119 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 119 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 119 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 119 resolved as shift
WARNING: shift/reduce conflict for ANDlOGICAL in state 119 resolved as shift
WARNING: shift/reduce conflict for ORLOGICAL in state 119 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 128 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 128 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 158 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 158 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 158 resolved as shift
WARNING: shift/reduce conflict for EXPONENTIAL in state 158 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 158 resolved as shift
WARNING: shift/reduce conflict for IDENTICAL in state 162 resolved as shift
WARNING: shift/reduce conflict for NOTIDENTICAL in state 162 resolved as shift
WARNING: shift/reduce conflict for EQUALSLOGICAL in state 162 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 162 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 162 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 162 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 162 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 162 resolved as shift
WARNING: shift/reduce conflict for ANDlOGICAL in state 162 resolved as shift
WARNING: shift/reduce conflict for ORLOGICAL in state 162 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 187 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 190 resolved as shift
WARNING: reduce/reduce conflict in state 46 resolved using rule (params -> param)
WARNING: rejected rule (params_points -> param) in state 46
WARNING: reduce/reduce conflict in state 47 resolved using rule (elemento_string -> VARIABLE)
WARNING: rejected rule (param -> VARIABLE) in state 47
WARNING: reduce/reduce conflict in state 47 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 47
WARNING: reduce/reduce conflict in state 47 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 47
WARNING: reduce/reduce conflict in state 75 resolved using rule (var_asignar_contenido -> VARIABLE)
WARNING: rejected rule (elemento_numerico -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (var_asignar_contenido -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (var_asignar_contenido -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 117 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 117
WARNING: reduce/reduce conflict in state 117 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 117
WARNING: reduce/reduce conflict in state 121 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 121
WARNING: reduce/reduce conflict in state 121 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 121
WARNING: reduce/reduce conflict in state 125 resolved using rule (elemento_string -> VARIABLE)
WARNING: rejected rule (param -> VARIABLE) in state 125
WARNING: reduce/reduce conflict in state 125 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 125
WARNING: reduce/reduce conflict in state 125 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 125
WARNING: Rule (param -> VARIABLE) is never reduced
