Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ARROW
    AS
    BREAK
    CASE
    CATCH
    CLASS
    DO
    DOUBLEPOINT
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EXTENDS
    FINAL
    FOR
    FOREACH
    FUNCTION
    GLOBAL
    ID
    IMPLEMENTS
    INTERFACE
    LBRACKET
    NEW
    OR
    PHPEND
    PHPSTART
    PRIVATE
    PROTECTED
    PUBLIC
    RBRACKET
    RETURN
    STATIC
    SWITCH
    THROW
    WHILE
    XOR

Grammar

Rule 0     S' -> expresiones
Rule 1     expresiones -> expresion
Rule 2     expresiones -> expresion expresiones
Rule 3     expresion -> elemento_numerico
Rule 4     expresion -> var_asignar
Rule 5     expresion -> var_declarar
Rule 6     expresion -> expresiones_de_salida
Rule 7     expresion -> estructuras_de_control
Rule 8     var_declarar -> VAR var_asignar
Rule 9     var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON
Rule 10    var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON
Rule 11    var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON
Rule 12    var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON
Rule 13    var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON
Rule 14    elemento_numerico -> elemento_numerico operador elemento_numerico
Rule 15    elemento_numerico -> FLOAT
Rule 16    elemento_numerico -> NUMBER
Rule 17    elemento_numerico -> LPAREN elemento_numerico RPAREN
Rule 18    elemento_numerico -> VARIABLE
Rule 19    operador -> PLUS
Rule 20    operador -> MINUS
Rule 21    operador -> DIVIDE
Rule 22    operador -> EXPONENTIAL
Rule 23    operador -> TIMES
Rule 24    elemento_string -> STRING
Rule 25    elemento_string -> STRINGCC
Rule 26    elemento_string -> VARIABLE
Rule 27    elemento_logico -> TRUE
Rule 28    elemento_logico -> FALSE
Rule 29    elemento_logico -> elemento_logico comparador elemento_logico
Rule 30    elemento_logico -> NOTLOGICAL elemento_logico
Rule 31    elemento_logico -> LPAREN elemento_logico RPAREN
Rule 32    elemento_logico -> VARIABLE
Rule 33    elemento_logico -> elemento_numerico comparador elemento_numerico
Rule 34    elemento_logico -> elemento_string comparador elemento_string
Rule 35    comparador -> IDENTICAL
Rule 36    comparador -> NOTIDENTICAL
Rule 37    comparador -> EQUALSLOGICAL
Rule 38    comparador -> DIFFERENT
Rule 39    comparador -> GREATEREQUAL
Rule 40    comparador -> LESSEQUAL
Rule 41    comparador -> GREATERTHAN
Rule 42    comparador -> LESSTHAN
Rule 43    comparador -> ANDlOGICAL
Rule 44    comparador -> ORLOGICAL
Rule 45    param -> VARIABLE
Rule 46    param -> elemento_string
Rule 47    param -> elemento_numerico
Rule 48    param -> elemento_logico
Rule 49    params -> param
Rule 50    params -> param COMMA params
Rule 51    optional_params -> param
Rule 52    optional_params -> 
Rule 53    optional_params -> param COMMA optional_params
Rule 54    expresiones_de_salida -> echo
Rule 55    expresiones_de_salida -> print
Rule 56    expresiones_de_salida -> var_dump
Rule 57    expresiones_de_salida -> print_r
Rule 58    expresiones_de_salida -> var_export
Rule 59    echo -> ECHO params SEMICOLON
Rule 60    print -> PRINT param SEMICOLON
Rule 61    print_r -> PRINT_R LPAREN param RPAREN SEMICOLON
Rule 62    var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON
Rule 63    var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON
Rule 64    funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN
Rule 65    funciones_ingreso_datos -> READLINE LPAREN RPAREN
Rule 66    funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN
Rule 67    estructuras_de_control -> if_structures
Rule 68    if_structures -> if
Rule 69    if_structures -> if else
Rule 70    if_structures -> if else_if else
Rule 71    if_structures -> if else_if
Rule 72    if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 73    else -> ELSE LCURLY expresiones RCURLY
Rule 74    else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 75    else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
Rule 76    else_if -> else_if else_if

Terminals, with rules where they appear

                     : 52
AND                  : 
ANDlOGICAL           : 43
ARROW                : 
AS                   : 
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
COMMA                : 50 53 64
DIFFERENT            : 38
DIVIDE               : 21
DO                   : 
DOUBLEPOINT          : 
ECHO                 : 59
ELSE                 : 73
ELSEIF               : 74
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUALS               : 9 10 11 12 13
EQUALSLOGICAL        : 37
EXPONENTIAL          : 22
EXTENDS              : 
ElSE_IF              : 75
FALSE                : 28
FINAL                : 
FLOAT                : 15
FOR                  : 
FOREACH              : 
FUNCTION             : 
GLOBAL               : 
GREATEREQUAL         : 39
GREATERTHAN          : 41
ID                   : 
IDENTICAL            : 35
IF                   : 72
IMPLEMENTS           : 
INTERFACE            : 
LBRACKET             : 
LCURLY               : 72 73 74 75
LESSEQUAL            : 40
LESSTHAN             : 42
LPAREN               : 17 31 61 62 63 64 65 66 72 74 75
MINUS                : 20
NEW                  : 
NOTIDENTICAL         : 36
NOTLOGICAL           : 30
NUMBER               : 16
OR                   : 
ORLOGICAL            : 44
PHPEND               : 
PHPSTART             : 
PLUS                 : 19
PRINT                : 60
PRINT_R              : 61
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACKET             : 
RCURLY               : 72 73 74 75
READLINE             : 65 66
RETURN               : 
RPAREN               : 17 31 61 62 63 64 65 66 72 74 75
SEMICOLON            : 9 10 11 12 13 59 60 61 62 63
STATIC               : 
STRING               : 24
STRINGCC             : 25
SWITCH               : 
THROW                : 
TIMES                : 23
TRUE                 : 27
VAR                  : 8
VARIABLE             : 9 9 10 11 12 13 18 26 32 45
VAR_DUMP             : 62
VAR_EXPORT           : 63 64
WHILE                : 
XOR                  : 
error                : 

Nonterminals, with rules where they appear

comparador           : 29 33 34
echo                 : 54
elemento_logico      : 12 29 29 30 31 48 64 72 74 75
elemento_numerico    : 3 10 14 14 17 33 33 47
elemento_string      : 11 34 34 46 66
else                 : 69 70
else_if              : 70 71 76 76
estructuras_de_control : 7
expresion            : 1 2
expresiones          : 2 72 73 74 75 0
expresiones_de_salida : 6
funciones_ingreso_datos : 13
if                   : 68 69 70 71
if_structures        : 67
operador             : 14
optional_params      : 53
param                : 49 50 51 53 60 61 62 63 64
params               : 50 59
print                : 55
print_r              : 57
var_asignar          : 4 8
var_declarar         : 5
var_dump             : 56
var_export           : 58

Parsing method: LALR

state 0

    (0) S' -> . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . elemento_numerico
    (4) expresion -> . var_asignar
    (5) expresion -> . var_declarar
    (6) expresion -> . expresiones_de_salida
    (7) expresion -> . estructuras_de_control
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (9) var_asignar -> . VARIABLE EQUALS VARIABLE SEMICOLON
    (10) var_asignar -> . VARIABLE EQUALS elemento_numerico SEMICOLON
    (11) var_asignar -> . VARIABLE EQUALS elemento_string SEMICOLON
    (12) var_asignar -> . VARIABLE EQUALS elemento_logico SEMICOLON
    (13) var_asignar -> . VARIABLE EQUALS funciones_ingreso_datos SEMICOLON
    (8) var_declarar -> . VAR var_asignar
    (54) expresiones_de_salida -> . echo
    (55) expresiones_de_salida -> . print
    (56) expresiones_de_salida -> . var_dump
    (57) expresiones_de_salida -> . print_r
    (58) expresiones_de_salida -> . var_export
    (67) estructuras_de_control -> . if_structures
    (59) echo -> . ECHO params SEMICOLON
    (60) print -> . PRINT param SEMICOLON
    (62) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (61) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (63) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (68) if_structures -> . if
    (69) if_structures -> . if else
    (70) if_structures -> . if else_if else
    (71) if_structures -> . if else_if
    (72) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10
    VARIABLE        shift and go to state 11
    VAR             shift and go to state 12
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    VAR_DUMP        shift and go to state 21
    PRINT_R         shift and go to state 22
    VAR_EXPORT      shift and go to state 23
    IF              shift and go to state 25

    expresiones                    shift and go to state 1
    expresion                      shift and go to state 2
    elemento_numerico              shift and go to state 3
    var_asignar                    shift and go to state 4
    var_declarar                   shift and go to state 5
    expresiones_de_salida          shift and go to state 6
    estructuras_de_control         shift and go to state 7
    echo                           shift and go to state 13
    print                          shift and go to state 14
    var_dump                       shift and go to state 15
    print_r                        shift and go to state 16
    var_export                     shift and go to state 17
    if_structures                  shift and go to state 18
    if                             shift and go to state 24

state 1

    (0) S' -> expresiones .



state 2

    (1) expresiones -> expresion .
    (2) expresiones -> expresion . expresiones
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . elemento_numerico
    (4) expresion -> . var_asignar
    (5) expresion -> . var_declarar
    (6) expresion -> . expresiones_de_salida
    (7) expresion -> . estructuras_de_control
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (9) var_asignar -> . VARIABLE EQUALS VARIABLE SEMICOLON
    (10) var_asignar -> . VARIABLE EQUALS elemento_numerico SEMICOLON
    (11) var_asignar -> . VARIABLE EQUALS elemento_string SEMICOLON
    (12) var_asignar -> . VARIABLE EQUALS elemento_logico SEMICOLON
    (13) var_asignar -> . VARIABLE EQUALS funciones_ingreso_datos SEMICOLON
    (8) var_declarar -> . VAR var_asignar
    (54) expresiones_de_salida -> . echo
    (55) expresiones_de_salida -> . print
    (56) expresiones_de_salida -> . var_dump
    (57) expresiones_de_salida -> . print_r
    (58) expresiones_de_salida -> . var_export
    (67) estructuras_de_control -> . if_structures
    (59) echo -> . ECHO params SEMICOLON
    (60) print -> . PRINT param SEMICOLON
    (62) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (61) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (63) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (68) if_structures -> . if
    (69) if_structures -> . if else
    (70) if_structures -> . if else_if else
    (71) if_structures -> . if else_if
    (72) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    $end            reduce using rule 1 (expresiones -> expresion .)
    RCURLY          reduce using rule 1 (expresiones -> expresion .)
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10
    VARIABLE        shift and go to state 11
    VAR             shift and go to state 12
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    VAR_DUMP        shift and go to state 21
    PRINT_R         shift and go to state 22
    VAR_EXPORT      shift and go to state 23
    IF              shift and go to state 25

    expresion                      shift and go to state 2
    expresiones                    shift and go to state 26
    elemento_numerico              shift and go to state 3
    var_asignar                    shift and go to state 4
    var_declarar                   shift and go to state 5
    expresiones_de_salida          shift and go to state 6
    estructuras_de_control         shift and go to state 7
    echo                           shift and go to state 13
    print                          shift and go to state 14
    var_dump                       shift and go to state 15
    print_r                        shift and go to state 16
    var_export                     shift and go to state 17
    if_structures                  shift and go to state 18
    if                             shift and go to state 24

state 3

    (3) expresion -> elemento_numerico .
    (14) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (19) operador -> . PLUS
    (20) operador -> . MINUS
    (21) operador -> . DIVIDE
    (22) operador -> . EXPONENTIAL
    (23) operador -> . TIMES

    FLOAT           reduce using rule 3 (expresion -> elemento_numerico .)
    NUMBER          reduce using rule 3 (expresion -> elemento_numerico .)
    LPAREN          reduce using rule 3 (expresion -> elemento_numerico .)
    VARIABLE        reduce using rule 3 (expresion -> elemento_numerico .)
    VAR             reduce using rule 3 (expresion -> elemento_numerico .)
    ECHO            reduce using rule 3 (expresion -> elemento_numerico .)
    PRINT           reduce using rule 3 (expresion -> elemento_numerico .)
    VAR_DUMP        reduce using rule 3 (expresion -> elemento_numerico .)
    PRINT_R         reduce using rule 3 (expresion -> elemento_numerico .)
    VAR_EXPORT      reduce using rule 3 (expresion -> elemento_numerico .)
    IF              reduce using rule 3 (expresion -> elemento_numerico .)
    $end            reduce using rule 3 (expresion -> elemento_numerico .)
    RCURLY          reduce using rule 3 (expresion -> elemento_numerico .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    EXPONENTIAL     shift and go to state 31
    TIMES           shift and go to state 32

    operador                       shift and go to state 27

state 4

    (4) expresion -> var_asignar .

    FLOAT           reduce using rule 4 (expresion -> var_asignar .)
    NUMBER          reduce using rule 4 (expresion -> var_asignar .)
    LPAREN          reduce using rule 4 (expresion -> var_asignar .)
    VARIABLE        reduce using rule 4 (expresion -> var_asignar .)
    VAR             reduce using rule 4 (expresion -> var_asignar .)
    ECHO            reduce using rule 4 (expresion -> var_asignar .)
    PRINT           reduce using rule 4 (expresion -> var_asignar .)
    VAR_DUMP        reduce using rule 4 (expresion -> var_asignar .)
    PRINT_R         reduce using rule 4 (expresion -> var_asignar .)
    VAR_EXPORT      reduce using rule 4 (expresion -> var_asignar .)
    IF              reduce using rule 4 (expresion -> var_asignar .)
    $end            reduce using rule 4 (expresion -> var_asignar .)
    RCURLY          reduce using rule 4 (expresion -> var_asignar .)


state 5

    (5) expresion -> var_declarar .

    FLOAT           reduce using rule 5 (expresion -> var_declarar .)
    NUMBER          reduce using rule 5 (expresion -> var_declarar .)
    LPAREN          reduce using rule 5 (expresion -> var_declarar .)
    VARIABLE        reduce using rule 5 (expresion -> var_declarar .)
    VAR             reduce using rule 5 (expresion -> var_declarar .)
    ECHO            reduce using rule 5 (expresion -> var_declarar .)
    PRINT           reduce using rule 5 (expresion -> var_declarar .)
    VAR_DUMP        reduce using rule 5 (expresion -> var_declarar .)
    PRINT_R         reduce using rule 5 (expresion -> var_declarar .)
    VAR_EXPORT      reduce using rule 5 (expresion -> var_declarar .)
    IF              reduce using rule 5 (expresion -> var_declarar .)
    $end            reduce using rule 5 (expresion -> var_declarar .)
    RCURLY          reduce using rule 5 (expresion -> var_declarar .)


state 6

    (6) expresion -> expresiones_de_salida .

    FLOAT           reduce using rule 6 (expresion -> expresiones_de_salida .)
    NUMBER          reduce using rule 6 (expresion -> expresiones_de_salida .)
    LPAREN          reduce using rule 6 (expresion -> expresiones_de_salida .)
    VARIABLE        reduce using rule 6 (expresion -> expresiones_de_salida .)
    VAR             reduce using rule 6 (expresion -> expresiones_de_salida .)
    ECHO            reduce using rule 6 (expresion -> expresiones_de_salida .)
    PRINT           reduce using rule 6 (expresion -> expresiones_de_salida .)
    VAR_DUMP        reduce using rule 6 (expresion -> expresiones_de_salida .)
    PRINT_R         reduce using rule 6 (expresion -> expresiones_de_salida .)
    VAR_EXPORT      reduce using rule 6 (expresion -> expresiones_de_salida .)
    IF              reduce using rule 6 (expresion -> expresiones_de_salida .)
    $end            reduce using rule 6 (expresion -> expresiones_de_salida .)
    RCURLY          reduce using rule 6 (expresion -> expresiones_de_salida .)


state 7

    (7) expresion -> estructuras_de_control .

    FLOAT           reduce using rule 7 (expresion -> estructuras_de_control .)
    NUMBER          reduce using rule 7 (expresion -> estructuras_de_control .)
    LPAREN          reduce using rule 7 (expresion -> estructuras_de_control .)
    VARIABLE        reduce using rule 7 (expresion -> estructuras_de_control .)
    VAR             reduce using rule 7 (expresion -> estructuras_de_control .)
    ECHO            reduce using rule 7 (expresion -> estructuras_de_control .)
    PRINT           reduce using rule 7 (expresion -> estructuras_de_control .)
    VAR_DUMP        reduce using rule 7 (expresion -> estructuras_de_control .)
    PRINT_R         reduce using rule 7 (expresion -> estructuras_de_control .)
    VAR_EXPORT      reduce using rule 7 (expresion -> estructuras_de_control .)
    IF              reduce using rule 7 (expresion -> estructuras_de_control .)
    $end            reduce using rule 7 (expresion -> estructuras_de_control .)
    RCURLY          reduce using rule 7 (expresion -> estructuras_de_control .)


state 8

    (15) elemento_numerico -> FLOAT .

    PLUS            reduce using rule 15 (elemento_numerico -> FLOAT .)
    MINUS           reduce using rule 15 (elemento_numerico -> FLOAT .)
    DIVIDE          reduce using rule 15 (elemento_numerico -> FLOAT .)
    EXPONENTIAL     reduce using rule 15 (elemento_numerico -> FLOAT .)
    TIMES           reduce using rule 15 (elemento_numerico -> FLOAT .)
    FLOAT           reduce using rule 15 (elemento_numerico -> FLOAT .)
    NUMBER          reduce using rule 15 (elemento_numerico -> FLOAT .)
    LPAREN          reduce using rule 15 (elemento_numerico -> FLOAT .)
    VARIABLE        reduce using rule 15 (elemento_numerico -> FLOAT .)
    VAR             reduce using rule 15 (elemento_numerico -> FLOAT .)
    ECHO            reduce using rule 15 (elemento_numerico -> FLOAT .)
    PRINT           reduce using rule 15 (elemento_numerico -> FLOAT .)
    VAR_DUMP        reduce using rule 15 (elemento_numerico -> FLOAT .)
    PRINT_R         reduce using rule 15 (elemento_numerico -> FLOAT .)
    VAR_EXPORT      reduce using rule 15 (elemento_numerico -> FLOAT .)
    IF              reduce using rule 15 (elemento_numerico -> FLOAT .)
    $end            reduce using rule 15 (elemento_numerico -> FLOAT .)
    RCURLY          reduce using rule 15 (elemento_numerico -> FLOAT .)
    RPAREN          reduce using rule 15 (elemento_numerico -> FLOAT .)
    IDENTICAL       reduce using rule 15 (elemento_numerico -> FLOAT .)
    NOTIDENTICAL    reduce using rule 15 (elemento_numerico -> FLOAT .)
    EQUALSLOGICAL   reduce using rule 15 (elemento_numerico -> FLOAT .)
    DIFFERENT       reduce using rule 15 (elemento_numerico -> FLOAT .)
    GREATEREQUAL    reduce using rule 15 (elemento_numerico -> FLOAT .)
    LESSEQUAL       reduce using rule 15 (elemento_numerico -> FLOAT .)
    GREATERTHAN     reduce using rule 15 (elemento_numerico -> FLOAT .)
    LESSTHAN        reduce using rule 15 (elemento_numerico -> FLOAT .)
    ANDlOGICAL      reduce using rule 15 (elemento_numerico -> FLOAT .)
    ORLOGICAL       reduce using rule 15 (elemento_numerico -> FLOAT .)
    COMMA           reduce using rule 15 (elemento_numerico -> FLOAT .)
    SEMICOLON       reduce using rule 15 (elemento_numerico -> FLOAT .)


state 9

    (16) elemento_numerico -> NUMBER .

    PLUS            reduce using rule 16 (elemento_numerico -> NUMBER .)
    MINUS           reduce using rule 16 (elemento_numerico -> NUMBER .)
    DIVIDE          reduce using rule 16 (elemento_numerico -> NUMBER .)
    EXPONENTIAL     reduce using rule 16 (elemento_numerico -> NUMBER .)
    TIMES           reduce using rule 16 (elemento_numerico -> NUMBER .)
    FLOAT           reduce using rule 16 (elemento_numerico -> NUMBER .)
    NUMBER          reduce using rule 16 (elemento_numerico -> NUMBER .)
    LPAREN          reduce using rule 16 (elemento_numerico -> NUMBER .)
    VARIABLE        reduce using rule 16 (elemento_numerico -> NUMBER .)
    VAR             reduce using rule 16 (elemento_numerico -> NUMBER .)
    ECHO            reduce using rule 16 (elemento_numerico -> NUMBER .)
    PRINT           reduce using rule 16 (elemento_numerico -> NUMBER .)
    VAR_DUMP        reduce using rule 16 (elemento_numerico -> NUMBER .)
    PRINT_R         reduce using rule 16 (elemento_numerico -> NUMBER .)
    VAR_EXPORT      reduce using rule 16 (elemento_numerico -> NUMBER .)
    IF              reduce using rule 16 (elemento_numerico -> NUMBER .)
    $end            reduce using rule 16 (elemento_numerico -> NUMBER .)
    RCURLY          reduce using rule 16 (elemento_numerico -> NUMBER .)
    RPAREN          reduce using rule 16 (elemento_numerico -> NUMBER .)
    IDENTICAL       reduce using rule 16 (elemento_numerico -> NUMBER .)
    NOTIDENTICAL    reduce using rule 16 (elemento_numerico -> NUMBER .)
    EQUALSLOGICAL   reduce using rule 16 (elemento_numerico -> NUMBER .)
    DIFFERENT       reduce using rule 16 (elemento_numerico -> NUMBER .)
    GREATEREQUAL    reduce using rule 16 (elemento_numerico -> NUMBER .)
    LESSEQUAL       reduce using rule 16 (elemento_numerico -> NUMBER .)
    GREATERTHAN     reduce using rule 16 (elemento_numerico -> NUMBER .)
    LESSTHAN        reduce using rule 16 (elemento_numerico -> NUMBER .)
    ANDlOGICAL      reduce using rule 16 (elemento_numerico -> NUMBER .)
    ORLOGICAL       reduce using rule 16 (elemento_numerico -> NUMBER .)
    COMMA           reduce using rule 16 (elemento_numerico -> NUMBER .)
    SEMICOLON       reduce using rule 16 (elemento_numerico -> NUMBER .)


state 10

    (17) elemento_numerico -> LPAREN . elemento_numerico RPAREN
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE

    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10
    VARIABLE        shift and go to state 34

    elemento_numerico              shift and go to state 33

state 11

    (18) elemento_numerico -> VARIABLE .
    (9) var_asignar -> VARIABLE . EQUALS VARIABLE SEMICOLON
    (10) var_asignar -> VARIABLE . EQUALS elemento_numerico SEMICOLON
    (11) var_asignar -> VARIABLE . EQUALS elemento_string SEMICOLON
    (12) var_asignar -> VARIABLE . EQUALS elemento_logico SEMICOLON
    (13) var_asignar -> VARIABLE . EQUALS funciones_ingreso_datos SEMICOLON

    PLUS            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    FLOAT           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    NUMBER          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LPAREN          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    VARIABLE        reduce using rule 18 (elemento_numerico -> VARIABLE .)
    VAR             reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ECHO            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    PRINT           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    VAR_DUMP        reduce using rule 18 (elemento_numerico -> VARIABLE .)
    PRINT_R         reduce using rule 18 (elemento_numerico -> VARIABLE .)
    VAR_EXPORT      reduce using rule 18 (elemento_numerico -> VARIABLE .)
    IF              reduce using rule 18 (elemento_numerico -> VARIABLE .)
    $end            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    RCURLY          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EQUALS          shift and go to state 35


state 12

    (8) var_declarar -> VAR . var_asignar
    (9) var_asignar -> . VARIABLE EQUALS VARIABLE SEMICOLON
    (10) var_asignar -> . VARIABLE EQUALS elemento_numerico SEMICOLON
    (11) var_asignar -> . VARIABLE EQUALS elemento_string SEMICOLON
    (12) var_asignar -> . VARIABLE EQUALS elemento_logico SEMICOLON
    (13) var_asignar -> . VARIABLE EQUALS funciones_ingreso_datos SEMICOLON

    VARIABLE        shift and go to state 37

    var_asignar                    shift and go to state 36

state 13

    (54) expresiones_de_salida -> echo .

    FLOAT           reduce using rule 54 (expresiones_de_salida -> echo .)
    NUMBER          reduce using rule 54 (expresiones_de_salida -> echo .)
    LPAREN          reduce using rule 54 (expresiones_de_salida -> echo .)
    VARIABLE        reduce using rule 54 (expresiones_de_salida -> echo .)
    VAR             reduce using rule 54 (expresiones_de_salida -> echo .)
    ECHO            reduce using rule 54 (expresiones_de_salida -> echo .)
    PRINT           reduce using rule 54 (expresiones_de_salida -> echo .)
    VAR_DUMP        reduce using rule 54 (expresiones_de_salida -> echo .)
    PRINT_R         reduce using rule 54 (expresiones_de_salida -> echo .)
    VAR_EXPORT      reduce using rule 54 (expresiones_de_salida -> echo .)
    IF              reduce using rule 54 (expresiones_de_salida -> echo .)
    $end            reduce using rule 54 (expresiones_de_salida -> echo .)
    RCURLY          reduce using rule 54 (expresiones_de_salida -> echo .)


state 14

    (55) expresiones_de_salida -> print .

    FLOAT           reduce using rule 55 (expresiones_de_salida -> print .)
    NUMBER          reduce using rule 55 (expresiones_de_salida -> print .)
    LPAREN          reduce using rule 55 (expresiones_de_salida -> print .)
    VARIABLE        reduce using rule 55 (expresiones_de_salida -> print .)
    VAR             reduce using rule 55 (expresiones_de_salida -> print .)
    ECHO            reduce using rule 55 (expresiones_de_salida -> print .)
    PRINT           reduce using rule 55 (expresiones_de_salida -> print .)
    VAR_DUMP        reduce using rule 55 (expresiones_de_salida -> print .)
    PRINT_R         reduce using rule 55 (expresiones_de_salida -> print .)
    VAR_EXPORT      reduce using rule 55 (expresiones_de_salida -> print .)
    IF              reduce using rule 55 (expresiones_de_salida -> print .)
    $end            reduce using rule 55 (expresiones_de_salida -> print .)
    RCURLY          reduce using rule 55 (expresiones_de_salida -> print .)


state 15

    (56) expresiones_de_salida -> var_dump .

    FLOAT           reduce using rule 56 (expresiones_de_salida -> var_dump .)
    NUMBER          reduce using rule 56 (expresiones_de_salida -> var_dump .)
    LPAREN          reduce using rule 56 (expresiones_de_salida -> var_dump .)
    VARIABLE        reduce using rule 56 (expresiones_de_salida -> var_dump .)
    VAR             reduce using rule 56 (expresiones_de_salida -> var_dump .)
    ECHO            reduce using rule 56 (expresiones_de_salida -> var_dump .)
    PRINT           reduce using rule 56 (expresiones_de_salida -> var_dump .)
    VAR_DUMP        reduce using rule 56 (expresiones_de_salida -> var_dump .)
    PRINT_R         reduce using rule 56 (expresiones_de_salida -> var_dump .)
    VAR_EXPORT      reduce using rule 56 (expresiones_de_salida -> var_dump .)
    IF              reduce using rule 56 (expresiones_de_salida -> var_dump .)
    $end            reduce using rule 56 (expresiones_de_salida -> var_dump .)
    RCURLY          reduce using rule 56 (expresiones_de_salida -> var_dump .)


state 16

    (57) expresiones_de_salida -> print_r .

    FLOAT           reduce using rule 57 (expresiones_de_salida -> print_r .)
    NUMBER          reduce using rule 57 (expresiones_de_salida -> print_r .)
    LPAREN          reduce using rule 57 (expresiones_de_salida -> print_r .)
    VARIABLE        reduce using rule 57 (expresiones_de_salida -> print_r .)
    VAR             reduce using rule 57 (expresiones_de_salida -> print_r .)
    ECHO            reduce using rule 57 (expresiones_de_salida -> print_r .)
    PRINT           reduce using rule 57 (expresiones_de_salida -> print_r .)
    VAR_DUMP        reduce using rule 57 (expresiones_de_salida -> print_r .)
    PRINT_R         reduce using rule 57 (expresiones_de_salida -> print_r .)
    VAR_EXPORT      reduce using rule 57 (expresiones_de_salida -> print_r .)
    IF              reduce using rule 57 (expresiones_de_salida -> print_r .)
    $end            reduce using rule 57 (expresiones_de_salida -> print_r .)
    RCURLY          reduce using rule 57 (expresiones_de_salida -> print_r .)


state 17

    (58) expresiones_de_salida -> var_export .

    FLOAT           reduce using rule 58 (expresiones_de_salida -> var_export .)
    NUMBER          reduce using rule 58 (expresiones_de_salida -> var_export .)
    LPAREN          reduce using rule 58 (expresiones_de_salida -> var_export .)
    VARIABLE        reduce using rule 58 (expresiones_de_salida -> var_export .)
    VAR             reduce using rule 58 (expresiones_de_salida -> var_export .)
    ECHO            reduce using rule 58 (expresiones_de_salida -> var_export .)
    PRINT           reduce using rule 58 (expresiones_de_salida -> var_export .)
    VAR_DUMP        reduce using rule 58 (expresiones_de_salida -> var_export .)
    PRINT_R         reduce using rule 58 (expresiones_de_salida -> var_export .)
    VAR_EXPORT      reduce using rule 58 (expresiones_de_salida -> var_export .)
    IF              reduce using rule 58 (expresiones_de_salida -> var_export .)
    $end            reduce using rule 58 (expresiones_de_salida -> var_export .)
    RCURLY          reduce using rule 58 (expresiones_de_salida -> var_export .)


state 18

    (67) estructuras_de_control -> if_structures .

    FLOAT           reduce using rule 67 (estructuras_de_control -> if_structures .)
    NUMBER          reduce using rule 67 (estructuras_de_control -> if_structures .)
    LPAREN          reduce using rule 67 (estructuras_de_control -> if_structures .)
    VARIABLE        reduce using rule 67 (estructuras_de_control -> if_structures .)
    VAR             reduce using rule 67 (estructuras_de_control -> if_structures .)
    ECHO            reduce using rule 67 (estructuras_de_control -> if_structures .)
    PRINT           reduce using rule 67 (estructuras_de_control -> if_structures .)
    VAR_DUMP        reduce using rule 67 (estructuras_de_control -> if_structures .)
    PRINT_R         reduce using rule 67 (estructuras_de_control -> if_structures .)
    VAR_EXPORT      reduce using rule 67 (estructuras_de_control -> if_structures .)
    IF              reduce using rule 67 (estructuras_de_control -> if_structures .)
    $end            reduce using rule 67 (estructuras_de_control -> if_structures .)
    RCURLY          reduce using rule 67 (estructuras_de_control -> if_structures .)


state 19

    (59) echo -> ECHO . params SEMICOLON
    (49) params -> . param
    (50) params -> . param COMMA params
    (45) param -> . VARIABLE
    (46) param -> . elemento_string
    (47) param -> . elemento_numerico
    (48) param -> . elemento_logico
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string

    VARIABLE        shift and go to state 40
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49

    params                         shift and go to state 38
    param                          shift and go to state 39
    elemento_string                shift and go to state 41
    elemento_numerico              shift and go to state 42
    elemento_logico                shift and go to state 43

state 20

    (60) print -> PRINT . param SEMICOLON
    (45) param -> . VARIABLE
    (46) param -> . elemento_string
    (47) param -> . elemento_numerico
    (48) param -> . elemento_logico
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string

    VARIABLE        shift and go to state 40
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49

    param                          shift and go to state 50
    elemento_string                shift and go to state 41
    elemento_numerico              shift and go to state 42
    elemento_logico                shift and go to state 43

state 21

    (62) var_dump -> VAR_DUMP . LPAREN param RPAREN SEMICOLON

    LPAREN          shift and go to state 51


state 22

    (61) print_r -> PRINT_R . LPAREN param RPAREN SEMICOLON

    LPAREN          shift and go to state 52


state 23

    (63) var_export -> VAR_EXPORT . LPAREN param RPAREN SEMICOLON

    LPAREN          shift and go to state 53


state 24

    (68) if_structures -> if .
    (69) if_structures -> if . else
    (70) if_structures -> if . else_if else
    (71) if_structures -> if . else_if
    (73) else -> . ELSE LCURLY expresiones RCURLY
    (74) else_if -> . ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (75) else_if -> . ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (76) else_if -> . else_if else_if

    FLOAT           reduce using rule 68 (if_structures -> if .)
    NUMBER          reduce using rule 68 (if_structures -> if .)
    LPAREN          reduce using rule 68 (if_structures -> if .)
    VARIABLE        reduce using rule 68 (if_structures -> if .)
    VAR             reduce using rule 68 (if_structures -> if .)
    ECHO            reduce using rule 68 (if_structures -> if .)
    PRINT           reduce using rule 68 (if_structures -> if .)
    VAR_DUMP        reduce using rule 68 (if_structures -> if .)
    PRINT_R         reduce using rule 68 (if_structures -> if .)
    VAR_EXPORT      reduce using rule 68 (if_structures -> if .)
    IF              reduce using rule 68 (if_structures -> if .)
    $end            reduce using rule 68 (if_structures -> if .)
    RCURLY          reduce using rule 68 (if_structures -> if .)
    ELSE            shift and go to state 56
    ELSEIF          shift and go to state 57
    ElSE_IF         shift and go to state 58

    else                           shift and go to state 54
    else_if                        shift and go to state 55

state 25

    (72) if -> IF . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    LPAREN          shift and go to state 59


state 26

    (2) expresiones -> expresion expresiones .

    $end            reduce using rule 2 (expresiones -> expresion expresiones .)
    RCURLY          reduce using rule 2 (expresiones -> expresion expresiones .)


state 27

    (14) elemento_numerico -> elemento_numerico operador . elemento_numerico
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE

    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10
    VARIABLE        shift and go to state 34

    elemento_numerico              shift and go to state 60

state 28

    (19) operador -> PLUS .

    FLOAT           reduce using rule 19 (operador -> PLUS .)
    NUMBER          reduce using rule 19 (operador -> PLUS .)
    LPAREN          reduce using rule 19 (operador -> PLUS .)
    VARIABLE        reduce using rule 19 (operador -> PLUS .)


state 29

    (20) operador -> MINUS .

    FLOAT           reduce using rule 20 (operador -> MINUS .)
    NUMBER          reduce using rule 20 (operador -> MINUS .)
    LPAREN          reduce using rule 20 (operador -> MINUS .)
    VARIABLE        reduce using rule 20 (operador -> MINUS .)


state 30

    (21) operador -> DIVIDE .

    FLOAT           reduce using rule 21 (operador -> DIVIDE .)
    NUMBER          reduce using rule 21 (operador -> DIVIDE .)
    LPAREN          reduce using rule 21 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 21 (operador -> DIVIDE .)


state 31

    (22) operador -> EXPONENTIAL .

    FLOAT           reduce using rule 22 (operador -> EXPONENTIAL .)
    NUMBER          reduce using rule 22 (operador -> EXPONENTIAL .)
    LPAREN          reduce using rule 22 (operador -> EXPONENTIAL .)
    VARIABLE        reduce using rule 22 (operador -> EXPONENTIAL .)


state 32

    (23) operador -> TIMES .

    FLOAT           reduce using rule 23 (operador -> TIMES .)
    NUMBER          reduce using rule 23 (operador -> TIMES .)
    LPAREN          reduce using rule 23 (operador -> TIMES .)
    VARIABLE        reduce using rule 23 (operador -> TIMES .)


state 33

    (17) elemento_numerico -> LPAREN elemento_numerico . RPAREN
    (14) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (19) operador -> . PLUS
    (20) operador -> . MINUS
    (21) operador -> . DIVIDE
    (22) operador -> . EXPONENTIAL
    (23) operador -> . TIMES

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    EXPONENTIAL     shift and go to state 31
    TIMES           shift and go to state 32

    operador                       shift and go to state 27

state 34

    (18) elemento_numerico -> VARIABLE .

    RPAREN          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    FLOAT           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    NUMBER          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LPAREN          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    VARIABLE        reduce using rule 18 (elemento_numerico -> VARIABLE .)
    VAR             reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ECHO            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    PRINT           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    VAR_DUMP        reduce using rule 18 (elemento_numerico -> VARIABLE .)
    PRINT_R         reduce using rule 18 (elemento_numerico -> VARIABLE .)
    VAR_EXPORT      reduce using rule 18 (elemento_numerico -> VARIABLE .)
    IF              reduce using rule 18 (elemento_numerico -> VARIABLE .)
    $end            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    RCURLY          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    COMMA           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    SEMICOLON       reduce using rule 18 (elemento_numerico -> VARIABLE .)


state 35

    (9) var_asignar -> VARIABLE EQUALS . VARIABLE SEMICOLON
    (10) var_asignar -> VARIABLE EQUALS . elemento_numerico SEMICOLON
    (11) var_asignar -> VARIABLE EQUALS . elemento_string SEMICOLON
    (12) var_asignar -> VARIABLE EQUALS . elemento_logico SEMICOLON
    (13) var_asignar -> VARIABLE EQUALS . funciones_ingreso_datos SEMICOLON
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string
    (64) funciones_ingreso_datos -> . VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN
    (65) funciones_ingreso_datos -> . READLINE LPAREN RPAREN
    (66) funciones_ingreso_datos -> . READLINE LPAREN elemento_string RPAREN

    VARIABLE        shift and go to state 62
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 46
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49
    VAR_EXPORT      shift and go to state 67
    READLINE        shift and go to state 68

    elemento_numerico              shift and go to state 63
    elemento_string                shift and go to state 64
    elemento_logico                shift and go to state 65
    funciones_ingreso_datos        shift and go to state 66

state 36

    (8) var_declarar -> VAR var_asignar .

    FLOAT           reduce using rule 8 (var_declarar -> VAR var_asignar .)
    NUMBER          reduce using rule 8 (var_declarar -> VAR var_asignar .)
    LPAREN          reduce using rule 8 (var_declarar -> VAR var_asignar .)
    VARIABLE        reduce using rule 8 (var_declarar -> VAR var_asignar .)
    VAR             reduce using rule 8 (var_declarar -> VAR var_asignar .)
    ECHO            reduce using rule 8 (var_declarar -> VAR var_asignar .)
    PRINT           reduce using rule 8 (var_declarar -> VAR var_asignar .)
    VAR_DUMP        reduce using rule 8 (var_declarar -> VAR var_asignar .)
    PRINT_R         reduce using rule 8 (var_declarar -> VAR var_asignar .)
    VAR_EXPORT      reduce using rule 8 (var_declarar -> VAR var_asignar .)
    IF              reduce using rule 8 (var_declarar -> VAR var_asignar .)
    $end            reduce using rule 8 (var_declarar -> VAR var_asignar .)
    RCURLY          reduce using rule 8 (var_declarar -> VAR var_asignar .)


state 37

    (9) var_asignar -> VARIABLE . EQUALS VARIABLE SEMICOLON
    (10) var_asignar -> VARIABLE . EQUALS elemento_numerico SEMICOLON
    (11) var_asignar -> VARIABLE . EQUALS elemento_string SEMICOLON
    (12) var_asignar -> VARIABLE . EQUALS elemento_logico SEMICOLON
    (13) var_asignar -> VARIABLE . EQUALS funciones_ingreso_datos SEMICOLON

    EQUALS          shift and go to state 35


state 38

    (59) echo -> ECHO params . SEMICOLON

    SEMICOLON       shift and go to state 69


state 39

    (49) params -> param .
    (50) params -> param . COMMA params

    SEMICOLON       reduce using rule 49 (params -> param .)
    COMMA           shift and go to state 70


state 40

    (45) param -> VARIABLE .
    (26) elemento_string -> VARIABLE .
    (18) elemento_numerico -> VARIABLE .
    (32) elemento_logico -> VARIABLE .

  ! reduce/reduce conflict for COMMA resolved using rule 26 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 26 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 26 (elemento_string -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 18 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    COMMA           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    SEMICOLON       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 18 (elemento_numerico -> VARIABLE .)

  ! COMMA           [ reduce using rule 45 (param -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 45 (param -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 45 (param -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]


state 41

    (46) param -> elemento_string .
    (34) elemento_logico -> elemento_string . comparador elemento_string
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    COMMA           reduce using rule 46 (param -> elemento_string .)
    SEMICOLON       reduce using rule 46 (param -> elemento_string .)
    RPAREN          reduce using rule 46 (param -> elemento_string .)
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 71

state 42

    (47) param -> elemento_numerico .
    (14) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (33) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (19) operador -> . PLUS
    (20) operador -> . MINUS
    (21) operador -> . DIVIDE
    (22) operador -> . EXPONENTIAL
    (23) operador -> . TIMES
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    COMMA           reduce using rule 47 (param -> elemento_numerico .)
    SEMICOLON       reduce using rule 47 (param -> elemento_numerico .)
    RPAREN          reduce using rule 47 (param -> elemento_numerico .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    EXPONENTIAL     shift and go to state 31
    TIMES           shift and go to state 32
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    operador                       shift and go to state 27
    comparador                     shift and go to state 82

state 43

    (48) param -> elemento_logico .
    (29) elemento_logico -> elemento_logico . comparador elemento_logico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    COMMA           reduce using rule 48 (param -> elemento_logico .)
    SEMICOLON       reduce using rule 48 (param -> elemento_logico .)
    RPAREN          reduce using rule 48 (param -> elemento_logico .)
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 83

state 44

    (24) elemento_string -> STRING .

    IDENTICAL       reduce using rule 24 (elemento_string -> STRING .)
    NOTIDENTICAL    reduce using rule 24 (elemento_string -> STRING .)
    EQUALSLOGICAL   reduce using rule 24 (elemento_string -> STRING .)
    DIFFERENT       reduce using rule 24 (elemento_string -> STRING .)
    GREATEREQUAL    reduce using rule 24 (elemento_string -> STRING .)
    LESSEQUAL       reduce using rule 24 (elemento_string -> STRING .)
    GREATERTHAN     reduce using rule 24 (elemento_string -> STRING .)
    LESSTHAN        reduce using rule 24 (elemento_string -> STRING .)
    ANDlOGICAL      reduce using rule 24 (elemento_string -> STRING .)
    ORLOGICAL       reduce using rule 24 (elemento_string -> STRING .)
    COMMA           reduce using rule 24 (elemento_string -> STRING .)
    SEMICOLON       reduce using rule 24 (elemento_string -> STRING .)
    RPAREN          reduce using rule 24 (elemento_string -> STRING .)


state 45

    (25) elemento_string -> STRINGCC .

    IDENTICAL       reduce using rule 25 (elemento_string -> STRINGCC .)
    NOTIDENTICAL    reduce using rule 25 (elemento_string -> STRINGCC .)
    EQUALSLOGICAL   reduce using rule 25 (elemento_string -> STRINGCC .)
    DIFFERENT       reduce using rule 25 (elemento_string -> STRINGCC .)
    GREATEREQUAL    reduce using rule 25 (elemento_string -> STRINGCC .)
    LESSEQUAL       reduce using rule 25 (elemento_string -> STRINGCC .)
    GREATERTHAN     reduce using rule 25 (elemento_string -> STRINGCC .)
    LESSTHAN        reduce using rule 25 (elemento_string -> STRINGCC .)
    ANDlOGICAL      reduce using rule 25 (elemento_string -> STRINGCC .)
    ORLOGICAL       reduce using rule 25 (elemento_string -> STRINGCC .)
    COMMA           reduce using rule 25 (elemento_string -> STRINGCC .)
    SEMICOLON       reduce using rule 25 (elemento_string -> STRINGCC .)
    RPAREN          reduce using rule 25 (elemento_string -> STRINGCC .)


state 46

    (17) elemento_numerico -> LPAREN . elemento_numerico RPAREN
    (31) elemento_logico -> LPAREN . elemento_logico RPAREN
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 46
    VARIABLE        shift and go to state 86
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45

    elemento_numerico              shift and go to state 84
    elemento_logico                shift and go to state 85
    elemento_string                shift and go to state 87

state 47

    (27) elemento_logico -> TRUE .

    IDENTICAL       reduce using rule 27 (elemento_logico -> TRUE .)
    NOTIDENTICAL    reduce using rule 27 (elemento_logico -> TRUE .)
    EQUALSLOGICAL   reduce using rule 27 (elemento_logico -> TRUE .)
    DIFFERENT       reduce using rule 27 (elemento_logico -> TRUE .)
    GREATEREQUAL    reduce using rule 27 (elemento_logico -> TRUE .)
    LESSEQUAL       reduce using rule 27 (elemento_logico -> TRUE .)
    GREATERTHAN     reduce using rule 27 (elemento_logico -> TRUE .)
    LESSTHAN        reduce using rule 27 (elemento_logico -> TRUE .)
    ANDlOGICAL      reduce using rule 27 (elemento_logico -> TRUE .)
    ORLOGICAL       reduce using rule 27 (elemento_logico -> TRUE .)
    COMMA           reduce using rule 27 (elemento_logico -> TRUE .)
    SEMICOLON       reduce using rule 27 (elemento_logico -> TRUE .)
    RPAREN          reduce using rule 27 (elemento_logico -> TRUE .)


state 48

    (28) elemento_logico -> FALSE .

    IDENTICAL       reduce using rule 28 (elemento_logico -> FALSE .)
    NOTIDENTICAL    reduce using rule 28 (elemento_logico -> FALSE .)
    EQUALSLOGICAL   reduce using rule 28 (elemento_logico -> FALSE .)
    DIFFERENT       reduce using rule 28 (elemento_logico -> FALSE .)
    GREATEREQUAL    reduce using rule 28 (elemento_logico -> FALSE .)
    LESSEQUAL       reduce using rule 28 (elemento_logico -> FALSE .)
    GREATERTHAN     reduce using rule 28 (elemento_logico -> FALSE .)
    LESSTHAN        reduce using rule 28 (elemento_logico -> FALSE .)
    ANDlOGICAL      reduce using rule 28 (elemento_logico -> FALSE .)
    ORLOGICAL       reduce using rule 28 (elemento_logico -> FALSE .)
    COMMA           reduce using rule 28 (elemento_logico -> FALSE .)
    SEMICOLON       reduce using rule 28 (elemento_logico -> FALSE .)
    RPAREN          reduce using rule 28 (elemento_logico -> FALSE .)


state 49

    (30) elemento_logico -> NOTLOGICAL . elemento_logico
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49
    LPAREN          shift and go to state 89
    VARIABLE        shift and go to state 90
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45

    elemento_logico                shift and go to state 88
    elemento_numerico              shift and go to state 91
    elemento_string                shift and go to state 87

state 50

    (60) print -> PRINT param . SEMICOLON

    SEMICOLON       shift and go to state 92


state 51

    (62) var_dump -> VAR_DUMP LPAREN . param RPAREN SEMICOLON
    (45) param -> . VARIABLE
    (46) param -> . elemento_string
    (47) param -> . elemento_numerico
    (48) param -> . elemento_logico
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string

    VARIABLE        shift and go to state 40
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49

    param                          shift and go to state 93
    elemento_string                shift and go to state 41
    elemento_numerico              shift and go to state 42
    elemento_logico                shift and go to state 43

state 52

    (61) print_r -> PRINT_R LPAREN . param RPAREN SEMICOLON
    (45) param -> . VARIABLE
    (46) param -> . elemento_string
    (47) param -> . elemento_numerico
    (48) param -> . elemento_logico
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string

    VARIABLE        shift and go to state 40
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49

    param                          shift and go to state 94
    elemento_string                shift and go to state 41
    elemento_numerico              shift and go to state 42
    elemento_logico                shift and go to state 43

state 53

    (63) var_export -> VAR_EXPORT LPAREN . param RPAREN SEMICOLON
    (45) param -> . VARIABLE
    (46) param -> . elemento_string
    (47) param -> . elemento_numerico
    (48) param -> . elemento_logico
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string

    VARIABLE        shift and go to state 40
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49

    param                          shift and go to state 95
    elemento_string                shift and go to state 41
    elemento_numerico              shift and go to state 42
    elemento_logico                shift and go to state 43

state 54

    (69) if_structures -> if else .

    FLOAT           reduce using rule 69 (if_structures -> if else .)
    NUMBER          reduce using rule 69 (if_structures -> if else .)
    LPAREN          reduce using rule 69 (if_structures -> if else .)
    VARIABLE        reduce using rule 69 (if_structures -> if else .)
    VAR             reduce using rule 69 (if_structures -> if else .)
    ECHO            reduce using rule 69 (if_structures -> if else .)
    PRINT           reduce using rule 69 (if_structures -> if else .)
    VAR_DUMP        reduce using rule 69 (if_structures -> if else .)
    PRINT_R         reduce using rule 69 (if_structures -> if else .)
    VAR_EXPORT      reduce using rule 69 (if_structures -> if else .)
    IF              reduce using rule 69 (if_structures -> if else .)
    $end            reduce using rule 69 (if_structures -> if else .)
    RCURLY          reduce using rule 69 (if_structures -> if else .)


state 55

    (70) if_structures -> if else_if . else
    (71) if_structures -> if else_if .
    (76) else_if -> else_if . else_if
    (73) else -> . ELSE LCURLY expresiones RCURLY
    (74) else_if -> . ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (75) else_if -> . ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (76) else_if -> . else_if else_if

    FLOAT           reduce using rule 71 (if_structures -> if else_if .)
    NUMBER          reduce using rule 71 (if_structures -> if else_if .)
    LPAREN          reduce using rule 71 (if_structures -> if else_if .)
    VARIABLE        reduce using rule 71 (if_structures -> if else_if .)
    VAR             reduce using rule 71 (if_structures -> if else_if .)
    ECHO            reduce using rule 71 (if_structures -> if else_if .)
    PRINT           reduce using rule 71 (if_structures -> if else_if .)
    VAR_DUMP        reduce using rule 71 (if_structures -> if else_if .)
    PRINT_R         reduce using rule 71 (if_structures -> if else_if .)
    VAR_EXPORT      reduce using rule 71 (if_structures -> if else_if .)
    IF              reduce using rule 71 (if_structures -> if else_if .)
    $end            reduce using rule 71 (if_structures -> if else_if .)
    RCURLY          reduce using rule 71 (if_structures -> if else_if .)
    ELSE            shift and go to state 56
    ELSEIF          shift and go to state 57
    ElSE_IF         shift and go to state 58

    else_if                        shift and go to state 96
    else                           shift and go to state 97

state 56

    (73) else -> ELSE . LCURLY expresiones RCURLY

    LCURLY          shift and go to state 98


state 57

    (74) else_if -> ELSEIF . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    LPAREN          shift and go to state 99


state 58

    (75) else_if -> ElSE_IF . LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    LPAREN          shift and go to state 100


state 59

    (72) if -> IF LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49
    LPAREN          shift and go to state 89
    VARIABLE        shift and go to state 90
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45

    elemento_logico                shift and go to state 101
    elemento_numerico              shift and go to state 91
    elemento_string                shift and go to state 87

state 60

    (14) elemento_numerico -> elemento_numerico operador elemento_numerico .
    (14) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (19) operador -> . PLUS
    (20) operador -> . MINUS
    (21) operador -> . DIVIDE
    (22) operador -> . EXPONENTIAL
    (23) operador -> . TIMES

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENTIAL resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
    FLOAT           reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    NUMBER          reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    LPAREN          reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    VARIABLE        reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    VAR             reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    ECHO            reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    PRINT           reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    VAR_DUMP        reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    PRINT_R         reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    VAR_EXPORT      reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    IF              reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    $end            reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    RCURLY          reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    RPAREN          reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    IDENTICAL       reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    NOTIDENTICAL    reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    EQUALSLOGICAL   reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    DIFFERENT       reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    GREATEREQUAL    reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    LESSEQUAL       reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    GREATERTHAN     reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    LESSTHAN        reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    ANDlOGICAL      reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    ORLOGICAL       reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    COMMA           reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    SEMICOLON       reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    EXPONENTIAL     shift and go to state 31
    TIMES           shift and go to state 32

  ! PLUS            [ reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! MINUS           [ reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! DIVIDE          [ reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! EXPONENTIAL     [ reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]
  ! TIMES           [ reduce using rule 14 (elemento_numerico -> elemento_numerico operador elemento_numerico .) ]

    operador                       shift and go to state 27

state 61

    (17) elemento_numerico -> LPAREN elemento_numerico RPAREN .

    PLUS            reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    MINUS           reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    DIVIDE          reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    EXPONENTIAL     reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    TIMES           reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    FLOAT           reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    NUMBER          reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    LPAREN          reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    VARIABLE        reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    VAR             reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    ECHO            reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    PRINT           reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    VAR_DUMP        reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    PRINT_R         reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    VAR_EXPORT      reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    IF              reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    $end            reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    RCURLY          reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    RPAREN          reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    IDENTICAL       reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    NOTIDENTICAL    reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    EQUALSLOGICAL   reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    DIFFERENT       reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    GREATEREQUAL    reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    LESSEQUAL       reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    GREATERTHAN     reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    LESSTHAN        reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    ANDlOGICAL      reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    ORLOGICAL       reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    COMMA           reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)
    SEMICOLON       reduce using rule 17 (elemento_numerico -> LPAREN elemento_numerico RPAREN .)


state 62

    (9) var_asignar -> VARIABLE EQUALS VARIABLE . SEMICOLON
    (18) elemento_numerico -> VARIABLE .
    (26) elemento_string -> VARIABLE .
    (32) elemento_logico -> VARIABLE .

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! reduce/reduce conflict for IDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! reduce/reduce conflict for IDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
    SEMICOLON       shift and go to state 102
    PLUS            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)

  ! SEMICOLON       [ reduce using rule 18 (elemento_numerico -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]


state 63

    (10) var_asignar -> VARIABLE EQUALS elemento_numerico . SEMICOLON
    (14) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (33) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (19) operador -> . PLUS
    (20) operador -> . MINUS
    (21) operador -> . DIVIDE
    (22) operador -> . EXPONENTIAL
    (23) operador -> . TIMES
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    SEMICOLON       shift and go to state 103
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    EXPONENTIAL     shift and go to state 31
    TIMES           shift and go to state 32
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    operador                       shift and go to state 27
    comparador                     shift and go to state 82

state 64

    (11) var_asignar -> VARIABLE EQUALS elemento_string . SEMICOLON
    (34) elemento_logico -> elemento_string . comparador elemento_string
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    SEMICOLON       shift and go to state 104
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 71

state 65

    (12) var_asignar -> VARIABLE EQUALS elemento_logico . SEMICOLON
    (29) elemento_logico -> elemento_logico . comparador elemento_logico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    SEMICOLON       shift and go to state 105
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 83

state 66

    (13) var_asignar -> VARIABLE EQUALS funciones_ingreso_datos . SEMICOLON

    SEMICOLON       shift and go to state 106


state 67

    (64) funciones_ingreso_datos -> VAR_EXPORT . LPAREN param COMMA elemento_logico RPAREN

    LPAREN          shift and go to state 107


state 68

    (65) funciones_ingreso_datos -> READLINE . LPAREN RPAREN
    (66) funciones_ingreso_datos -> READLINE . LPAREN elemento_string RPAREN

    LPAREN          shift and go to state 108


state 69

    (59) echo -> ECHO params SEMICOLON .

    FLOAT           reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    NUMBER          reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    LPAREN          reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    VARIABLE        reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    VAR             reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    ECHO            reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    PRINT           reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    VAR_DUMP        reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    PRINT_R         reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    VAR_EXPORT      reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    IF              reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    $end            reduce using rule 59 (echo -> ECHO params SEMICOLON .)
    RCURLY          reduce using rule 59 (echo -> ECHO params SEMICOLON .)


state 70

    (50) params -> param COMMA . params
    (49) params -> . param
    (50) params -> . param COMMA params
    (45) param -> . VARIABLE
    (46) param -> . elemento_string
    (47) param -> . elemento_numerico
    (48) param -> . elemento_logico
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string

    VARIABLE        shift and go to state 40
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49

    param                          shift and go to state 39
    params                         shift and go to state 109
    elemento_string                shift and go to state 41
    elemento_numerico              shift and go to state 42
    elemento_logico                shift and go to state 43

state 71

    (34) elemento_logico -> elemento_string comparador . elemento_string
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    VARIABLE        shift and go to state 111

    elemento_string                shift and go to state 110

state 72

    (35) comparador -> IDENTICAL .

    STRING          reduce using rule 35 (comparador -> IDENTICAL .)
    STRINGCC        reduce using rule 35 (comparador -> IDENTICAL .)
    VARIABLE        reduce using rule 35 (comparador -> IDENTICAL .)
    FLOAT           reduce using rule 35 (comparador -> IDENTICAL .)
    NUMBER          reduce using rule 35 (comparador -> IDENTICAL .)
    LPAREN          reduce using rule 35 (comparador -> IDENTICAL .)
    TRUE            reduce using rule 35 (comparador -> IDENTICAL .)
    FALSE           reduce using rule 35 (comparador -> IDENTICAL .)
    NOTLOGICAL      reduce using rule 35 (comparador -> IDENTICAL .)


state 73

    (36) comparador -> NOTIDENTICAL .

    STRING          reduce using rule 36 (comparador -> NOTIDENTICAL .)
    STRINGCC        reduce using rule 36 (comparador -> NOTIDENTICAL .)
    VARIABLE        reduce using rule 36 (comparador -> NOTIDENTICAL .)
    FLOAT           reduce using rule 36 (comparador -> NOTIDENTICAL .)
    NUMBER          reduce using rule 36 (comparador -> NOTIDENTICAL .)
    LPAREN          reduce using rule 36 (comparador -> NOTIDENTICAL .)
    TRUE            reduce using rule 36 (comparador -> NOTIDENTICAL .)
    FALSE           reduce using rule 36 (comparador -> NOTIDENTICAL .)
    NOTLOGICAL      reduce using rule 36 (comparador -> NOTIDENTICAL .)


state 74

    (37) comparador -> EQUALSLOGICAL .

    STRING          reduce using rule 37 (comparador -> EQUALSLOGICAL .)
    STRINGCC        reduce using rule 37 (comparador -> EQUALSLOGICAL .)
    VARIABLE        reduce using rule 37 (comparador -> EQUALSLOGICAL .)
    FLOAT           reduce using rule 37 (comparador -> EQUALSLOGICAL .)
    NUMBER          reduce using rule 37 (comparador -> EQUALSLOGICAL .)
    LPAREN          reduce using rule 37 (comparador -> EQUALSLOGICAL .)
    TRUE            reduce using rule 37 (comparador -> EQUALSLOGICAL .)
    FALSE           reduce using rule 37 (comparador -> EQUALSLOGICAL .)
    NOTLOGICAL      reduce using rule 37 (comparador -> EQUALSLOGICAL .)


state 75

    (38) comparador -> DIFFERENT .

    STRING          reduce using rule 38 (comparador -> DIFFERENT .)
    STRINGCC        reduce using rule 38 (comparador -> DIFFERENT .)
    VARIABLE        reduce using rule 38 (comparador -> DIFFERENT .)
    FLOAT           reduce using rule 38 (comparador -> DIFFERENT .)
    NUMBER          reduce using rule 38 (comparador -> DIFFERENT .)
    LPAREN          reduce using rule 38 (comparador -> DIFFERENT .)
    TRUE            reduce using rule 38 (comparador -> DIFFERENT .)
    FALSE           reduce using rule 38 (comparador -> DIFFERENT .)
    NOTLOGICAL      reduce using rule 38 (comparador -> DIFFERENT .)


state 76

    (39) comparador -> GREATEREQUAL .

    STRING          reduce using rule 39 (comparador -> GREATEREQUAL .)
    STRINGCC        reduce using rule 39 (comparador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 39 (comparador -> GREATEREQUAL .)
    FLOAT           reduce using rule 39 (comparador -> GREATEREQUAL .)
    NUMBER          reduce using rule 39 (comparador -> GREATEREQUAL .)
    LPAREN          reduce using rule 39 (comparador -> GREATEREQUAL .)
    TRUE            reduce using rule 39 (comparador -> GREATEREQUAL .)
    FALSE           reduce using rule 39 (comparador -> GREATEREQUAL .)
    NOTLOGICAL      reduce using rule 39 (comparador -> GREATEREQUAL .)


state 77

    (40) comparador -> LESSEQUAL .

    STRING          reduce using rule 40 (comparador -> LESSEQUAL .)
    STRINGCC        reduce using rule 40 (comparador -> LESSEQUAL .)
    VARIABLE        reduce using rule 40 (comparador -> LESSEQUAL .)
    FLOAT           reduce using rule 40 (comparador -> LESSEQUAL .)
    NUMBER          reduce using rule 40 (comparador -> LESSEQUAL .)
    LPAREN          reduce using rule 40 (comparador -> LESSEQUAL .)
    TRUE            reduce using rule 40 (comparador -> LESSEQUAL .)
    FALSE           reduce using rule 40 (comparador -> LESSEQUAL .)
    NOTLOGICAL      reduce using rule 40 (comparador -> LESSEQUAL .)


state 78

    (41) comparador -> GREATERTHAN .

    STRING          reduce using rule 41 (comparador -> GREATERTHAN .)
    STRINGCC        reduce using rule 41 (comparador -> GREATERTHAN .)
    VARIABLE        reduce using rule 41 (comparador -> GREATERTHAN .)
    FLOAT           reduce using rule 41 (comparador -> GREATERTHAN .)
    NUMBER          reduce using rule 41 (comparador -> GREATERTHAN .)
    LPAREN          reduce using rule 41 (comparador -> GREATERTHAN .)
    TRUE            reduce using rule 41 (comparador -> GREATERTHAN .)
    FALSE           reduce using rule 41 (comparador -> GREATERTHAN .)
    NOTLOGICAL      reduce using rule 41 (comparador -> GREATERTHAN .)


state 79

    (42) comparador -> LESSTHAN .

    STRING          reduce using rule 42 (comparador -> LESSTHAN .)
    STRINGCC        reduce using rule 42 (comparador -> LESSTHAN .)
    VARIABLE        reduce using rule 42 (comparador -> LESSTHAN .)
    FLOAT           reduce using rule 42 (comparador -> LESSTHAN .)
    NUMBER          reduce using rule 42 (comparador -> LESSTHAN .)
    LPAREN          reduce using rule 42 (comparador -> LESSTHAN .)
    TRUE            reduce using rule 42 (comparador -> LESSTHAN .)
    FALSE           reduce using rule 42 (comparador -> LESSTHAN .)
    NOTLOGICAL      reduce using rule 42 (comparador -> LESSTHAN .)


state 80

    (43) comparador -> ANDlOGICAL .

    STRING          reduce using rule 43 (comparador -> ANDlOGICAL .)
    STRINGCC        reduce using rule 43 (comparador -> ANDlOGICAL .)
    VARIABLE        reduce using rule 43 (comparador -> ANDlOGICAL .)
    FLOAT           reduce using rule 43 (comparador -> ANDlOGICAL .)
    NUMBER          reduce using rule 43 (comparador -> ANDlOGICAL .)
    LPAREN          reduce using rule 43 (comparador -> ANDlOGICAL .)
    TRUE            reduce using rule 43 (comparador -> ANDlOGICAL .)
    FALSE           reduce using rule 43 (comparador -> ANDlOGICAL .)
    NOTLOGICAL      reduce using rule 43 (comparador -> ANDlOGICAL .)


state 81

    (44) comparador -> ORLOGICAL .

    STRING          reduce using rule 44 (comparador -> ORLOGICAL .)
    STRINGCC        reduce using rule 44 (comparador -> ORLOGICAL .)
    VARIABLE        reduce using rule 44 (comparador -> ORLOGICAL .)
    FLOAT           reduce using rule 44 (comparador -> ORLOGICAL .)
    NUMBER          reduce using rule 44 (comparador -> ORLOGICAL .)
    LPAREN          reduce using rule 44 (comparador -> ORLOGICAL .)
    TRUE            reduce using rule 44 (comparador -> ORLOGICAL .)
    FALSE           reduce using rule 44 (comparador -> ORLOGICAL .)
    NOTLOGICAL      reduce using rule 44 (comparador -> ORLOGICAL .)


state 82

    (33) elemento_logico -> elemento_numerico comparador . elemento_numerico
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE

    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10
    VARIABLE        shift and go to state 34

    elemento_numerico              shift and go to state 112

state 83

    (29) elemento_logico -> elemento_logico comparador . elemento_logico
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49
    LPAREN          shift and go to state 89
    VARIABLE        shift and go to state 90
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45

    elemento_logico                shift and go to state 113
    elemento_numerico              shift and go to state 91
    elemento_string                shift and go to state 87

state 84

    (17) elemento_numerico -> LPAREN elemento_numerico . RPAREN
    (14) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (33) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (19) operador -> . PLUS
    (20) operador -> . MINUS
    (21) operador -> . DIVIDE
    (22) operador -> . EXPONENTIAL
    (23) operador -> . TIMES
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    EXPONENTIAL     shift and go to state 31
    TIMES           shift and go to state 32
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    operador                       shift and go to state 27
    comparador                     shift and go to state 82

state 85

    (31) elemento_logico -> LPAREN elemento_logico . RPAREN
    (29) elemento_logico -> elemento_logico . comparador elemento_logico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 114
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 83

state 86

    (18) elemento_numerico -> VARIABLE .
    (32) elemento_logico -> VARIABLE .
    (26) elemento_string -> VARIABLE .

  ! reduce/reduce conflict for RPAREN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    IDENTICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)

  ! RPAREN          [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]


state 87

    (34) elemento_logico -> elemento_string . comparador elemento_string
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 71

state 88

    (30) elemento_logico -> NOTLOGICAL elemento_logico .
    (29) elemento_logico -> elemento_logico . comparador elemento_logico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

  ! shift/reduce conflict for IDENTICAL resolved as shift
  ! shift/reduce conflict for NOTIDENTICAL resolved as shift
  ! shift/reduce conflict for EQUALSLOGICAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for ANDlOGICAL resolved as shift
  ! shift/reduce conflict for ORLOGICAL resolved as shift
    COMMA           reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .)
    SEMICOLON       reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .)
    RPAREN          reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .)
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

  ! IDENTICAL       [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! NOTIDENTICAL    [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! EQUALSLOGICAL   [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! DIFFERENT       [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! GREATEREQUAL    [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! LESSEQUAL       [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! GREATERTHAN     [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! LESSTHAN        [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! ANDlOGICAL      [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]
  ! ORLOGICAL       [ reduce using rule 30 (elemento_logico -> NOTLOGICAL elemento_logico .) ]

    comparador                     shift and go to state 83

state 89

    (31) elemento_logico -> LPAREN . elemento_logico RPAREN
    (17) elemento_numerico -> LPAREN . elemento_numerico RPAREN
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49
    LPAREN          shift and go to state 89
    VARIABLE        shift and go to state 90
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45

    elemento_logico                shift and go to state 85
    elemento_numerico              shift and go to state 115
    elemento_string                shift and go to state 87

state 90

    (32) elemento_logico -> VARIABLE .
    (18) elemento_numerico -> VARIABLE .
    (26) elemento_string -> VARIABLE .

  ! reduce/reduce conflict for IDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for NOTIDENTICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for EQUALSLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ANDlOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
  ! reduce/reduce conflict for ORLOGICAL resolved using rule 18 (elemento_numerico -> VARIABLE .)
    COMMA           reduce using rule 32 (elemento_logico -> VARIABLE .)
    SEMICOLON       reduce using rule 32 (elemento_logico -> VARIABLE .)
    IDENTICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIFFERENT       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATEREQUAL    reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSEQUAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    GREATERTHAN     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    LESSTHAN        reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ANDlOGICAL      reduce using rule 18 (elemento_numerico -> VARIABLE .)
    ORLOGICAL       reduce using rule 18 (elemento_numerico -> VARIABLE .)
    PLUS            reduce using rule 18 (elemento_numerico -> VARIABLE .)
    MINUS           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    DIVIDE          reduce using rule 18 (elemento_numerico -> VARIABLE .)
    EXPONENTIAL     reduce using rule 18 (elemento_numerico -> VARIABLE .)
    TIMES           reduce using rule 18 (elemento_numerico -> VARIABLE .)
    RPAREN          reduce using rule 18 (elemento_numerico -> VARIABLE .)

  ! IDENTICAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 32 (elemento_logico -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! NOTIDENTICAL    [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! EQUALSLOGICAL   [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! DIFFERENT       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! GREATEREQUAL    [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! LESSEQUAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! GREATERTHAN     [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! ANDlOGICAL      [ reduce using rule 26 (elemento_string -> VARIABLE .) ]
  ! ORLOGICAL       [ reduce using rule 26 (elemento_string -> VARIABLE .) ]


state 91

    (33) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (14) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL
    (19) operador -> . PLUS
    (20) operador -> . MINUS
    (21) operador -> . DIVIDE
    (22) operador -> . EXPONENTIAL
    (23) operador -> . TIMES

    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    EXPONENTIAL     shift and go to state 31
    TIMES           shift and go to state 32

    comparador                     shift and go to state 82
    operador                       shift and go to state 27

state 92

    (60) print -> PRINT param SEMICOLON .

    FLOAT           reduce using rule 60 (print -> PRINT param SEMICOLON .)
    NUMBER          reduce using rule 60 (print -> PRINT param SEMICOLON .)
    LPAREN          reduce using rule 60 (print -> PRINT param SEMICOLON .)
    VARIABLE        reduce using rule 60 (print -> PRINT param SEMICOLON .)
    VAR             reduce using rule 60 (print -> PRINT param SEMICOLON .)
    ECHO            reduce using rule 60 (print -> PRINT param SEMICOLON .)
    PRINT           reduce using rule 60 (print -> PRINT param SEMICOLON .)
    VAR_DUMP        reduce using rule 60 (print -> PRINT param SEMICOLON .)
    PRINT_R         reduce using rule 60 (print -> PRINT param SEMICOLON .)
    VAR_EXPORT      reduce using rule 60 (print -> PRINT param SEMICOLON .)
    IF              reduce using rule 60 (print -> PRINT param SEMICOLON .)
    $end            reduce using rule 60 (print -> PRINT param SEMICOLON .)
    RCURLY          reduce using rule 60 (print -> PRINT param SEMICOLON .)


state 93

    (62) var_dump -> VAR_DUMP LPAREN param . RPAREN SEMICOLON

    RPAREN          shift and go to state 116


state 94

    (61) print_r -> PRINT_R LPAREN param . RPAREN SEMICOLON

    RPAREN          shift and go to state 117


state 95

    (63) var_export -> VAR_EXPORT LPAREN param . RPAREN SEMICOLON

    RPAREN          shift and go to state 118


state 96

    (76) else_if -> else_if else_if .
    (76) else_if -> else_if . else_if
    (74) else_if -> . ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (75) else_if -> . ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY
    (76) else_if -> . else_if else_if

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ElSE_IF resolved as shift
    ELSE            reduce using rule 76 (else_if -> else_if else_if .)
    FLOAT           reduce using rule 76 (else_if -> else_if else_if .)
    NUMBER          reduce using rule 76 (else_if -> else_if else_if .)
    LPAREN          reduce using rule 76 (else_if -> else_if else_if .)
    VARIABLE        reduce using rule 76 (else_if -> else_if else_if .)
    VAR             reduce using rule 76 (else_if -> else_if else_if .)
    ECHO            reduce using rule 76 (else_if -> else_if else_if .)
    PRINT           reduce using rule 76 (else_if -> else_if else_if .)
    VAR_DUMP        reduce using rule 76 (else_if -> else_if else_if .)
    PRINT_R         reduce using rule 76 (else_if -> else_if else_if .)
    VAR_EXPORT      reduce using rule 76 (else_if -> else_if else_if .)
    IF              reduce using rule 76 (else_if -> else_if else_if .)
    $end            reduce using rule 76 (else_if -> else_if else_if .)
    RCURLY          reduce using rule 76 (else_if -> else_if else_if .)
    ELSEIF          shift and go to state 57
    ElSE_IF         shift and go to state 58

  ! ELSEIF          [ reduce using rule 76 (else_if -> else_if else_if .) ]
  ! ElSE_IF         [ reduce using rule 76 (else_if -> else_if else_if .) ]

    else_if                        shift and go to state 96

state 97

    (70) if_structures -> if else_if else .

    FLOAT           reduce using rule 70 (if_structures -> if else_if else .)
    NUMBER          reduce using rule 70 (if_structures -> if else_if else .)
    LPAREN          reduce using rule 70 (if_structures -> if else_if else .)
    VARIABLE        reduce using rule 70 (if_structures -> if else_if else .)
    VAR             reduce using rule 70 (if_structures -> if else_if else .)
    ECHO            reduce using rule 70 (if_structures -> if else_if else .)
    PRINT           reduce using rule 70 (if_structures -> if else_if else .)
    VAR_DUMP        reduce using rule 70 (if_structures -> if else_if else .)
    PRINT_R         reduce using rule 70 (if_structures -> if else_if else .)
    VAR_EXPORT      reduce using rule 70 (if_structures -> if else_if else .)
    IF              reduce using rule 70 (if_structures -> if else_if else .)
    $end            reduce using rule 70 (if_structures -> if else_if else .)
    RCURLY          reduce using rule 70 (if_structures -> if else_if else .)


state 98

    (73) else -> ELSE LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . elemento_numerico
    (4) expresion -> . var_asignar
    (5) expresion -> . var_declarar
    (6) expresion -> . expresiones_de_salida
    (7) expresion -> . estructuras_de_control
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (9) var_asignar -> . VARIABLE EQUALS VARIABLE SEMICOLON
    (10) var_asignar -> . VARIABLE EQUALS elemento_numerico SEMICOLON
    (11) var_asignar -> . VARIABLE EQUALS elemento_string SEMICOLON
    (12) var_asignar -> . VARIABLE EQUALS elemento_logico SEMICOLON
    (13) var_asignar -> . VARIABLE EQUALS funciones_ingreso_datos SEMICOLON
    (8) var_declarar -> . VAR var_asignar
    (54) expresiones_de_salida -> . echo
    (55) expresiones_de_salida -> . print
    (56) expresiones_de_salida -> . var_dump
    (57) expresiones_de_salida -> . print_r
    (58) expresiones_de_salida -> . var_export
    (67) estructuras_de_control -> . if_structures
    (59) echo -> . ECHO params SEMICOLON
    (60) print -> . PRINT param SEMICOLON
    (62) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (61) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (63) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (68) if_structures -> . if
    (69) if_structures -> . if else
    (70) if_structures -> . if else_if else
    (71) if_structures -> . if else_if
    (72) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10
    VARIABLE        shift and go to state 11
    VAR             shift and go to state 12
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    VAR_DUMP        shift and go to state 21
    PRINT_R         shift and go to state 22
    VAR_EXPORT      shift and go to state 23
    IF              shift and go to state 25

    expresiones                    shift and go to state 119
    expresion                      shift and go to state 2
    elemento_numerico              shift and go to state 3
    var_asignar                    shift and go to state 4
    var_declarar                   shift and go to state 5
    expresiones_de_salida          shift and go to state 6
    estructuras_de_control         shift and go to state 7
    echo                           shift and go to state 13
    print                          shift and go to state 14
    var_dump                       shift and go to state 15
    print_r                        shift and go to state 16
    var_export                     shift and go to state 17
    if_structures                  shift and go to state 18
    if                             shift and go to state 24

state 99

    (74) else_if -> ELSEIF LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49
    LPAREN          shift and go to state 89
    VARIABLE        shift and go to state 90
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45

    elemento_logico                shift and go to state 120
    elemento_numerico              shift and go to state 91
    elemento_string                shift and go to state 87

state 100

    (75) else_if -> ElSE_IF LPAREN . elemento_logico RPAREN LCURLY expresiones RCURLY
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49
    LPAREN          shift and go to state 89
    VARIABLE        shift and go to state 90
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45

    elemento_logico                shift and go to state 121
    elemento_numerico              shift and go to state 91
    elemento_string                shift and go to state 87

state 101

    (72) if -> IF LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (29) elemento_logico -> elemento_logico . comparador elemento_logico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 122
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 83

state 102

    (9) var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .

    FLOAT           reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    NUMBER          reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    LPAREN          reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    VAR             reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    ECHO            reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    PRINT           reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    VAR_DUMP        reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    PRINT_R         reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    VAR_EXPORT      reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    IF              reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    $end            reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)
    RCURLY          reduce using rule 9 (var_asignar -> VARIABLE EQUALS VARIABLE SEMICOLON .)


state 103

    (10) var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .

    FLOAT           reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    NUMBER          reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    LPAREN          reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    VARIABLE        reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    VAR             reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    ECHO            reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    PRINT           reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    VAR_DUMP        reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    PRINT_R         reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    VAR_EXPORT      reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    IF              reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    $end            reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)
    RCURLY          reduce using rule 10 (var_asignar -> VARIABLE EQUALS elemento_numerico SEMICOLON .)


state 104

    (11) var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .

    FLOAT           reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    NUMBER          reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    LPAREN          reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    VARIABLE        reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    VAR             reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    ECHO            reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    PRINT           reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    VAR_DUMP        reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    PRINT_R         reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    VAR_EXPORT      reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    IF              reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    $end            reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)
    RCURLY          reduce using rule 11 (var_asignar -> VARIABLE EQUALS elemento_string SEMICOLON .)


state 105

    (12) var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .

    FLOAT           reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    NUMBER          reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    LPAREN          reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    VARIABLE        reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    VAR             reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    ECHO            reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    PRINT           reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    VAR_DUMP        reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    PRINT_R         reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    VAR_EXPORT      reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    IF              reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    $end            reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)
    RCURLY          reduce using rule 12 (var_asignar -> VARIABLE EQUALS elemento_logico SEMICOLON .)


state 106

    (13) var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .

    FLOAT           reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    NUMBER          reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    LPAREN          reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    VARIABLE        reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    VAR             reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    ECHO            reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    PRINT           reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    VAR_DUMP        reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    PRINT_R         reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    VAR_EXPORT      reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    IF              reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    $end            reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)
    RCURLY          reduce using rule 13 (var_asignar -> VARIABLE EQUALS funciones_ingreso_datos SEMICOLON .)


state 107

    (64) funciones_ingreso_datos -> VAR_EXPORT LPAREN . param COMMA elemento_logico RPAREN
    (45) param -> . VARIABLE
    (46) param -> . elemento_string
    (47) param -> . elemento_numerico
    (48) param -> . elemento_logico
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string

    VARIABLE        shift and go to state 40
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49

    param                          shift and go to state 123
    elemento_logico                shift and go to state 43
    elemento_string                shift and go to state 41
    elemento_numerico              shift and go to state 42

state 108

    (65) funciones_ingreso_datos -> READLINE LPAREN . RPAREN
    (66) funciones_ingreso_datos -> READLINE LPAREN . elemento_string RPAREN
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    RPAREN          shift and go to state 124
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45
    VARIABLE        shift and go to state 111

    elemento_string                shift and go to state 125

state 109

    (50) params -> param COMMA params .

    SEMICOLON       reduce using rule 50 (params -> param COMMA params .)


state 110

    (34) elemento_logico -> elemento_string comparador elemento_string .

    IDENTICAL       reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    NOTIDENTICAL    reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    EQUALSLOGICAL   reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    DIFFERENT       reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    GREATEREQUAL    reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    LESSEQUAL       reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    GREATERTHAN     reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    LESSTHAN        reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    ANDlOGICAL      reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    ORLOGICAL       reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    COMMA           reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    SEMICOLON       reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)
    RPAREN          reduce using rule 34 (elemento_logico -> elemento_string comparador elemento_string .)


state 111

    (26) elemento_string -> VARIABLE .

    IDENTICAL       reduce using rule 26 (elemento_string -> VARIABLE .)
    NOTIDENTICAL    reduce using rule 26 (elemento_string -> VARIABLE .)
    EQUALSLOGICAL   reduce using rule 26 (elemento_string -> VARIABLE .)
    DIFFERENT       reduce using rule 26 (elemento_string -> VARIABLE .)
    GREATEREQUAL    reduce using rule 26 (elemento_string -> VARIABLE .)
    LESSEQUAL       reduce using rule 26 (elemento_string -> VARIABLE .)
    GREATERTHAN     reduce using rule 26 (elemento_string -> VARIABLE .)
    LESSTHAN        reduce using rule 26 (elemento_string -> VARIABLE .)
    ANDlOGICAL      reduce using rule 26 (elemento_string -> VARIABLE .)
    ORLOGICAL       reduce using rule 26 (elemento_string -> VARIABLE .)
    COMMA           reduce using rule 26 (elemento_string -> VARIABLE .)
    SEMICOLON       reduce using rule 26 (elemento_string -> VARIABLE .)
    RPAREN          reduce using rule 26 (elemento_string -> VARIABLE .)


state 112

    (33) elemento_logico -> elemento_numerico comparador elemento_numerico .
    (14) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (19) operador -> . PLUS
    (20) operador -> . MINUS
    (21) operador -> . DIVIDE
    (22) operador -> . EXPONENTIAL
    (23) operador -> . TIMES

    IDENTICAL       reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    NOTIDENTICAL    reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    EQUALSLOGICAL   reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    DIFFERENT       reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    GREATEREQUAL    reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    LESSEQUAL       reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    GREATERTHAN     reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    LESSTHAN        reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    ANDlOGICAL      reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    ORLOGICAL       reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    COMMA           reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    SEMICOLON       reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    RPAREN          reduce using rule 33 (elemento_logico -> elemento_numerico comparador elemento_numerico .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    EXPONENTIAL     shift and go to state 31
    TIMES           shift and go to state 32

    operador                       shift and go to state 27

state 113

    (29) elemento_logico -> elemento_logico comparador elemento_logico .
    (29) elemento_logico -> elemento_logico . comparador elemento_logico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

  ! shift/reduce conflict for IDENTICAL resolved as shift
  ! shift/reduce conflict for NOTIDENTICAL resolved as shift
  ! shift/reduce conflict for EQUALSLOGICAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for ANDlOGICAL resolved as shift
  ! shift/reduce conflict for ORLOGICAL resolved as shift
    COMMA           reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .)
    SEMICOLON       reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .)
    RPAREN          reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .)
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

  ! IDENTICAL       [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! NOTIDENTICAL    [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! EQUALSLOGICAL   [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! DIFFERENT       [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! GREATEREQUAL    [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! LESSEQUAL       [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! GREATERTHAN     [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! LESSTHAN        [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! ANDlOGICAL      [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]
  ! ORLOGICAL       [ reduce using rule 29 (elemento_logico -> elemento_logico comparador elemento_logico .) ]

    comparador                     shift and go to state 83

state 114

    (31) elemento_logico -> LPAREN elemento_logico RPAREN .

    IDENTICAL       reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    NOTIDENTICAL    reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    EQUALSLOGICAL   reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    DIFFERENT       reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    GREATEREQUAL    reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    LESSEQUAL       reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    GREATERTHAN     reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    LESSTHAN        reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    ANDlOGICAL      reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    ORLOGICAL       reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    COMMA           reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    SEMICOLON       reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)
    RPAREN          reduce using rule 31 (elemento_logico -> LPAREN elemento_logico RPAREN .)


state 115

    (17) elemento_numerico -> LPAREN elemento_numerico . RPAREN
    (33) elemento_logico -> elemento_numerico . comparador elemento_numerico
    (14) elemento_numerico -> elemento_numerico . operador elemento_numerico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL
    (19) operador -> . PLUS
    (20) operador -> . MINUS
    (21) operador -> . DIVIDE
    (22) operador -> . EXPONENTIAL
    (23) operador -> . TIMES

    RPAREN          shift and go to state 61
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    EXPONENTIAL     shift and go to state 31
    TIMES           shift and go to state 32

    comparador                     shift and go to state 82
    operador                       shift and go to state 27

state 116

    (62) var_dump -> VAR_DUMP LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 126


state 117

    (61) print_r -> PRINT_R LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 127


state 118

    (63) var_export -> VAR_EXPORT LPAREN param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 128


state 119

    (73) else -> ELSE LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 129


state 120

    (74) else_if -> ELSEIF LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (29) elemento_logico -> elemento_logico . comparador elemento_logico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 130
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 83

state 121

    (75) else_if -> ElSE_IF LPAREN elemento_logico . RPAREN LCURLY expresiones RCURLY
    (29) elemento_logico -> elemento_logico . comparador elemento_logico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 131
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 83

state 122

    (72) if -> IF LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY

    LCURLY          shift and go to state 132


state 123

    (64) funciones_ingreso_datos -> VAR_EXPORT LPAREN param . COMMA elemento_logico RPAREN

    COMMA           shift and go to state 133


state 124

    (65) funciones_ingreso_datos -> READLINE LPAREN RPAREN .

    SEMICOLON       reduce using rule 65 (funciones_ingreso_datos -> READLINE LPAREN RPAREN .)


state 125

    (66) funciones_ingreso_datos -> READLINE LPAREN elemento_string . RPAREN

    RPAREN          shift and go to state 134


state 126

    (62) var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .

    FLOAT           reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    NUMBER          reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    LPAREN          reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 62 (var_dump -> VAR_DUMP LPAREN param RPAREN SEMICOLON .)


state 127

    (61) print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .

    FLOAT           reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    NUMBER          reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    LPAREN          reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 61 (print_r -> PRINT_R LPAREN param RPAREN SEMICOLON .)


state 128

    (63) var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .

    FLOAT           reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    NUMBER          reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    LPAREN          reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VAR             reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    ECHO            reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    PRINT           reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VAR_DUMP        reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    PRINT_R         reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    VAR_EXPORT      reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    IF              reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    $end            reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)
    RCURLY          reduce using rule 63 (var_export -> VAR_EXPORT LPAREN param RPAREN SEMICOLON .)


state 129

    (73) else -> ELSE LCURLY expresiones RCURLY .

    FLOAT           reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    NUMBER          reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    LPAREN          reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    VAR             reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    IF              reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    $end            reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 73 (else -> ELSE LCURLY expresiones RCURLY .)


state 130

    (74) else_if -> ELSEIF LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY

    LCURLY          shift and go to state 135


state 131

    (75) else_if -> ElSE_IF LPAREN elemento_logico RPAREN . LCURLY expresiones RCURLY

    LCURLY          shift and go to state 136


state 132

    (72) if -> IF LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . elemento_numerico
    (4) expresion -> . var_asignar
    (5) expresion -> . var_declarar
    (6) expresion -> . expresiones_de_salida
    (7) expresion -> . estructuras_de_control
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (9) var_asignar -> . VARIABLE EQUALS VARIABLE SEMICOLON
    (10) var_asignar -> . VARIABLE EQUALS elemento_numerico SEMICOLON
    (11) var_asignar -> . VARIABLE EQUALS elemento_string SEMICOLON
    (12) var_asignar -> . VARIABLE EQUALS elemento_logico SEMICOLON
    (13) var_asignar -> . VARIABLE EQUALS funciones_ingreso_datos SEMICOLON
    (8) var_declarar -> . VAR var_asignar
    (54) expresiones_de_salida -> . echo
    (55) expresiones_de_salida -> . print
    (56) expresiones_de_salida -> . var_dump
    (57) expresiones_de_salida -> . print_r
    (58) expresiones_de_salida -> . var_export
    (67) estructuras_de_control -> . if_structures
    (59) echo -> . ECHO params SEMICOLON
    (60) print -> . PRINT param SEMICOLON
    (62) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (61) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (63) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (68) if_structures -> . if
    (69) if_structures -> . if else
    (70) if_structures -> . if else_if else
    (71) if_structures -> . if else_if
    (72) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10
    VARIABLE        shift and go to state 11
    VAR             shift and go to state 12
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    VAR_DUMP        shift and go to state 21
    PRINT_R         shift and go to state 22
    VAR_EXPORT      shift and go to state 23
    IF              shift and go to state 25

    expresiones                    shift and go to state 137
    expresion                      shift and go to state 2
    elemento_numerico              shift and go to state 3
    var_asignar                    shift and go to state 4
    var_declarar                   shift and go to state 5
    expresiones_de_salida          shift and go to state 6
    estructuras_de_control         shift and go to state 7
    echo                           shift and go to state 13
    print                          shift and go to state 14
    var_dump                       shift and go to state 15
    print_r                        shift and go to state 16
    var_export                     shift and go to state 17
    if_structures                  shift and go to state 18
    if                             shift and go to state 24

state 133

    (64) funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA . elemento_logico RPAREN
    (27) elemento_logico -> . TRUE
    (28) elemento_logico -> . FALSE
    (29) elemento_logico -> . elemento_logico comparador elemento_logico
    (30) elemento_logico -> . NOTLOGICAL elemento_logico
    (31) elemento_logico -> . LPAREN elemento_logico RPAREN
    (32) elemento_logico -> . VARIABLE
    (33) elemento_logico -> . elemento_numerico comparador elemento_numerico
    (34) elemento_logico -> . elemento_string comparador elemento_string
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (24) elemento_string -> . STRING
    (25) elemento_string -> . STRINGCC
    (26) elemento_string -> . VARIABLE

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NOTLOGICAL      shift and go to state 49
    LPAREN          shift and go to state 89
    VARIABLE        shift and go to state 90
    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 44
    STRINGCC        shift and go to state 45

    elemento_logico                shift and go to state 138
    elemento_numerico              shift and go to state 91
    elemento_string                shift and go to state 87

state 134

    (66) funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN .

    SEMICOLON       reduce using rule 66 (funciones_ingreso_datos -> READLINE LPAREN elemento_string RPAREN .)


state 135

    (74) else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . elemento_numerico
    (4) expresion -> . var_asignar
    (5) expresion -> . var_declarar
    (6) expresion -> . expresiones_de_salida
    (7) expresion -> . estructuras_de_control
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (9) var_asignar -> . VARIABLE EQUALS VARIABLE SEMICOLON
    (10) var_asignar -> . VARIABLE EQUALS elemento_numerico SEMICOLON
    (11) var_asignar -> . VARIABLE EQUALS elemento_string SEMICOLON
    (12) var_asignar -> . VARIABLE EQUALS elemento_logico SEMICOLON
    (13) var_asignar -> . VARIABLE EQUALS funciones_ingreso_datos SEMICOLON
    (8) var_declarar -> . VAR var_asignar
    (54) expresiones_de_salida -> . echo
    (55) expresiones_de_salida -> . print
    (56) expresiones_de_salida -> . var_dump
    (57) expresiones_de_salida -> . print_r
    (58) expresiones_de_salida -> . var_export
    (67) estructuras_de_control -> . if_structures
    (59) echo -> . ECHO params SEMICOLON
    (60) print -> . PRINT param SEMICOLON
    (62) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (61) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (63) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (68) if_structures -> . if
    (69) if_structures -> . if else
    (70) if_structures -> . if else_if else
    (71) if_structures -> . if else_if
    (72) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10
    VARIABLE        shift and go to state 11
    VAR             shift and go to state 12
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    VAR_DUMP        shift and go to state 21
    PRINT_R         shift and go to state 22
    VAR_EXPORT      shift and go to state 23
    IF              shift and go to state 25

    expresiones                    shift and go to state 139
    expresion                      shift and go to state 2
    elemento_numerico              shift and go to state 3
    var_asignar                    shift and go to state 4
    var_declarar                   shift and go to state 5
    expresiones_de_salida          shift and go to state 6
    estructuras_de_control         shift and go to state 7
    echo                           shift and go to state 13
    print                          shift and go to state 14
    var_dump                       shift and go to state 15
    print_r                        shift and go to state 16
    var_export                     shift and go to state 17
    if_structures                  shift and go to state 18
    if                             shift and go to state 24

state 136

    (75) else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY . expresiones RCURLY
    (1) expresiones -> . expresion
    (2) expresiones -> . expresion expresiones
    (3) expresion -> . elemento_numerico
    (4) expresion -> . var_asignar
    (5) expresion -> . var_declarar
    (6) expresion -> . expresiones_de_salida
    (7) expresion -> . estructuras_de_control
    (14) elemento_numerico -> . elemento_numerico operador elemento_numerico
    (15) elemento_numerico -> . FLOAT
    (16) elemento_numerico -> . NUMBER
    (17) elemento_numerico -> . LPAREN elemento_numerico RPAREN
    (18) elemento_numerico -> . VARIABLE
    (9) var_asignar -> . VARIABLE EQUALS VARIABLE SEMICOLON
    (10) var_asignar -> . VARIABLE EQUALS elemento_numerico SEMICOLON
    (11) var_asignar -> . VARIABLE EQUALS elemento_string SEMICOLON
    (12) var_asignar -> . VARIABLE EQUALS elemento_logico SEMICOLON
    (13) var_asignar -> . VARIABLE EQUALS funciones_ingreso_datos SEMICOLON
    (8) var_declarar -> . VAR var_asignar
    (54) expresiones_de_salida -> . echo
    (55) expresiones_de_salida -> . print
    (56) expresiones_de_salida -> . var_dump
    (57) expresiones_de_salida -> . print_r
    (58) expresiones_de_salida -> . var_export
    (67) estructuras_de_control -> . if_structures
    (59) echo -> . ECHO params SEMICOLON
    (60) print -> . PRINT param SEMICOLON
    (62) var_dump -> . VAR_DUMP LPAREN param RPAREN SEMICOLON
    (61) print_r -> . PRINT_R LPAREN param RPAREN SEMICOLON
    (63) var_export -> . VAR_EXPORT LPAREN param RPAREN SEMICOLON
    (68) if_structures -> . if
    (69) if_structures -> . if else
    (70) if_structures -> . if else_if else
    (71) if_structures -> . if else_if
    (72) if -> . IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY

    FLOAT           shift and go to state 8
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10
    VARIABLE        shift and go to state 11
    VAR             shift and go to state 12
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    VAR_DUMP        shift and go to state 21
    PRINT_R         shift and go to state 22
    VAR_EXPORT      shift and go to state 23
    IF              shift and go to state 25

    expresiones                    shift and go to state 140
    expresion                      shift and go to state 2
    elemento_numerico              shift and go to state 3
    var_asignar                    shift and go to state 4
    var_declarar                   shift and go to state 5
    expresiones_de_salida          shift and go to state 6
    estructuras_de_control         shift and go to state 7
    echo                           shift and go to state 13
    print                          shift and go to state 14
    var_dump                       shift and go to state 15
    print_r                        shift and go to state 16
    var_export                     shift and go to state 17
    if_structures                  shift and go to state 18
    if                             shift and go to state 24

state 137

    (72) if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 141


state 138

    (64) funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico . RPAREN
    (29) elemento_logico -> elemento_logico . comparador elemento_logico
    (35) comparador -> . IDENTICAL
    (36) comparador -> . NOTIDENTICAL
    (37) comparador -> . EQUALSLOGICAL
    (38) comparador -> . DIFFERENT
    (39) comparador -> . GREATEREQUAL
    (40) comparador -> . LESSEQUAL
    (41) comparador -> . GREATERTHAN
    (42) comparador -> . LESSTHAN
    (43) comparador -> . ANDlOGICAL
    (44) comparador -> . ORLOGICAL

    RPAREN          shift and go to state 142
    IDENTICAL       shift and go to state 72
    NOTIDENTICAL    shift and go to state 73
    EQUALSLOGICAL   shift and go to state 74
    DIFFERENT       shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSTHAN        shift and go to state 79
    ANDlOGICAL      shift and go to state 80
    ORLOGICAL       shift and go to state 81

    comparador                     shift and go to state 83

state 139

    (74) else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 143


state 140

    (75) else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones . RCURLY

    RCURLY          shift and go to state 144


state 141

    (72) if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    ELSE            reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ElSE_IF         reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FLOAT           reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    NUMBER          reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    LPAREN          reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 72 (if -> IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 142

    (64) funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN .

    SEMICOLON       reduce using rule 64 (funciones_ingreso_datos -> VAR_EXPORT LPAREN param COMMA elemento_logico RPAREN .)


state 143

    (74) else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    ELSE            reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ElSE_IF         reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FLOAT           reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    NUMBER          reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    LPAREN          reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 74 (else_if -> ELSEIF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)


state 144

    (75) else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .

    ELSE            reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ELSEIF          reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ElSE_IF         reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    FLOAT           reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    NUMBER          reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    LPAREN          reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VARIABLE        reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR             reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    ECHO            reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT           reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_DUMP        reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    PRINT_R         reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    VAR_EXPORT      reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    IF              reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    $end            reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)
    RCURLY          reduce using rule 75 (else_if -> ElSE_IF LPAREN elemento_logico RPAREN LCURLY expresiones RCURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for EXPONENTIAL in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 62 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 62 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 62 resolved as shift
WARNING: shift/reduce conflict for IDENTICAL in state 88 resolved as shift
WARNING: shift/reduce conflict for NOTIDENTICAL in state 88 resolved as shift
WARNING: shift/reduce conflict for EQUALSLOGICAL in state 88 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 88 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 88 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 88 resolved as shift
WARNING: shift/reduce conflict for ANDlOGICAL in state 88 resolved as shift
WARNING: shift/reduce conflict for ORLOGICAL in state 88 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 96 resolved as shift
WARNING: shift/reduce conflict for ElSE_IF in state 96 resolved as shift
WARNING: shift/reduce conflict for IDENTICAL in state 113 resolved as shift
WARNING: shift/reduce conflict for NOTIDENTICAL in state 113 resolved as shift
WARNING: shift/reduce conflict for EQUALSLOGICAL in state 113 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 113 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 113 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 113 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 113 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 113 resolved as shift
WARNING: shift/reduce conflict for ANDlOGICAL in state 113 resolved as shift
WARNING: shift/reduce conflict for ORLOGICAL in state 113 resolved as shift
WARNING: reduce/reduce conflict in state 40 resolved using rule (elemento_string -> VARIABLE)
WARNING: rejected rule (param -> VARIABLE) in state 40
WARNING: reduce/reduce conflict in state 40 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 40
WARNING: reduce/reduce conflict in state 40 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 40
WARNING: reduce/reduce conflict in state 62 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 62
WARNING: reduce/reduce conflict in state 62 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 62
WARNING: reduce/reduce conflict in state 86 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 86
WARNING: reduce/reduce conflict in state 86 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 86
WARNING: reduce/reduce conflict in state 90 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_logico -> VARIABLE) in state 90
WARNING: reduce/reduce conflict in state 90 resolved using rule (elemento_numerico -> VARIABLE)
WARNING: rejected rule (elemento_string -> VARIABLE) in state 90
WARNING: Rule (param -> VARIABLE) is never reduced
